{"version":3,"file":"bundle.es.js","sources":["../../src/Core/Component.ts","../../src/Helpers/Math.ts","../../src/Helpers/Vector.ts","../../src/Components/RigidBody.ts","../../src/Helpers/Color.ts","../../src/Helpers/Transform.ts","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/native.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/Core/GameObject.ts","../../src/Helpers/Commands.ts","../../src/Core/Plugin.ts","../../src/Core/GameEvent.ts","../../src/Core/PluginOrder.ts","../../src/Plugins/Mouse.ts","../../src/Components/Collider.ts","../../node_modules/flatqueue/index.js","../../node_modules/flatbush/index.js","../../src/Plugins/CollisionDetection.ts","../../src/Plugins/Keyboard.ts","../../src/Plugins/Camera.ts","../../src/Components/Renderers/Renderer.ts","../../src/Components/Renderers/TextRenderer.ts","../../src/Plugins/Config.ts","../../src/Components/Renderers/ColliderRenderer.ts","../../src/Helpers/Animation.ts","../../src/Plugins/StandaloneComponent.ts","../../src/Components/StandaloneComponent.ts","../../src/Components/Animation.ts","../../src/Components/Renderers/PolygonRenderer.ts","../../src/Components/Health.ts","../../src/Components/Renderers/BarRenderer.ts","../../src/Plugins/Scheduler.ts","../../src/Components/Destroyer.ts","../../src/Components/Renderers/BulletRenderer.ts","../../src/Components/Bullet.ts","../../src/Components/Renderers/CanonRenderer.ts","../../src/Components/Renderers/SmokeRenderer.ts","../../src/Components/Canon.ts","../../src/Components/Renderers/ChasisRenderer.ts","../../src/Components/Renderers/TracesRenderer.ts","../../src/Components/Tags.ts","../../src/GameObjectFactory.ts","../../src/Plugins/Hud/Profiler.ts","../../src/Core/GameWorld.ts","../../src/Components/Npc.ts","../../src/Worlds/MyWorld.ts","../../src/Components/Renderers/ImageRenderer.ts","../../src/Plugins/Renderer.ts","../../src/Plugins/Physics.ts","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globals.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/url.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../src/Plugins/CliPlugin.ts","../../node_modules/ansi-up/dist/ansi-up.js","../../src/Plugins/Hud/Console.ts","../../src/Plugins/Client.ts","../../src/Plugins/Player.ts","../../src/main.ts"],"sourcesContent":["import { EventArgs, ISubscriber } from \"./GameEvent\";\r\nimport { GameObject } from \"./GameObject\";\r\nimport { GameWorld } from \"./GameWorld\";\r\nimport { Transform } from \"../Helpers/Transform\";\r\nimport { Plugin } from \"./Plugin\";\r\n\r\nexport abstract class Component implements ISubscriber {\r\n    private enabled: boolean = true;\r\n    private readonly gameObject?: GameObject;\r\n    \r\n    //overideable methods\r\n    protected start(): void{ }\r\n    protected event(args: EventArgs, alias?: string): void{ }\r\n\r\n    public getGameObject(): GameObject | undefined {\r\n        return this.gameObject;\r\n    }\r\n    public getGameWorld(): GameWorld | undefined {\r\n        return this.gameObject?.getGameWorld();\r\n    }\r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T | undefined {\r\n        return this.gameObject?.getGameWorld()?.getPlugin(plugin);\r\n    }\r\n\r\n\r\n    public hasComponent<T extends Component>(classC: new (...args: any[]) => T): boolean{\r\n        return this.gameObject?.hasComponent(classC) ?? false;\r\n    }\r\n    public getComponent<T extends Component>(classC: new (...args: any[]) => T): T | undefined{\r\n        return this.gameObject?.getComponent(classC);\r\n    }\r\n    public getAllComponents(): Component[]{\r\n        return this.gameObject?.getAllComponents() ?? [];\r\n    }\r\n\r\n\r\n    public isEnabled(): boolean{\r\n        return (this.gameObject?.enabled??true) && this.enabled;\r\n    }\r\n    public enable(value=true): void{\r\n        this.enabled=value;\r\n    }\r\n\r\n    \r\n    public getTransform(): Transform | undefined {\r\n        return this.gameObject?.getTransform();\r\n    }\r\n}","export class GMath{\r\n    public static symRand(value: number): number{\r\n        return (2*Math.random()-1)*value;\r\n    }\r\n    public static getColliderRadius(n: number, radius: number): number{\r\n        if(n>=10)\r\n            return radius;\r\n        const angle = Math.PI/n;\r\n        const h = Math.cos(angle)*radius;\r\n        return (2*h+radius)/3;\r\n    }\r\n    public static deltaAngle(a:number, b:number): number{\r\n        a = a%(2*Math.PI)+2*Math.PI\r\n        a = a%(2*Math.PI);\r\n        b = b%(2*Math.PI)+2*Math.PI\r\n        b = b%(2*Math.PI)+2*Math.PI;\r\n\r\n\r\n        return (b-a+Math.PI)%(2*Math.PI)-Math.PI;\r\n    }\r\n    public static elasticCollision1D(m1: number, v1: number, m2: number, v2: number): [number, number] {\r\n        const v1Final = ((v1 * (m1 - m2)) + (2 * m2 * v2)) / (m1 + m2);\r\n        const v2Final = ((v2 * (m2 - m1)) + (2 * m1 * v1)) / (m1 + m2);\r\n    \r\n        return [v1Final, v2Final];\r\n    }\r\n    public static minmax(value: number, min: number, max: number): number {\r\n        if (value < min) return min;\r\n        if (value > max) return max;\r\n        return value;\r\n    }\r\n}","import { GMath } from \"./Math\";\r\n\r\nexport class Vector {\r\n    x : number = 0;\r\n    y : number = 0;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    //standard operators\r\n    add(a: Vector) : Vector{\r\n        return new Vector(this.x+a.x, this.y+a.y);\r\n    }\r\n    sub(a: Vector) : Vector{\r\n        return new Vector(this.x-a.x, this.y-a.y);\r\n    }\r\n    times(a: number) : Vector{\r\n        return new Vector(this.x*a, this.y*a);\r\n    }\r\n    timesV(other: Vector) : Vector{\r\n        return new Vector(this.x*other.x, this.y*other.y);\r\n    }\r\n\r\n    //other operators \r\n    distance(other: Vector){\r\n      return Math.sqrt(Math.pow(this.x-other.x, 2) + Math.pow(this.y-other.y, 2));\r\n    }\r\n    static distance(a: Vector, b: Vector){\r\n      return Math.sqrt(Math.pow(a.x-b.x, 2) + Math.pow(a.y-b.y, 2));\r\n    }\r\n    magnitude(){\r\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n    cross(): Vector{\r\n        return  new Vector(this.y, -this.x).toUnit();\r\n    }\r\n    scalarProduct(v: Vector): number{\r\n        return this.x*v.x+this.y*v.y;\r\n    }\r\n    vectorProduct(v: Vector): number{\r\n        return this.x*v.y-this.y*v.x;\r\n    }\r\n    perpendicular(n: Vector){\r\n        return this.sub(n.cross().times((n.scalarProduct(this))/(n.magnitude()*n.magnitude())));\r\n    }\r\n    toUnit(): Vector{\r\n      if(this.magnitude()!=0)\r\n        return new Vector(this.x, this.y).times(1/this.magnitude());\r\n      else return new Vector(1, 0);\r\n    }\r\n    setLength(length: number): Vector{\r\n        return this.toUnit().times(length);\r\n    }\r\n    toString(): string{\r\n        return \"{\"+this.x+\":\"+this.y+\"}\";\r\n    }\r\n    toRad(): number{\r\n        return Math.atan2(this.y, this.x); // Kąt w radianach\r\n    }\r\n    reverse(): Vector{\r\n        let sx=1e32;\r\n        let sy=1e32;\r\n        if(this.x!=0)\r\n            sx=1/this.x;\r\n        if(this.y!=0)\r\n            sy=1/this.y;\r\n        return new Vector(sx, sy);\r\n    }\r\n    interpolate(target: Vector, k: number): Vector{\r\n        const mx = target.sub(this);\r\n        const mv = mx.sub(mx.times( Math.min(1, Math.max(0, k)) ));\r\n        return this.add(mv);\r\n    }\r\n    static fromRad(rad: number){\r\n        return new Vector(\r\n            Math.cos(rad), \r\n            Math.sin(rad)\r\n        );\r\n    }\r\n    static randomPos(range: number): Vector{\r\n      return new Vector(GMath.symRand(range), GMath.symRand(range));\r\n    }\r\n    static randomPos2(range: number): Vector{\r\n        let angle = GMath.symRand(Math.PI);\r\n        let distance = Math.random()*range;\r\n        return Vector.fromRad(angle).times(distance);\r\n    }\r\n    clone(){\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    //consts\r\n    public static zero(): Vector { return new Vector(0, 0) }\r\n    public static one(): Vector { return new Vector(1, 1) }\r\n    public static up(): Vector { return new Vector(0, 1) }\r\n    public static down(): Vector { return new Vector(0, -1) }\r\n    public static left(): Vector { return new Vector(-1, 0) }\r\n    public static right(): Vector { return new Vector(1, 0) }\r\n}   \r\n","import { Component } from \"../Core/Component\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\n\r\nexport class RigidBodyC extends Component {\r\n    public velocity: Vector;\r\n    public acceleration: Vector = Vector.zero();\r\n    public mass: number = 1;\r\n    public dampingFactor: number;\r\n    public angularVelocity: number = 0;\r\n    public angularAcceleration: number = 0;\r\n    public angularDrag: number = 0.25;\r\n\r\n    constructor(mass: number, dampingFactor=0.45){\r\n        super();\r\n        const s=15;\r\n        this.velocity = new Vector(Math.random()*s*2-s, Math.random()*s*2-s);\r\n        this.dampingFactor = dampingFactor;\r\n        this.mass = mass;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.velocity = this.velocity.add(this.acceleration.times(delta));\r\n        this.velocity = this.velocity.times(Math.pow(this.dampingFactor, delta));\r\n        this.getTransform()!.position = this.getTransform()!.position.add(this.velocity.times(delta));\r\n        this.getTransform()!.position = this.getTransform()!.position.add(this.acceleration.times(delta*delta/2));\r\n\r\n        this.angularVelocity = this.angularVelocity+this.angularAcceleration * delta;\r\n        this.angularVelocity = this.angularVelocity*Math.pow(this.angularDrag, delta);\r\n        this.getTransform()!.rotation += this.angularVelocity * delta;\r\n    }\r\n}","export class rgb{\r\n    public readonly r: number = 0;\r\n    public readonly g: number = 0;\r\n    public readonly b: number = 0;\r\n    public a: number = 1;\r\n  \r\n    public static readonly stroke: rgb = new rgb(43,43,44);\r\n    // public static readonly background: rgb = new rgb(91, 93, 98);\r\n    public static readonly background: rgb = new rgb(93, 97, 95);\r\n    constructor(r: number, g:number, b: number, a: number=1) {\r\n      this.r = Math.min(255, Math.max(0, r));\r\n      this.g = Math.min(255, Math.max(0, g));\r\n      this.b = Math.min(255, Math.max(0, b));\r\n      this.a = Math.min(1, Math.max(0, a));\r\n    }\r\n    public toString(): string{\r\n      return `rgba(${this.r},${this.g},${this.b},${Math.max(0, Math.min(this.a, 1))})`;\r\n    }\r\n    public toRgb(): rgb{\r\n      return new rgb(this.r, this.g, this.b);\r\n    }\r\n    public toArgb(alpha: number){\r\n      return new rgb(this.r, this.g, this.b, alpha);\r\n    }\r\n    public blend(color: rgb, alpha: number): rgb{\r\n      return new rgb(this.r*(1-alpha)+color.r*alpha, this.g*(1-alpha)+color.g*alpha, this.b*(1-alpha)+color.b*alpha, this.a*(1-alpha)+color.a*alpha);\r\n    }\r\n    public static randomColor(): rgb{\r\n      return new rgb(Math.random()*255, Math.random()*255, Math.random()*255);\r\n    }\r\n    public static hslToRgb(h: number, s: number, l: number): rgb {\r\n      s /= 100;\r\n      l /= 100;\r\n      const k = (n: number) => (n + h / 30) % 12;\r\n      const a = s * Math.min(l, 1 - l);\r\n      const f = (n: number) =>\r\n        l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\r\n      const r = Math.round(f(0) * 255);\r\n      const g = Math.round(f(8) * 255);\r\n      const b = Math.round(f(4) * 255);\r\n      \r\n      return new rgb(r, g, b);\r\n    }\r\n    public static randomColor2(): rgb {\r\n      const hue = Math.floor(Math.random() * 360);\r\n      const saturation = Math.floor(Math.random() * 30) + 15;\r\n      const lightness = Math.floor(Math.random() * 20) + 30;\r\n    \r\n      return rgb.hslToRgb(hue, saturation, lightness);\r\n    }\r\n    public static getHeatmapColor(value: number): rgb {\r\n        value = Math.max(0, Math.min(1, value));\r\n        let g = Math.min(255, Math.max(0, Math.floor(255 * value * 2)));\r\n        let r = Math.min(255, Math.max(0, Math.floor(255 * (2 - value * 2))));\r\n        return new rgb(r/1.5, g/1.5, 0, 255);\r\n    }\r\n    \r\n    public static tryParseCssColor(color: string): rgb | undefined{\r\n      let tempElem = document.body;\r\n      let lastColor = tempElem.style.color;\r\n      tempElem.style.color = color;\r\n      let computedColor = getComputedStyle(tempElem).color;\r\n      tempElem.style.color = lastColor;\r\n      return this.getRgbFromComputedStyle(computedColor);\r\n    }\r\n  \r\n    private static getRgbFromComputedStyle(style: string): rgb | undefined {\r\n      let match = style.match(/^rgb(a?)\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)$/);\r\n      if (!match) return undefined;\r\n      return new rgb(\r\n          parseInt(match[2]), \r\n          parseInt(match[3]),\r\n          parseInt(match[4]),\r\n          parseFloat(match[5] ?? 1)\r\n      );\r\n    }\r\n    public clone(): rgb{\r\n      return new rgb(this.r, this.g, this.b, this.a);\r\n    }\r\n  }\r\n  ","import { Vector } from \"./Vector\";\r\n\r\nexport class Transform {\r\n    public position: Vector;\r\n    public rotation: number;\r\n    public scale: Vector;\r\n\r\n    constructor(positon = new Vector(0, 0), rotation = 0, scale = Vector.one()) {\r\n        this.position = positon;\r\n        this.rotation = rotation;\r\n        this.scale = scale;\r\n    }\r\n\r\n    public static fromPosition(position: Vector): Transform {\r\n        let transform: Transform = new Transform();\r\n        transform.position = position;\r\n        return transform;\r\n    }\r\n\r\n    public clone(): Transform{\r\n        let ret = new Transform();\r\n        ret.position=this.position.clone();\r\n        ret.scale=this.scale.clone();\r\n        ret.rotation=this.rotation;\r\n        return ret;\r\n    }\r\n}","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { Component } from \"./Component\";\r\nimport { GameWorld } from \"./GameWorld\";\r\nimport { Transform } from \"../Helpers/Transform\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class GameObject {\r\n    public enabled: boolean = true;\r\n    public name: string = \"UnnamedGameObject\";\r\n    \r\n    private id: string = uuidv4(); \r\n    private transform: Transform = new Transform();\r\n    private components: Map<string, Component> = new Map();\r\n    private extraComponents: Map<string, Component[]> = new Map();\r\n    private gameWorld?: GameWorld;\r\n\r\n    private insertComponent<T extends Component>(component: T): void {\r\n        let name = component.constructor.name;\r\n        if (this.components.has(name)){\r\n            this.extraComponents.set(name, []);\r\n            this.extraComponents.get(name)?.push(component);\r\n        }\r\n        else{\r\n            this.components.set(name, component);\r\n        }\r\n        (component as any).gameObject = this;\r\n    }\r\n\r\n    constructor (...components: Component[]) {\r\n        components.forEach(c => this.insertComponent(c));\r\n    }\r\n    public hasComponent<T extends Component>(classC: new (...args: any[]) => T): boolean{\r\n        return this.components.has(classC.name);\r\n    }\r\n    public getComponent<T extends Component>(classC: new (...args: any[]) => T): T | undefined {\r\n        return this.components.get(classC.name) as T | undefined;\r\n    }\r\n    public getExtraComponent<T extends Component>(classC: new (...args: any[]) => T, index: number): T | undefined {\r\n        return this.components.get(classC.name) as T | undefined;\r\n    }\r\n    public getAllComponents(onlyEnabled: boolean=false): Component[]{\r\n        return Array.from(this.components.values()).filter(c=>onlyEnabled ? c.isEnabled() : true);\r\n    }\r\n\r\n    public getId(): string{\r\n        return this.id;\r\n    }\r\n    public getTransform(): Transform{\r\n        return this.transform;\r\n    }\r\n    public getGameWorld(): GameWorld | undefined {\r\n        if (!this.gameWorld?.hasGameObject(this.id))\r\n            this.gameWorld = undefined;\r\n        return this.gameWorld;\r\n    }\r\n}\r\n\r\n","export class CommandResult {\r\n    public status: boolean;\r\n    public message: string;\r\n    public data: any;\r\n    constructor(status: boolean, message: string, data: any) {\r\n        this.status = status;\r\n        this.message = message;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport function cli(name?: string, argsSyntax?: string, returnType?: string): (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>) => void {\r\n    return function (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>): void {\r\n        const originalMethod = descriptor.value;\r\n        if (originalMethod) {\r\n            name = name??propertyKey;\r\n            returnType = returnType??\"void\";\r\n            argsSyntax = argsSyntax??\"\";\r\n            if (argsSyntax)\r\n                argsSyntax = \" \" + argsSyntax;\r\n            if (returnType)\r\n                returnType = \": \" + returnType;\r\n\r\n            argsSyntax = name+argsSyntax+returnType; \r\n            const ctor = target.constructor;\r\n            if (!Object.prototype.hasOwnProperty.call(ctor, \"commands\")) {\r\n                ctor.commands = Object.assign({}, ctor.commands || {});\r\n            }\r\n            ctor.commands[name] = originalMethod;\r\n            \r\n            if (!Object.prototype.hasOwnProperty.call(ctor, \"syntaxes\")) {\r\n                ctor.syntaxes = Object.assign({}, ctor.syntaxes || {});\r\n            }\r\n            // console.log(\"Adding syntax:\", argsSyntax);\r\n            ctor.syntaxes[name] = argsSyntax;\r\n        }\r\n    };\r\n}\r\n\r\n// export function gameCommand(\r\n//     target: any, \r\n//     propertyKey: string, \r\n//     descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>,\r\n// ): void {\r\n//     // console.log(target);\r\n\r\n\r\n//     const originalMethod = descriptor.value;\r\n//     if (originalMethod) {\r\n//         const ctor = target.constructor;\r\n//         if (!Object.prototype.hasOwnProperty.call(ctor, \"commands\")) {\r\n//             ctor.commands = Object.assign({}, ctor.commands || {});\r\n//         }\r\n//         ctor.commands[propertyKey] = descriptor.value;\r\n//     }\r\n// }\r\n\r\nexport function cliPlugin(name: string): (target: any) => void {\r\n    return function (target: any): void {\r\n        target.prototype.cliGetName = function (): string { return name; };\r\n    };\r\n}","import { GameWorld } from \"../Core/GameWorld\";\r\nimport { EventArgs, ISubscriber } from \"./GameEvent\";\r\nimport { cli, CommandResult } from \"../Helpers/Commands\";\r\nimport { PluginOrder } from \"./PluginOrder\";\r\n\r\n\r\n//WorldComponent = Plugin\r\nexport abstract class Plugin implements ISubscriber {\r\n    protected gameWorld!: GameWorld;\r\n    protected enabled: boolean = true;\r\n    public readonly name: string = \"Plugin\";\r\n    public abstract readonly order: PluginOrder;\r\n\r\n    //overideable methods\r\n    protected event(args: EventArgs, alias?: string): void {}\r\n    protected start(): void { }\r\n    protected update(delta: number): void { }\r\n    \r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T{\r\n        return this.gameWorld.getPlugin(plugin);\r\n    }\r\n    public hasPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): boolean{\r\n        return this.gameWorld.hasPlugin(plugin);\r\n    }\r\n\r\n    public isEnabled(): boolean{\r\n        return this.enabled;\r\n    }\r\n    public enable(value=true): void{\r\n        this.enabled=value;\r\n    }\r\n    public disable(): void {\r\n        this.enabled = false;\r\n    }\r\n\r\n\r\n    protected cliGetName(): string {\r\n        return this.name;\r\n    }\r\n    // @cli(\"help\")\r\n    // protected help(): CommandResult {\r\n    //     let message = `${this.cliGetName()} commands:\\n`;\r\n    //     for (const element of Object.values((this as any).constructor[\"syntaxes\"])) {\r\n    //         message += `/${this.cliGetName()}:${element}\\n`;\r\n    //     }\r\n    //     return new CommandResult(true, message, undefined);\r\n    // }\r\n    // @cli(\"enable\")\r\n    // private cliEnable(): CommandResult {\r\n    //     this.enabled = true;\r\n    //     return new CommandResult(true, `${this.name} enabled`, undefined);\r\n    // }\r\n    // @cli(\"disable\")\r\n    // private cliDisable(): CommandResult {\r\n    //     this.enabled = false;\r\n    //     return new CommandResult(true, `${this.name} disabled`, undefined);\r\n    // }\r\n    @cli(\"help\")\r\n    protected help(): CommandResult {\r\n        const BLUE = \"\\x1b[36m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        let message = `${BLUE}${this.cliGetName()}${RESET} commands:\\n`;\r\n        for (const element of Object.values((this as any).constructor[\"syntaxes\"])) {\r\n            message += `  /${this.cliGetName()}:${element}\\n`;\r\n        }\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n\r\n    @cli(\"enable\")\r\n    private cliEnable(): CommandResult {\r\n        const GREEN = \"\\x1b[32m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        this.enabled = true;\r\n        return new CommandResult(true, `${this.name} ${GREEN}enabled${RESET}`, undefined);\r\n    }\r\n\r\n    @cli(\"disable\")\r\n    private cliDisable(): CommandResult {\r\n        const RED = \"\\x1b[31m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        this.enabled = false;\r\n        return new CommandResult(true, `${this.name} ${RED}disabled${RESET}`, undefined);\r\n    }\r\n}","import { GameWorld } from \"./GameWorld\";\r\n\r\nexport class EventArgs{\r\n    constructor(){}    \r\n}\r\n\r\nexport interface ISubscriber{\r\n    // event(args: EventArgs, alias?: string): void;\r\n}\r\n\r\nexport class GameEvent{\r\n    private subs: Map<WeakRef<ISubscriber>, string|undefined> = new Map();\r\n    private args: Array<EventArgs> = [];\r\n\r\n    public subscribe(sub: ISubscriber, alias?: string): void{\r\n        this.subs.set(new WeakRef(sub), alias);\r\n    }\r\n    public unsubscribe(sub: ISubscriber){\r\n        this.subs.delete(new WeakRef(sub));\r\n    }\r\n\r\n    public emit(args: EventArgs): void{\r\n        this.args.push(args);\r\n    }\r\n    public register(gameWorld: GameWorld): void{\r\n        gameWorld.registerEvent(this);\r\n    }\r\n\r\n    private invoke(): void{\r\n        if (this.args.length == 0)\r\n            return;\r\n        for (const [sub, alias] of this.subs){\r\n            const derefSub = sub.deref();\r\n            if(!derefSub){\r\n                this.subs.delete(sub);\r\n                continue;\r\n            }\r\n            for (const args of this.args)\r\n                (derefSub as any).event(args, alias);\r\n        }\r\n        this.args = [];\r\n    }\r\n}","// Input → Update → Physics → Collision → Events → Render\r\nexport enum PluginOrder {\r\n    None = -1, // no update\r\n    Input = 0,\r\n    Update = 1,\r\n    Physics = 2,\r\n    Collision = 3,\r\n    Render = 4,\r\n}","import { Vector } from \"../Helpers/Vector\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { EventArgs, GameEvent } from \"../Core/GameEvent\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class MouseScrollEventArgs extends EventArgs{\r\n    public delta: number;\r\n    constructor(delta: number){\r\n        super();\r\n        this.delta = delta;\r\n    }\r\n}\r\n\r\nexport class MouseClickEventArgs extends EventArgs{\r\n    public button: number;\r\n    constructor(button: number){\r\n        super();\r\n        this.button = button;\r\n    }\r\n}\r\n\r\nexport class MousePlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"MousePlugin\";\r\n    public mouseScrollYEvent = new GameEvent();\r\n    public mouseDownEvent = new GameEvent();\r\n    public mouseUpEvent = new GameEvent();\r\n    private readonly pressedKeys = new Set<number>();\r\n    private readonly canvas: HTMLCanvasElement;\r\n    private position: Vector = Vector.zero();\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super();\r\n        this.canvas = canvas;\r\n        this.trackMouse(canvas);\r\n    }\r\n    \r\n    protected override start(): void {\r\n        this.mouseScrollYEvent.register(this.gameWorld);\r\n        this.mouseDownEvent.register(this.gameWorld);\r\n        this.mouseUpEvent.register(this.gameWorld);\r\n    } \r\n   \r\n    public isKeyDown(key: number=0): boolean {\r\n        return this.pressedKeys.has(key);\r\n    }\r\n\r\n    public getMouseScreenPosition(): Vector{\r\n        const scale = window.devicePixelRatio || 1;\r\n        // const canvasSize = new Vector(this.canvas.width, this.canvas.height);\r\n        let screenPosition = new Vector((this.position.x*scale), (this.position.y*scale));\r\n        return screenPosition;\r\n    }\r\n\r\n    public trackMouse(canvas: HTMLCanvasElement): void {\r\n        canvas.addEventListener(\"mousemove\", (event) => {\r\n            const rect = canvas.getBoundingClientRect();\r\n            let x = event.clientX - rect.left;\r\n            let y = event.clientY - rect.top;\r\n            this.position = new Vector(x, y);\r\n        });\r\n        canvas.addEventListener(\"mousedown\", (event) => {\r\n            this.pressedKeys.add(event.button);\r\n            this.mouseDownEvent.emit(new MouseClickEventArgs(event.button));\r\n        });\r\n        canvas.addEventListener(\"mouseup\", (event) => {\r\n            this.pressedKeys.delete(event.button);\r\n            this.mouseUpEvent.emit(new MouseClickEventArgs(event.button));\r\n        });    \r\n        canvas.addEventListener(\"wheel\", (event) => {\r\n            this.mouseScrollYEvent.emit(new MouseScrollEventArgs(event.deltaY))\r\n        });\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\nimport { EventArgs, GameEvent } from \"../Core/GameEvent\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\n\r\n\r\nexport interface RBushItem {\r\n    colliderId: string;\r\n    minX: number;\r\n    minY: number;\r\n    maxX: number;\r\n    maxY: number;\r\n}\r\n\r\n\r\nexport class CollisionEventArgs extends EventArgs{\r\n    public collider: ColliderC;\r\n    constructor(collider: ColliderC) {\r\n        super();\r\n        this.collider = collider;\r\n    }\r\n}\r\n\r\nexport class ColliderC extends Component {\r\n    public offset: Vector = Vector.zero();\r\n    public radius: number;\r\n    public isActive: boolean = false;\r\n    public isStatic: boolean;\r\n    // public layer: number;\r\n    public avoidObjectes: WeakSet<GameObject>;\r\n    public collisions: Set<ColliderC> = new Set<ColliderC>();\r\n    public onCollisionEnterEvent: GameEvent = new GameEvent(); \r\n    public onCollisionExitEvent: GameEvent = new GameEvent(); \r\n\r\n\r\n    constructor(radius: number = 1, isStatic: boolean = true, ...avoidObjectes: GameObject[]){\r\n        super();\r\n        this.radius = radius;\r\n        this.isStatic = isStatic;\r\n        this.avoidObjectes = new Set();\r\n        avoidObjectes.forEach(ao => this.avoidObjectes.add(ao))\r\n    }\r\n\r\n    protected override start(): void {\r\n        this.onCollisionEnterEvent.register(this.getGameWorld()!);\r\n        this.onCollisionExitEvent.register(this.getGameWorld()!);\r\n    }\r\n\r\n    public getCenter(): Vector {\r\n        return this.getTransform()!.position.add(this.offset);\r\n    }\r\n\r\n    public getAABB(): RBushItem { \r\n        const center = this.getCenter();\r\n        return {\r\n            colliderId: this.getGameObject()!.getId(),\r\n            minX: center.x - this.radius,\r\n            minY: center.y - this.radius,\r\n            maxX: center.x + this.radius,\r\n            maxY: center.y + this.radius\r\n        };\r\n    }\r\n\r\n\r\n    public collides(other: ColliderC): boolean {\r\n        return ( (this.getCenter())\r\n        .sub(other.getCenter())\r\n        .magnitude() <= this.radius+other.radius )\r\n        && !this.avoidObjectes.has(other.getGameObject()!) && !other.avoidObjectes.has(this.getGameObject()!);\r\n    }\r\n\r\n    public onCollisionEnter(other: ColliderC): void{\r\n        this.onCollisionEnterEvent.emit(new CollisionEventArgs(other));\r\n    }\r\n\r\n    public onCollisionExit(other: ColliderC): void{\r\n        this.onCollisionExitEvent.emit(new CollisionEventArgs(other));\r\n    }\r\n}","\nexport default class FlatQueue {\n\n    constructor() {\n        this.ids = [];\n        this.values = [];\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = 0;\n    }\n\n    push(id, value) {\n        let pos = this.length++;\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentValue = this.values[parent];\n            if (value >= parentValue) break;\n            this.ids[pos] = this.ids[parent];\n            this.values[pos] = parentValue;\n            pos = parent;\n        }\n\n        this.ids[pos] = id;\n        this.values[pos] = value;\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.ids[0];\n        this.length--;\n\n        if (this.length > 0) {\n            const id = this.ids[0] = this.ids[this.length];\n            const value = this.values[0] = this.values[this.length];\n            const halfLength = this.length >> 1;\n            let pos = 0;\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                const right = left + 1;\n                let bestIndex = this.ids[left];\n                let bestValue = this.values[left];\n                const rightValue = this.values[right];\n\n                if (right < this.length && rightValue < bestValue) {\n                    left = right;\n                    bestIndex = this.ids[right];\n                    bestValue = rightValue;\n                }\n                if (bestValue >= value) break;\n\n                this.ids[pos] = bestIndex;\n                this.values[pos] = bestValue;\n                pos = left;\n            }\n\n            this.ids[pos] = id;\n            this.values[pos] = value;\n        }\n\n        return top;\n    }\n\n    peek() {\n        if (this.length === 0) return undefined;\n        return this.ids[0];\n    }\n\n    peekValue() {\n        if (this.length === 0) return undefined;\n        return this.values[0];\n    }\n\n    shrink() {\n        this.ids.length = this.values.length = this.length;\n    }\n}\n","import FlatQueue from 'flatqueue';\n\nconst ARRAY_TYPES = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\nconst VERSION = 3; // serialized format version\n\n/** @typedef {Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor} TypedArrayConstructor */\n\nexport default class Flatbush {\n\n    /**\n     * Recreate a Flatbush index from raw `ArrayBuffer` or `SharedArrayBuffer` data.\n     * @param {ArrayBuffer | SharedArrayBuffer} data\n     * @param {number} [byteOffset=0] byte offset to the start of the Flatbush buffer in the referenced ArrayBuffer.\n     * @returns {Flatbush} index\n     */\n    static from(data, byteOffset = 0) {\n        if (byteOffset % 8 !== 0) {\n            throw new Error('byteOffset must be 8-byte aligned.');\n        }\n\n        // @ts-expect-error duck typing array buffers\n        if (!data || data.byteLength === undefined || data.buffer) {\n            throw new Error('Data must be an instance of ArrayBuffer or SharedArrayBuffer.');\n        }\n\n        const [magic, versionAndType] = new Uint8Array(data, byteOffset + 0, 2);\n        if (magic !== 0xfb) {\n            throw new Error('Data does not appear to be in a Flatbush format.');\n        }\n        const version = versionAndType >> 4;\n        if (version !== VERSION) {\n            throw new Error(`Got v${version} data when expected v${VERSION}.`);\n        }\n        const ArrayType = ARRAY_TYPES[versionAndType & 0x0f];\n        if (!ArrayType) {\n            throw new Error('Unrecognized array type.');\n        }\n        const [nodeSize] = new Uint16Array(data, byteOffset + 2, 1);\n        const [numItems] = new Uint32Array(data, byteOffset + 4, 1);\n\n        return new Flatbush(numItems, nodeSize, ArrayType, undefined, data, byteOffset);\n    }\n\n    /**\n     * Create a Flatbush index that will hold a given number of items.\n     * @param {number} numItems\n     * @param {number} [nodeSize=16] Size of the tree node (16 by default).\n     * @param {TypedArrayConstructor} [ArrayType=Float64Array] The array type used for coordinates storage (`Float64Array` by default).\n     * @param {ArrayBufferConstructor | SharedArrayBufferConstructor} [ArrayBufferType=ArrayBuffer] The array buffer type used to store data (`ArrayBuffer` by default).\n     * @param {ArrayBuffer | SharedArrayBuffer} [data] (Only used internally)\n     * @param {number} [byteOffset=0] (Only used internally)\n     */\n    constructor(numItems, nodeSize = 16, ArrayType = Float64Array, ArrayBufferType = ArrayBuffer, data, byteOffset = 0) {\n        if (numItems === undefined) throw new Error('Missing required argument: numItems.');\n        if (isNaN(numItems) || numItems <= 0) throw new Error(`Unexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n        this.byteOffset = byteOffset;\n\n        // calculate the total number of nodes in the R-tree to allocate space for\n        // and the index of each tree level (used in search later)\n        let n = numItems;\n        let numNodes = n;\n        this._levelBounds = [n * 4];\n        do {\n            n = Math.ceil(n / this.nodeSize);\n            numNodes += n;\n            this._levelBounds.push(numNodes * 4);\n        } while (n !== 1);\n\n        this.ArrayType = ArrayType;\n        this.IndexArrayType = numNodes < 16384 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const nodesByteSize = numNodes * 4 * this.ArrayType.BYTES_PER_ELEMENT;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        // @ts-expect-error duck typing array buffers\n        if (data && data.byteLength !== undefined && !data.buffer) {\n            this.data = data;\n            this._boxes = new this.ArrayType(this.data, byteOffset + 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, byteOffset + 8 + nodesByteSize, numNodes);\n\n            this._pos = numNodes * 4;\n            this.minX = this._boxes[this._pos - 4];\n            this.minY = this._boxes[this._pos - 3];\n            this.maxX = this._boxes[this._pos - 2];\n            this.maxY = this._boxes[this._pos - 1];\n\n        } else {\n            this.data = new ArrayBufferType(8 + nodesByteSize + numNodes * this.IndexArrayType.BYTES_PER_ELEMENT);\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n            this._pos = 0;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = -Infinity;\n            this.maxY = -Infinity;\n\n            new Uint8Array(this.data, 0, 2).set([0xfb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n\n        // a priority queue for k-nearest-neighbors queries\n        /** @type FlatQueue<number> */\n        this._queue = new FlatQueue();\n    }\n\n    /**\n     * Add a given rectangle to the index.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @returns {number} A zero-based, incremental number that represents the newly added rectangle.\n     */\n    add(minX, minY, maxX = minX, maxY = minY) {\n        const index = this._pos >> 2;\n        const boxes = this._boxes;\n        this._indices[index] = index;\n        boxes[this._pos++] = minX;\n        boxes[this._pos++] = minY;\n        boxes[this._pos++] = maxX;\n        boxes[this._pos++] = maxY;\n\n        if (minX < this.minX) this.minX = minX;\n        if (minY < this.minY) this.minY = minY;\n        if (maxX > this.maxX) this.maxX = maxX;\n        if (maxY > this.maxY) this.maxY = maxY;\n\n        return index;\n    }\n\n    /** Perform indexing of the added rectangles. */\n    finish() {\n        if (this._pos >> 2 !== this.numItems) {\n            throw new Error(`Added ${this._pos >> 2} items when expected ${this.numItems}.`);\n        }\n        const boxes = this._boxes;\n\n        if (this.numItems <= this.nodeSize) {\n            // only one node, skip sorting and just fill the root box\n            boxes[this._pos++] = this.minX;\n            boxes[this._pos++] = this.minY;\n            boxes[this._pos++] = this.maxX;\n            boxes[this._pos++] = this.maxY;\n            return;\n        }\n\n        const width = (this.maxX - this.minX) || 1;\n        const height = (this.maxY - this.minY) || 1;\n        const hilbertValues = new Uint32Array(this.numItems);\n        const hilbertMax = (1 << 16) - 1;\n\n        // map item centers into Hilbert coordinate space and calculate Hilbert values\n        for (let i = 0, pos = 0; i < this.numItems; i++) {\n            const minX = boxes[pos++];\n            const minY = boxes[pos++];\n            const maxX = boxes[pos++];\n            const maxY = boxes[pos++];\n            const x = Math.floor(hilbertMax * ((minX + maxX) / 2 - this.minX) / width);\n            const y = Math.floor(hilbertMax * ((minY + maxY) / 2 - this.minY) / height);\n            hilbertValues[i] = hilbert(x, y);\n        }\n\n        // sort items by their Hilbert value (for packing later)\n        sort(hilbertValues, boxes, this._indices, 0, this.numItems - 1, this.nodeSize);\n\n        // generate nodes at each tree level, bottom-up\n        for (let i = 0, pos = 0; i < this._levelBounds.length - 1; i++) {\n            const end = this._levelBounds[i];\n\n            // generate a parent node for each block of consecutive <nodeSize> nodes\n            while (pos < end) {\n                const nodeIndex = pos;\n\n                // calculate bbox for the new node\n                let nodeMinX = boxes[pos++];\n                let nodeMinY = boxes[pos++];\n                let nodeMaxX = boxes[pos++];\n                let nodeMaxY = boxes[pos++];\n                for (let j = 1; j < this.nodeSize && pos < end; j++) {\n                    nodeMinX = Math.min(nodeMinX, boxes[pos++]);\n                    nodeMinY = Math.min(nodeMinY, boxes[pos++]);\n                    nodeMaxX = Math.max(nodeMaxX, boxes[pos++]);\n                    nodeMaxY = Math.max(nodeMaxY, boxes[pos++]);\n                }\n\n                // add the new node to the tree data\n                this._indices[this._pos >> 2] = nodeIndex;\n                boxes[this._pos++] = nodeMinX;\n                boxes[this._pos++] = nodeMinY;\n                boxes[this._pos++] = nodeMaxX;\n                boxes[this._pos++] = nodeMaxY;\n            }\n        }\n    }\n\n    /**\n     * Search the index by a bounding box.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @param {(index: number) => boolean} [filterFn] An optional function for filtering the results.\n     * @returns {number[]} An array of indices of items intersecting or touching the given bounding box.\n     */\n    search(minX, minY, maxX, maxY, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        /** @type number | undefined */\n        let nodeIndex = this._boxes.length - 4;\n        const queue = [];\n        const results = [];\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // search through child nodes\n            for (let /** @type number */ pos = nodeIndex; pos < end; pos += 4) {\n                // check if node bbox intersects with query bbox\n                if (maxX < this._boxes[pos]) continue; // maxX < nodeMinX\n                if (maxY < this._boxes[pos + 1]) continue; // maxY < nodeMinY\n                if (minX > this._boxes[pos + 2]) continue; // minX > nodeMaxX\n                if (minY > this._boxes[pos + 3]) continue; // minY > nodeMaxY\n\n                const index = this._indices[pos >> 2] | 0;\n\n                if (nodeIndex >= this.numItems * 4) {\n                    queue.push(index); // node; add it to the search queue\n\n                } else if (filterFn === undefined || filterFn(index)) {\n                    results.push(index); // leaf item\n                }\n            }\n\n            nodeIndex = queue.pop();\n        }\n\n        return results;\n    }\n\n    /**\n     * Search items in order of distance from the given point.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} [maxResults=Infinity]\n     * @param {number} [maxDistance=Infinity]\n     * @param {(index: number) => boolean} [filterFn] An optional function for filtering the results.\n     * @returns {number[]} An array of indices of items found.\n     */\n    neighbors(x, y, maxResults = Infinity, maxDistance = Infinity, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        /** @type number | undefined */\n        let nodeIndex = this._boxes.length - 4;\n        const q = this._queue;\n        const results = [];\n        const maxDistSquared = maxDistance * maxDistance;\n\n        outer: while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // add child nodes to the queue\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2] | 0;\n\n                const dx = axisDist(x, this._boxes[pos], this._boxes[pos + 2]);\n                const dy = axisDist(y, this._boxes[pos + 1], this._boxes[pos + 3]);\n                const dist = dx * dx + dy * dy;\n                if (dist > maxDistSquared) continue;\n\n                if (nodeIndex >= this.numItems * 4) {\n                    q.push(index << 1, dist); // node (use even id)\n\n                } else if (filterFn === undefined || filterFn(index)) {\n                    q.push((index << 1) + 1, dist); // leaf item (use odd id)\n                }\n            }\n\n            // pop items from the queue\n            // @ts-expect-error q.length check eliminates undefined values\n            while (q.length && (q.peek() & 1)) {\n                const dist = q.peekValue();\n                // @ts-expect-error\n                if (dist > maxDistSquared) break outer;\n                // @ts-expect-error\n                results.push(q.pop() >> 1);\n                if (results.length === maxResults) break outer;\n            }\n\n            // @ts-expect-error\n            nodeIndex = q.length ? q.pop() >> 1 : undefined;\n        }\n\n        q.clear();\n        return results;\n    }\n}\n\n/**\n * 1D distance from a value to a range.\n * @param {number} k\n * @param {number} min\n * @param {number} max\n */\nfunction axisDist(k, min, max) {\n    return k < min ? min - k : k <= max ? 0 : k - max;\n}\n\n/**\n * Binary search for the first value in the array bigger than the given.\n * @param {number} value\n * @param {number[]} arr\n */\nfunction upperBound(value, arr) {\n    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        const m = (i + j) >> 1;\n        if (arr[m] > value) {\n            j = m;\n        } else {\n            i = m + 1;\n        }\n    }\n    return arr[i];\n}\n\n/**\n * Custom quicksort that partially sorts bbox data alongside the hilbert values.\n * @param {Uint32Array} values\n * @param {InstanceType<TypedArrayConstructor>} boxes\n * @param {Uint16Array | Uint32Array} indices\n * @param {number} left\n * @param {number} right\n * @param {number} nodeSize\n */\nfunction sort(values, boxes, indices, left, right, nodeSize) {\n    if (Math.floor(left / nodeSize) >= Math.floor(right / nodeSize)) return;\n\n    const pivot = values[(left + right) >> 1];\n    let i = left - 1;\n    let j = right + 1;\n\n    while (true) {\n        do i++; while (values[i] < pivot);\n        do j--; while (values[j] > pivot);\n        if (i >= j) break;\n        swap(values, boxes, indices, i, j);\n    }\n\n    sort(values, boxes, indices, left, j, nodeSize);\n    sort(values, boxes, indices, j + 1, right, nodeSize);\n}\n\n/**\n * Swap two values and two corresponding boxes.\n * @param {Uint32Array} values\n * @param {InstanceType<TypedArrayConstructor>} boxes\n * @param {Uint16Array | Uint32Array} indices\n * @param {number} i\n * @param {number} j\n */\nfunction swap(values, boxes, indices, i, j) {\n    const temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n\n    const k = 4 * i;\n    const m = 4 * j;\n\n    const a = boxes[k];\n    const b = boxes[k + 1];\n    const c = boxes[k + 2];\n    const d = boxes[k + 3];\n    boxes[k] = boxes[m];\n    boxes[k + 1] = boxes[m + 1];\n    boxes[k + 2] = boxes[m + 2];\n    boxes[k + 3] = boxes[m + 3];\n    boxes[m] = a;\n    boxes[m + 1] = b;\n    boxes[m + 2] = c;\n    boxes[m + 3] = d;\n\n    const e = indices[i];\n    indices[i] = indices[j];\n    indices[j] = e;\n}\n\n/**\n * Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n * Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\n * @param {number} x\n * @param {number} y\n */\nfunction hilbert(x, y) {\n    let a = x ^ y;\n    let b = 0xFFFF ^ a;\n    let c = 0xFFFF ^ (x | y);\n    let d = x & (y ^ 0xFFFF);\n\n    let A = a | (b >> 1);\n    let B = (a >> 1) ^ a;\n    let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n    let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n    B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n    C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n    D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n    B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n    C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n    D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n    a = A; b = B; c = C; d = D;\n    C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n    D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n    a = C ^ (C >> 1);\n    b = D ^ (D >> 1);\n\n    let i0 = x ^ y;\n    let i1 = b | (0xFFFF ^ (i0 | a));\n\n    i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n    i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n    i0 = (i0 | (i0 << 2)) & 0x33333333;\n    i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n    i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n    i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n    i1 = (i1 | (i1 << 2)) & 0x33333333;\n    i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n    return ((i1 << 1) | i0) >>> 0;\n}\n","import { ColliderC, RBushItem } from \"../Components/Collider\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport Flatbush from \"flatbush\";\r\nimport { main } from \"../main\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class CollisionDetectionPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Collision;\r\n    public name: string = \"CollisionDetectionPlugin\";\r\n    private data: RBushItem[] = [];\r\n    private tree!: Flatbush;\r\n\r\n    override update(): void {\r\n        this.checkCollisions();\r\n    }\r\n\r\n    \r\n    public overlapPoint(point: Vector): ColliderC[] { \r\n        // let colliders = this.getNearbyCircles(this.getCellKey(point));\r\n        const potentials = this.tree.search(point.x, point.y, point.x, point.y);\r\n        const colliders = potentials.map(c => this.gameWorld.getGameObject(this.data[c].colliderId)?.getComponent(ColliderC)!).filter(c => c.getCenter().sub(point).magnitude() < c.radius);\r\n        return colliders;\r\n    }\r\n\r\n    checkCollisions(): void {\r\n        let AllColliders = this.gameWorld.getComponents(ColliderC)\r\n        const length = AllColliders.length;\r\n        if (length === 0) {\r\n            this.tree = new Flatbush(1);\r\n            return;\r\n        }\r\n\r\n        this.tree = new Flatbush(length);\r\n        this.data = AllColliders.map(collider => collider.getAABB());\r\n\r\n        for (const mainCollider of AllColliders)\r\n            mainCollider.isActive = false;\r\n\r\n        for (const item of this.data) \r\n            this.tree.add(item.minX, item.minY, item.maxX, item.maxY);\r\n        this.tree.finish();\r\n\r\n        for (const mainCollider of AllColliders) {\r\n            if (mainCollider.isStatic)\r\n                continue; \r\n            let newCollisions = new Set<ColliderC>();\r\n            \r\n            const mainAABB = mainCollider.getAABB();\r\n            const potential = this.tree.search(mainAABB.minX, mainAABB.minY, mainAABB.maxX, mainAABB.maxY);\r\n\r\n            for (const item of potential) {\r\n                const otherCollider = this.gameWorld.getGameObject(this.data[item].colliderId)?.getComponent(ColliderC);\r\n                if (!otherCollider || mainCollider === otherCollider) \r\n                    continue;\r\n                \r\n                if (mainCollider.collides(otherCollider)) {\r\n                    mainCollider.isActive = true;\r\n                    otherCollider.isActive = true;\r\n                    newCollisions.add(otherCollider);\r\n                }\r\n                \r\n                for(let newC of newCollisions)\r\n                    if(!mainCollider.collisions.has(newC)) \r\n                        mainCollider.onCollisionEnter(newC); \r\n                    \r\n                \r\n                mainCollider.collisions.clear();\r\n                mainCollider.collisions = newCollisions;\r\n            } \r\n        }\r\n    }\r\n}","import { EventArgs, GameEvent } from \"../Core/GameEvent\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class KeyboardEventArgs extends EventArgs {\r\n    public key: string;\r\n    constructor(key: string) {\r\n        super();\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport class KeyboardPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"KeyboardPlugin\";\r\n    public KeyDownEvent: GameEvent = new GameEvent();\r\n    public BlockedKeyDownEvent: GameEvent = new GameEvent();\r\n    public block: boolean = false;\r\n\r\n    private NowPressedKeys = new Set<string>();\r\n    private readonly pressedKeys = new Set<string>();\r\n\r\n    constructor() {\r\n        super();\r\n        this.pressedKeys = new Set();\r\n        document.onkeydown = (event: KeyboardEvent) => {\r\n            const key = event.key.toLowerCase();\r\n            this.pressedKeys.add(key);\r\n            this.NowPressedKeys.add(key);\r\n        }\r\n        document.onkeyup = (event: KeyboardEvent) => {\r\n            const key = event.key.toLowerCase();\r\n            this.pressedKeys.delete(key);\r\n        }\r\n    }\r\n    \r\n    public isPressed(key: string): boolean {\r\n        return this.isEnabled() && !this.block && this.pressedKeys.has(key);\r\n    }\r\n    protected override start(): void {\r\n        this.KeyDownEvent.register(this.gameWorld);\r\n        this.BlockedKeyDownEvent.register(this.gameWorld);\r\n    }\r\n    protected override update(delta: number): void {\r\n        this.NowPressedKeys.forEach(key => {\r\n            if (this.block)\r\n                this.BlockedKeyDownEvent.emit(new KeyboardEventArgs(key));\r\n            else\r\n                this.KeyDownEvent.emit(new KeyboardEventArgs(key));\r\n        });\r\n        this.NowPressedKeys.clear();\r\n    }\r\n}","import { Vector } from \"../Helpers/Vector\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { MouseClickEventArgs, MousePlugin, MouseScrollEventArgs } from \"./Mouse\";\r\nimport { EventArgs } from \"../Core/GameEvent\";\r\nimport { CommandResult, cliPlugin, cli } from \"../Helpers/Commands\";\r\nimport { CollisionDetectionPlugin } from \"./CollisionDetection\";\r\nimport { KeyboardPlugin } from \"./Keyboard\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\n@cliPlugin(\"camera\")\r\nexport class CameraPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Physics;\r\n    \r\n    public cameraPosition: Vector = new Vector(4, 0);\r\n    public targetCameraPositon: Vector = new Vector(4, 0);\r\n    public cameraScreenOffset: Vector = new Vector(100, 100);\r\n    \r\n    public followingSpeed: number = 0.02;\r\n    public isFollowing: boolean = true;\r\n    public zoomV: Vector = new Vector(20, -20);\r\n    private zoom: number = 20;\r\n    private targetId: string = \"None\"; //todo: delete this\r\n    public targetZoom: number = 40;\r\n    public name: string = \"CameraPlugin\";\r\n    private transformMatrix: DOMMatrix = new DOMMatrix();\r\n\r\n    override start(): void {\r\n        this.getPlugin(MousePlugin).mouseScrollYEvent.subscribe(this, \"scroll\");\r\n        this.getPlugin(MousePlugin).mouseDownEvent.subscribe(this, \"down\");\r\n        this.getPlugin(MousePlugin).mouseUpEvent.subscribe(this, \"up\");\r\n    }\r\n    \r\n    override event(args: EventArgs, alias?: string): void {\r\n        if (alias == \"scroll\") {\r\n            const mouseArgs = args as MouseScrollEventArgs;\r\n            this.updateZoom(mouseArgs.delta);\r\n        }\r\n        //todo: delete this\r\n        else if (alias == \"down\") {\r\n            const mouseArgs = args as MouseClickEventArgs;\r\n            if (mouseArgs.button != 1) \r\n                return;\r\n            const target = this.gameWorld.getGameObject(this.targetId);\r\n            if (target){\r\n                this.targetId = \"None\";\r\n                return;\r\n            }\r\n            const mousePositonScreen = this.getPlugin(MousePlugin).getMouseScreenPosition();\r\n            const mousePositon = this.getWorldPosition(mousePositonScreen);\r\n            let gameObject = this.getPlugin(CollisionDetectionPlugin).overlapPoint(mousePositon)[0]?.getGameObject();\r\n            if (gameObject)\r\n                this.targetId = gameObject.getId();\r\n        }\r\n        // else if (alias == \"up\") {\r\n        //     const mouseArgs = args as MouseClickEventArgs;\r\n        //     if (mouseArgs.button != 1) \r\n        //         return;\r\n        //     this.target = undefined;\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    public updateZoom(delta: number): void {\r\n        delta = Math.sign(delta);\r\n        if (delta > 0 && this.targetZoom * 0.9 > 10)\r\n            this.targetZoom = 0.9 * this.targetZoom;\r\n        if (delta < 0 && this.targetZoom * 1.1 < 100)\r\n            this.targetZoom = 1.1 * this.targetZoom;\r\n    }\r\n\r\n    public getWorldPosition(screenPositon: Vector): Vector{\r\n        let scale = this.getPlugin(CameraPlugin).zoomV;\r\n        let cameraPosition = this.getPlugin(CameraPlugin).cameraPosition;\r\n        let worldPosition = new Vector((screenPositon.x-this.cameraScreenOffset.x)/scale.x, (screenPositon.y-this.cameraScreenOffset.y)/scale.y).add(cameraPosition);\r\n        return worldPosition;\r\n    }\r\n\r\n    private updateCameraTransform(): void {\r\n        this.transformMatrix = new DOMMatrix()\r\n            .translate(this.cameraScreenOffset.x, this.cameraScreenOffset.y)\r\n            .scale(this.zoomV.x, this.zoomV.y)\r\n            .translate(-this.cameraPosition.x, -this.cameraPosition.y);\r\n    }\r\n    public getCameraTransform(): DOMMatrix {\r\n        return this.transformMatrix;\r\n    }\r\n\r\n    protected override update(delta: number): void {\r\n        if (this.isFollowing) \r\n            this.cameraPosition = this.cameraPosition.interpolate(this.targetCameraPositon, Math.pow(this.followingSpeed, delta));\r\n        \r\n        \r\n        // this.scale += (this.targetScale-this.scale)*(2.5*delta);\r\n        this.zoom += (this.targetZoom-this.zoom)*(1-Math.pow(0.002, delta));// (this.targetScale-this.scale)*(2.5*delta);\r\n        this.zoomV = new Vector(this.zoom, -this.zoom);\r\n        \r\n        //todo: delete this\r\n        const target = this.gameWorld.getGameObject(this.targetId);\r\n        if (target){\r\n            const mousePositonScreen = this.getPlugin(MousePlugin).getMouseScreenPosition();\r\n            const mousePositon = this.getWorldPosition(mousePositonScreen);\r\n            target.getTransform().position = target.getTransform().position.interpolate(mousePositon, Math.pow(0.001, delta));\r\n            if (this.getPlugin(KeyboardPlugin).isPressed(\"2\")){\r\n                target.getTransform().rotation += 0.5*3.14*delta;\r\n            }\r\n            if (this.getPlugin(KeyboardPlugin).isPressed(\"1\")){\r\n                target.getTransform().rotation -= 0.5*3.14*delta;\r\n            }\r\n        }\r\n        \r\n\r\n        this.updateCameraTransform();\r\n    }\r\n\r\n    @cli(\"getscale\", undefined, \"number\")\r\n    private getscale(): CommandResult{\r\n        return new CommandResult(true, this.zoomV.toString(), this.zoomV);\r\n    }\r\n\r\n    @cli(\"follow\", \"<following: boolean>\")\r\n    private follow(following: boolean): CommandResult{\r\n        this.isFollowing = following;\r\n        return new CommandResult(true, `Camera is ${following ? \"following\" : \"not following\"}`, undefined);\r\n    }\r\n    @cli(\"zoom\", \"<zoom: number>\")\r\n    private setzoom(zoom: number): CommandResult{\r\n        this.targetZoom = zoom;\r\n        return new CommandResult(true, `Camera zoom set to ${zoom}`, undefined);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"../../Core/Component\";\r\n\r\nexport abstract class RendererC extends Component {\r\n    public zindex: number;\r\n\r\n    constructor(zindex=0){\r\n        super();\r\n        this.zindex=zindex;\r\n    }\r\n\r\n    public abstract render(context: CanvasRenderingContext2D, delta: number): void; \r\n}","import { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class TextRendererC extends RendererC {\r\n    public color: rgb = new rgb(42, 42, 55);\r\n    public text: string;\r\n    public displayName: boolean;\r\n\r\n    constructor(text: string, displayName: boolean = false, zindex: number=1){\r\n        super();\r\n        this.text = text;\r\n        this.zindex = zindex;\r\n        this.displayName = displayName;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color: string = this.color.toString();\r\n        const text: string = this.displayName?this.getGameObject()?.name??this.text:this.text;\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        // context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n        context.scale(scale.x, -scale.y);\r\n        \r\n\r\n        context.fillStyle = color;\r\n        const textHeight = 1.0;\r\n        context.font = \"bold \"+textHeight+\"px Arial\";\r\n        context.fillStyle = \"azure\";\r\n        context.shadowBlur = 10;\r\n        const textOffset = context.measureText(text).width/2;\r\n        context.strokeText(text, -textOffset, textHeight/4);\r\n        context.fillText(text, -textOffset, textHeight/4);\r\n\r\n        context.shadowBlur = 0;\r\n\r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { rgb as rgb } from \"../Helpers/Color\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class ConfigPlugin extends Plugin{\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"ConfigPlugin\";\r\n    private readonly config: Map<string, any> = new Map(\r\n        [\r\n            [\"bulletSize\", 0.75 as any],\r\n            // [\"displayColliders\", true as any],\r\n            [\"playerSize\", 2.5 as any],\r\n            [\"bulletColor\", new rgb(56, 57, 60) as any],\r\n            // [\"playerColor\", new Color(145, 125, 39) as any],\r\n            [\"playerColor\", new rgb(122, 111, 62) as any],\r\n            [\"playerColor\", new rgb(80, 37, 36) as any],\r\n            [\"playerColor\", new rgb(59, 94, 76) as any],\r\n            [\"playerColor\", new rgb(129, 49, 54) as any],\r\n            [\"playerColor\", new rgb(130, 111, 51) as any],\r\n        ]\r\n    );\r\n\r\n    public get(key: string): any{\r\n        if (!this.config.has(key))\r\n            return undefined;\r\n\r\n        return this.config.get(key);\r\n    }\r\n    public set(key: string, value: any): void{\r\n        this.config.set(key, value);\r\n    }\r\n}","import { c } from \"vite/dist/node/moduleRunnerTransport.d-DJ_mE5sf\";\r\nimport { GameWorld } from \"../../Core/GameWorld\";\r\nimport { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { ConfigPlugin } from \"../../Plugins/Config\";\r\nimport { ColliderC } from \"../Collider\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class ColliderRendererC extends RendererC {\r\n    private activeColor: rgb = new rgb(172, 42, 55, 0.125);\r\n    private staticColor: rgb = new rgb(95, 64, 36, 0.125);\r\n    private dynamicColor: rgb = new rgb(57, 127, 31, 0.125);\r\n    private disabledColor: rgb = new rgb(36, 24, 36, 0.125);\r\n\r\n    constructor(zindex=-1){\r\n        super();\r\n        this.zindex = zindex;\r\n    }\r\n    \r\n    public getColor(): rgb{\r\n        let color: rgb = this.dynamicColor; \r\n        let collider = this.getComponent(ColliderC);\r\n        \r\n        if (!collider) \r\n            color = this.disabledColor;\r\n        else if (!collider.isEnabled())\r\n            color = this.disabledColor;\r\n        else if (collider.isActive)\r\n            color = this.activeColor;\r\n        else if(collider.isStatic)\r\n            color = this.staticColor;\r\n        return color;\r\n    }\r\n    \r\n    public render(context: CanvasRenderingContext2D): void {\r\n        let display = this.getPlugin(ConfigPlugin)?.get(\"displayColliders\")??false;\r\n        if(!display)\r\n            return;\r\n\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        const collider = this.getComponent(ColliderC);\r\n        if (!world || !transform || !camera || !collider) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color: rgb = this.getColor();\r\n        const colliderOffset = collider.offset;\r\n        const radius = collider.radius;\r\n        const radius2 = collider.radius + 0.25;\r\n\r\n        context.save();\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n    \r\n\r\n        context.strokeStyle = color.toRgb().toString();\r\n        context.fillStyle = color.toString();\r\n        context.shadowBlur = 30;\r\n        context.beginPath();\r\n        context.arc(0, 0, radius2, 0, 2 * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n        context.stroke();\r\n\r\n        context.beginPath();\r\n        context.arc(0, 0, radius, 0, 2 * Math.PI);\r\n        context.closePath();\r\n        context.lineWidth = 0.1;\r\n        context.stroke();\r\n\r\n\r\n        context.restore();\r\n    }\r\n}","export class GameAnimation{\r\n    private progress: number = -1;\r\n    public duration: number = 0.25;\r\n    public startAnimation: () => void = ()=>{};    \r\n    public endAnimation: () => void = ()=>{};    \r\n    public updateAnimation: (fill: number) => void = ()=>{};    \r\n    \r\n    constructor(update: (fill: number) => void = ()=>{}, start: () => void = ()=>{}, end: () => void = ()=>{}){\r\n        this.updateAnimation = update;\r\n        this.startAnimation = start;\r\n        this.endAnimation = end;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        if(this.progress>0){\r\n            let fill = (this.duration-this.progress)/this.duration;\r\n            this.progress-=delta;\r\n            this.updateAnimation(fill);\r\n        }\r\n        else if(this.progress!=-1){\r\n            this.endAnimation();\r\n            this.progress=-1;\r\n        }\r\n    }\r\n    \r\n    public start(): void{\r\n        if(this.progress==-1){\r\n            this.startAnimation();\r\n            this.progress=this.duration;\r\n        }\r\n        else\r\n            this.progress=(this.duration+this.progress)/2;\r\n    }\r\n}","import { StandaloneComponent } from \"../Components/StandaloneComponent\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class StandaloneComponentPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Update;\r\n    public name: string = \"StandaloneComponentPlugin\";\r\n    private components: WeakRef<StandaloneComponent>[] = [];\r\n\r\n    public addComponent(component: StandaloneComponent): void {\r\n        if (this.components.some(c => c.deref() === component))\r\n            return;\r\n        this.components.push(new WeakRef(component));\r\n    }\r\n\r\n    override update(delta: number): void {\r\n        this.components.forEach(weakRef => {\r\n            const component = weakRef.deref();\r\n            if (component) \r\n                (component as any).tick(delta);\r\n        });\r\n        this.components = this.components.filter(weakRef => weakRef.deref());\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\nimport { StandaloneComponentPlugin } from \"../Plugins/StandaloneComponent\";\r\n\r\nexport abstract class StandaloneComponent extends Component {\r\n    private tickCount: number = 0;\r\n    private tick(delta: number): void {\r\n        this.update(delta);\r\n        this.tickCount ++;\r\n    }\r\n    protected start(): void {\r\n        this.tickCount = 0;\r\n        this.getGameWorld()?.getPlugin(StandaloneComponentPlugin)?.addComponent(this);\r\n    }; \r\n    protected update(delta: number): void {}; \r\n}","import { GameAnimation } from \"../Helpers/Animation\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { BarRendererC } from \"./Renderers/BarRenderer\";\r\nimport { StandaloneComponent } from \"./StandaloneComponent\";\r\n\r\nexport class AnimationC extends StandaloneComponent {\r\n    \r\n    private shrinkAnimation: GameAnimation = new GameAnimation();\r\n    private zoomAnimation: GameAnimation = new GameAnimation();\r\n    private defaultZoom: Vector = new Vector(1, 1);\r\n    \r\n    constructor(){\r\n        super();\r\n        this.shrinkAnimation = new GameAnimation(\r\n            (fill)=>this.getTransform()!.scale = this.defaultZoom.times(1-fill),\r\n            ()=>this.getComponent<BarRendererC>(BarRendererC)?.enable(false),\r\n            ()=>this.getGameWorld()?.destroy(this.getGameObject())\r\n        );\r\n        this.zoomAnimation = new GameAnimation(\r\n            (fill)=>this.getTransform()!.scale = this.defaultZoom.times(1+Math.sin(Math.PI*fill)/5),\r\n            ()=>this.defaultZoom = this.getTransform()!.scale.clone(),\r\n            ()=>this.getTransform()!.scale = this.defaultZoom\r\n        );\r\n    }\r\n    \r\n    override update(delta: number): void {\r\n        this.shrinkAnimation.update(delta);\r\n        this.zoomAnimation.update(delta);\r\n    }\r\n    \r\n    public startZoom(): void{\r\n        this.zoomAnimation.start();\r\n    }\r\n    public startShrink(): void{\r\n        this.shrinkAnimation.start();\r\n    }\r\n} ","import { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class PolygonRendererC extends RendererC {\r\n    public color: rgb;\r\n    public radius: number;\r\n    public n: number;\r\n\r\n    constructor(side: number, n: number=4, zindex=0, color=rgb.randomColor2()){\r\n        super();\r\n        this.radius = side;\r\n        this.n = n;\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color = this.color.toString();\r\n        const size = this.radius;\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n        \r\n        \r\n        if(this.n<10){\r\n            context.beginPath();\r\n            context.moveTo(0, size);\r\n            const angle: number = (2*Math.PI)/this.n;\r\n            for(let i=1;i<this.n;i++)\r\n                context.lineTo(Math.sin(i*angle)*size, Math.cos(i*angle)*size);\r\n            context.closePath();\r\n        }\r\n        else{\r\n            context.beginPath();\r\n            context.arc(0, 0, size, 0, 2 * Math.PI);\r\n            context.closePath();\r\n        }\r\n        \r\n        context.fillStyle = color;\r\n        context.shadowBlur = 0; \r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n        context.shadowBlur = 0;\r\n\r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\nimport { AnimationC } from \"./Animation\";\r\nimport { ColliderC, CollisionEventArgs } from \"./Collider\";\r\nimport { RigidBodyC } from \"./RigidBody\";\r\nimport { PolygonRendererC } from \"./Renderers/PolygonRenderer\";\r\nimport { EventArgs, GameEvent} from \"../Core/GameEvent\";\r\n\r\nexport class DamageEventArgs extends EventArgs{\r\n    public damage: number;\r\n    public participant: HealthC;\r\n    constructor(damage: number, participant: HealthC){\r\n        super();\r\n        this.damage = damage;\r\n        this.participant = participant;\r\n    }\r\n}\r\n\r\nexport class HealthC extends Component{\r\n    private health: number;\r\n    public maxHealth: number;\r\n    public damageEvent: GameEvent; \r\n\r\n    constructor(maxHealth: number, health=maxHealth){\r\n        super();\r\n        this.health = health;\r\n        this.maxHealth = maxHealth;\r\n        this.damageEvent = new GameEvent();\r\n    }\r\n\r\n    protected override start(): void {\r\n        this.damageEvent.register(this.getGameWorld()!);\r\n        this.getComponent(ColliderC)!.onCollisionEnterEvent.subscribe(this, \"onCollisionEnter\");\r\n    }\r\n    protected override event(args: EventArgs): void {\r\n        let cargs = args as CollisionEventArgs;\r\n        this.onCollisionEnter(cargs.collider);\r\n    }\r\n\r\n    onCollisionEnter(other: ColliderC): void { \r\n        let otherGO = other.getGameObject()!;       \r\n        let otherRigidbody = otherGO.getComponent(RigidBodyC)!;\r\n        let thisRigidbody = this.getComponent(RigidBodyC)!;\r\n        let op = thisRigidbody.mass/(otherRigidbody.mass+thisRigidbody.mass);\r\n        if(thisRigidbody.mass<otherRigidbody.mass){\r\n            otherRigidbody.velocity = otherRigidbody.velocity.add(thisRigidbody.velocity.times(op)).times(0.5); //toUnit().times(v2);\r\n            thisRigidbody.velocity = thisRigidbody.velocity.add(otherRigidbody.velocity.times(1-op).times(0.5)); //toUnit().times(v2);\r\n        }\r\n        otherRigidbody.angularVelocity += this.getTransform()!.position.sub(otherGO.getTransform().position).vectorProduct(thisRigidbody.velocity)*(op/15);\r\n        try{\r\n            const other = otherGO.getComponent(HealthC)!;\r\n            const damageValue = Math.min(other.health, this.health);\r\n            if (damageValue==0)\r\n                return;\r\n            this.onDamage(damageValue, other);\r\n            other.onDamage(damageValue, this);            \r\n        }\r\n        catch {}\r\n    }\r\n\r\n    public getHealth(): number {\r\n        return this.health/this.maxHealth;\r\n    }\r\n    public heal(value: number): void {\r\n        this.health = Math.min(this.maxHealth, this.health+value);\r\n    }\r\n\r\n    public onDamage(value: number, participant: HealthC): void {\r\n        this.health -= value;\r\n        this.damageEvent.emit(new DamageEventArgs(value, participant));\r\n       \r\n        if(this.health==0){\r\n            this.getComponent(ColliderC)?.enable(false);\r\n            this.getComponent(RigidBodyC)!.dampingFactor=0.6;\r\n            this.getComponent(AnimationC)?.startShrink();\r\n            \r\n            if(participant.hasComponent(PolygonRendererC)){\r\n                let myColor = this.getComponent(PolygonRendererC)!.color;\r\n                let newColor = myColor.blend(\r\n                    participant.getComponent(PolygonRendererC)!.color.toRgb(),\r\n                    0.5\r\n                ).toRgb();\r\n                this.getComponent(PolygonRendererC)!.color = newColor;\r\n                participant.getComponent(PolygonRendererC)!.color = newColor;\r\n            }\r\n        }\r\n        else\r\n            this.getComponent(AnimationC)?.startZoom();\r\n    }\r\n} ","import { rgb } from \"../../Helpers/Color\";\r\nimport { Vector } from \"../../Helpers/Vector\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RendererC } from \"./Renderer\";\r\nimport { HealthC } from \"../Health\";\r\nimport { GMath } from \"../../Helpers/Math\";\r\n\r\nexport class BarRendererC extends RendererC {\r\n    public offset: Vector = new Vector(0, 4);\r\n    public fill: number = 0.5;\r\n    public width: number = 5;\r\n    public height: number = 0.5;\r\n\r\n    constructor(zindex=0){\r\n        super(zindex);\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const health = this.getComponent(HealthC);\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !health || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n      \r\n        \r\n        const fill = GMath.minmax(health.getHealth(), 0, 1);\r\n        const width = 2+health.maxHealth/250.0;\r\n        const color = rgb.getHeatmapColor(fill).toString();\r\n        const color2 = rgb.background.toString();\r\n        const radius = 0.25;\r\n\r\n        \r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        // context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n        \r\n        context.translate(this.offset.x, this.offset.y);\r\n\r\n        \r\n        context.shadowBlur = 0;\r\n        \r\n        context.beginPath();\r\n        context.roundRect(-width/2, -this.height/2, width, this.height, radius);\r\n        context.closePath();\r\n        context.fillStyle = color2;\r\n        context.fill();\r\n        \r\n        context.beginPath();\r\n        context.roundRect(-width/2, -this.height/2, width*fill, this.height, radius);\r\n        context.closePath();\r\n        context.fillStyle = color;\r\n        context.fill();\r\n        \r\n        context.beginPath();\r\n        context.roundRect(-width/2, -this.height/2, width, this.height, radius);\r\n        context.closePath();\r\n        context.shadowBlur = 30;\r\n        context.stroke();\r\n        \r\n        context.beginPath();\r\n        context.roundRect(-width/2, -this.height/2, width*fill, this.height, radius);\r\n        context.closePath();\r\n        context.shadowBlur = 0;\r\n        context.stroke();\r\n\r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport interface IInvokable {\r\n    onInvoke(topic: string): void;\r\n}\r\n\r\ntype record = {\r\n    totalTime: number;\r\n    subscriber: WeakRef<IInvokable>; \r\n    topic: string;\r\n}\r\n\r\nexport class SchedulerPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"SchedulerPlugin\";\r\n    private schedule: record[] = [];\r\n\r\n    public addInvoke(subscriber: IInvokable, totalTime: number, topic: string){\r\n        let sub = new WeakRef<IInvokable>(subscriber);\r\n        this.schedule.push({totalTime, subscriber: sub, topic});\r\n        this.schedule.sort((a, b)=>b.totalTime-a.totalTime);\r\n    }\r\n\r\n    public override update(delta: number): void {\r\n        const totalDelta = this.gameWorld.getWorldTime();\r\n        if(this.schedule.length!=0)\r\n        while(this.schedule.length!=0&&this.schedule[this.schedule.length-1].totalTime<=totalDelta){\r\n            let last = this.schedule.pop()!;\r\n            last.subscriber.deref()?.onInvoke(last.topic);\r\n        }\r\n    }\r\n   \r\n}","import { Component } from \"../Core/Component\";\r\nimport { IInvokable, SchedulerPlugin } from \"../Plugins/Scheduler\";\r\nimport { AnimationC } from \"./Animation\";\r\n\r\nexport class DestroyerC extends Component implements IInvokable {\r\n    \r\n    constructor(private lifeTime: number=1){\r\n        super();\r\n    }\r\n\r\n    onInvoke(topic: string): void {\r\n        this.getComponent(AnimationC)?.startShrink();\r\n    }\r\n\r\n    override start(): void {\r\n        const world = this.getGameWorld()!;\r\n\r\n        let destroyTime = world.getWorldTime()+this.lifeTime;\r\n        world.getPlugin(SchedulerPlugin).addInvoke(this, destroyTime, \"destroy\");\r\n    }\r\n} ","import { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class BulletRendererC extends RendererC {\r\n    public color: rgb;\r\n    public radius: number;\r\n\r\n    constructor(side: number, zindex=0, color=rgb.randomColor2()){\r\n        super();\r\n        this.radius = side;\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color = this.color.toString();\r\n        const size = this.radius;\r\n        const gradientWidth = 4;\r\n\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n\r\n\r\n        context.beginPath();\r\n        context.rect(-3*size-gradientWidth, -size, gradientWidth, 2*size);\r\n        context.closePath();\r\n        const grad = context.createLinearGradient(-3*size-gradientWidth, 0, gradientWidth, 0);\r\n        grad.addColorStop(0, this.color.blend(new rgb(255, 255, 255), 0.5).toArgb(0).toString());\r\n        grad.addColorStop(1, this.color.toArgb(0.75).toString());// rgb.stroke.toString());\r\n\r\n        context.fillStyle = grad;\r\n        context.shadowBlur = 0;\r\n        context.fill();\r\n      \r\n        context.beginPath();\r\n        context.arc(0, 0, size, 0, 2 * Math.PI);\r\n        context.closePath();\r\n        \r\n        context.fillStyle = color;\r\n        context.shadowBlur = 0; \r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n\r\n        context.beginPath();\r\n        context.roundRect(-3*size, -size, 3*size, 2*size, size/2);\r\n        context.closePath();\r\n\r\n        context.fillStyle = this.color.blend(rgb.background, 1).toString();\r\n        context.shadowBlur = 0; \r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n\r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { rgb } from \"../Helpers/Color\";\r\nimport { AnimationC } from \"./Animation\";\r\nimport { ColliderC } from \"./Collider\";\r\nimport { DestroyerC } from \"./Destroyer\";\r\nimport { HealthC } from \"./Health\";\r\nimport { BulletRendererC } from \"./Renderers/BulletRenderer\";\r\nimport { ColliderRendererC } from \"./Renderers/ColliderRenderer\";\r\nimport { PolygonRendererC } from \"./Renderers/PolygonRenderer\";\r\nimport { SmokeRendererC } from \"./Renderers/SmokeRenderer\";\r\nimport { RigidBodyC } from \"./RigidBody\";\r\n\r\nexport class BulletC extends Component {\r\n    private ownerId: string;\r\n\r\n    constructor(owner: GameObject){\r\n        super();\r\n        this.ownerId = owner.getId();\r\n    }\r\n\r\n    public getOwner(): GameObject | undefined{\r\n        return this.getGameWorld()?.getGameObject(this.ownerId);\r\n    }\r\n\r\n    \r\n    public static bulletGO(owner: GameObject, hp=30, radius: number = 0.65, lifeTime: number=1, zindex=-1, ...components: Component[]): GameObject {\r\n        let bulletGO: GameObject = new GameObject(\r\n            new RigidBodyC(0.05 ,1.),\r\n            new BulletRendererC(radius, zindex, new rgb(173, 87, 87)),\r\n            new PolygonRendererC(radius, 10, zindex, new rgb(173, 87, 87)),\r\n            new ColliderC(radius, false),\r\n            new ColliderRendererC(),\r\n            new HealthC(hp),\r\n            new AnimationC(),\r\n            new DestroyerC(lifeTime),\r\n            new BulletC(owner),\r\n            ...components\r\n        );\r\n        bulletGO.getTransform().rotation = 0;\r\n        bulletGO.name = \"Bullet\";\r\n        bulletGO.getComponent(PolygonRendererC)?.enable(false);\r\n        \r\n        return bulletGO;\r\n    }\r\n} ","import { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { PlayerPlugin } from \"../../Plugins/Player\";\r\nimport { CanonC } from \"../Canon\";\r\nimport { RigidBodyC } from \"../RigidBody\";\r\nimport { PolygonRendererC } from \"./PolygonRenderer\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class CanonRendererC extends RendererC {\r\n    private color: rgb;\r\n    private displayFireBloom: boolean = false;\r\n    \r\n    constructor(zindex=0, color=rgb.background.clone()){\r\n        super();\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n    \r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        const canon = this.getComponent(CanonC);\r\n        if (!world || !transform || !camera || !canon) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color = this.color.toString();\r\n        // const color2 = this.getComponent(PolygonRendererC)?.color.toString()??rgb.stroke.toString();\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n\r\n        const length: number = canon.length;\r\n        const width: number = canon.width;\r\n     \r\n\r\n       \r\n        const st: number = Math.min(1, canon.getShotDelta()/canon.cooldown);\r\n        const sp: number = Math.sin( st * Math.PI);\r\n\r\n        const r_wads = 1;\r\n        const range = canon.range/5;\r\n        const gunOffset = canon.direction.times(canon.bulletSpeed).times(canon.getBulletLifetime()).add(canon.getGlobalOffset());\r\n        \r\n        \r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        // context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n        \r\n        \r\n        if (this.displayFireBloom && st > 0) {\r\n            context.save();\r\n            \r\n            \r\n            context.globalCompositeOperation = 'lighter';\r\n            context.rotate(canon.direction.toRad());\r\n            context.translate((1-sp/3)*length, 0);\r\n            \r\n            // Główna część błysku (centralny stożek)\r\n            const gradient = context.createRadialGradient(0, 0, 0, 0, 0, 5*(1-st));\r\n            gradient.addColorStop(0, 'rgba(219, 144, 31, 0.25)');\r\n            gradient.addColorStop(1, 'rgba(58, 40, 12, 0)');\r\n            \r\n            context.fillStyle = gradient;\r\n            context.shadowBlur = 0;\r\n            \r\n            context.beginPath();\r\n            context.arc(0, 0, 20, 0, 2*Math.PI);\r\n            context.closePath();\r\n            context.fill();\r\n            \r\n            \r\n            context.restore();\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        context.translate(gunOffset.x, gunOffset.y);\r\n        \r\n        \r\n        context.beginPath();\r\n        context.arc(0, 0, r_wads, 0, 2*Math.PI);\r\n        context.closePath();\r\n        context.shadowBlur = 0;\r\n        // color2.toString();\r\n        context.stroke();\r\n        context.strokeRect(-r_wads/2, -r_wads/2, r_wads, r_wads);\r\n\r\n        context.resetTransform();\r\n\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        // context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n        context.rotate(canon.direction.toRad());\r\n\r\n        \r\n        context.beginPath();\r\n        context.roundRect(0, -width/2, (1-sp/3)*length, width, 0.1);\r\n        context.closePath();\r\n        \r\n        context.fillStyle = color;\r\n        context.shadowBlur = 0;\r\n        context.fill();\r\n        context.shadowBlur = 30;\r\n        context.stroke();\r\n        context.shadowBlur = 0;\r\n\r\n        \r\n        context.resetTransform();\r\n    }\r\n}","import { rgb } from \"../../Helpers/Color\";\r\nimport { GMath } from \"../../Helpers/Math\";\r\nimport { Vector } from \"../../Helpers/Vector\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RigidBodyC } from \"../RigidBody\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nclass Particle {\r\n    public x: number;\r\n    public y: number;\r\n    public dx: number;\r\n    public dy: number;\r\n    public radius: number;\r\n    public targetRadius: number;\r\n    public color: rgb;\r\n    public alpha: number;\r\n\r\n    constructor(x: number, y: number, targetRadius: number, color: rgb, alpha: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.dx = 0; \r\n        this.dy = 0;\r\n        this.radius = 0;\r\n        this.targetRadius = targetRadius\r\n        this.color = color;\r\n        this.alpha = alpha;\r\n    }\r\n}\r\n\r\nexport class SmokeRendererC extends RendererC {\r\n    public color: rgb;\r\n    public radius: number;\r\n    public n: number;\r\n    private particles: Particle[] = [];\r\n\r\n    constructor(side: number, n: number=4, zindex=0, color=rgb.randomColor2()){\r\n        super();\r\n        this.radius = side;\r\n        this.n = n;\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n\r\n    public start(): void {\r\n      \r\n    }\r\n\r\n    public emitParticles(n: number = 1, offset: Vector = new Vector(0, 0), dv: Vector = new Vector(0, 0)): void {\r\n        const radiusRange: number = 1;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const angle = Math.random() * 2 * Math.PI;\r\n            const radius = radiusRange * (Math.random() * 0.5 + 0.5);\r\n            const x = radius * Math.cos(angle) + this.getTransform()!.position.x + offset.x;\r\n            const y = radius * Math.sin(angle) + this.getTransform()!.position.y + offset.y;\r\n\r\n            const particleRadius = this.radius * 0.25 + 0.15 * this.radius * GMath.symRand(1);\r\n            const alpha = Math.random() * 0.5 + 0.5;\r\n\r\n            const particle = new Particle(x, y, particleRadius, this.color, alpha);\r\n            particle.dx = this.getComponent(RigidBodyC)?.velocity.x ?? 0;\r\n            particle.dy = this.getComponent(RigidBodyC)?.velocity.y ?? 0;\r\n            particle.dx += dv.x;\r\n            particle.dy += dv.y;\r\n            this.particles.push(particle);\r\n        }\r\n    }\r\n\r\n    private updateParticles(delta: number): void {\r\n        const blinkPeriod: number = 1;\r\n        const popupPeriod: number = 1;\r\n\r\n        for (const particle of this.particles) {\r\n            particle.x += particle.dx * delta;\r\n            particle.y += particle.dy * delta;\r\n\r\n            // lekka fluktuacja kierunku (ruch szumowy)\r\n            particle.dx += (Math.random() - 0.5) * delta*50;\r\n            particle.dy += (Math.random() - 0.5) * delta*50;\r\n\r\n            // ogranicz ruch (damping)\r\n            particle.dx *= Math.pow(0.1, delta);\r\n            particle.dy *= Math.pow(0.1, delta);\r\n\r\n            particle.alpha -= delta / blinkPeriod; \r\n            // particle.radius += delta / popupPeriod; //(particle.targetRadius-particle.radius)*(1-Math.pow(0.025, delta));\r\n            particle.radius += (particle.targetRadius-particle.radius)*(1-Math.pow(0.025, delta));\r\n\r\n            if (particle.alpha <= 0.) {\r\n                this.particles.splice(this.particles.indexOf(particle), 1); // Remove dead particles\r\n            }\r\n        }\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D, delta: number): void {\r\n        this.updateParticles(delta);\r\n\r\n        const x = 0;\r\n        const y = 0;\r\n        const r = 0;\r\n        const transformScale = Vector.one(); // Assuming no scaling for simplicity\r\n        \r\n        const offset = this.getGameWorld()!.getPlugin(CameraPlugin).cameraScreenOffset;\r\n        const scale = this.getGameWorld()!.getPlugin(CameraPlugin).zoomV;\r\n        const cmx = this.getGameWorld()!.getPlugin(CameraPlugin).cameraPosition.x;\r\n        const cmy = this.getGameWorld()!.getPlugin(CameraPlugin).cameraPosition.y;\r\n\r\n        const cx: number = (x-cmx);\r\n        const cy: number = (y-cmy);\r\n\r\n        context.translate(offset.x, offset.y);\r\n        context.scale(scale.x, scale.y);\r\n        context.translate(cx, cy);\r\n        // context.rotate(r);\r\n        // context.scale(transformScale.x, transformScale.y);\r\n        \r\n       \r\n        for (const particles of this.particles) {\r\n            context.beginPath();\r\n            context.arc(particles.x, particles.y, particles.radius, 0, 2 * Math.PI);\r\n            context.closePath();\r\n    \r\n            context.fillStyle = particles.color.toString();\r\n            context.globalAlpha = particles.alpha;\r\n            context.shadowColor = particles.color.toString();\r\n            context.shadowBlur = 10; \r\n            context.fill();\r\n            // context.globalCompositeOperation = \"lighter\"; \r\n            // context.stroke();\r\n            context.globalAlpha = 1;\r\n        }\r\n        context.shadowBlur = 0;\r\n        context.shadowColor = rgb.stroke.toString();\r\n        // context.globalCompositeOperation = \"source-over\"; \r\n\r\n\r\n\r\n        context.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n}","import { GMath } from \"../Helpers/Math\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { BulletC } from \"./Bullet\";\r\nimport { ColliderC } from \"./Collider\";\r\nimport { BulletRendererC } from \"./Renderers/BulletRenderer\";\r\nimport { CanonRendererC } from \"./Renderers/CanonRenderer\";\r\nimport { PolygonRendererC } from \"./Renderers/PolygonRenderer\";\r\nimport { SmokeRendererC } from \"./Renderers/SmokeRenderer\";\r\nimport { RigidBodyC } from \"./RigidBody\";\r\nimport { StandaloneComponent } from \"./StandaloneComponent\";\r\n\r\nexport class CanonC extends StandaloneComponent {\r\n    public cooldown: number = 0.25;\r\n    public bulletSpeed: number = 40;\r\n    public length: number;\r\n    public width: number;\r\n    public range: number=250;\r\n    public bulletSpraed: number = 0.05;\r\n    \r\n    public offset: Vector;\r\n    public direction: Vector = Vector.right();\r\n    public targetDirection: Vector = Vector.right();\r\n\r\n    private shotDelta: number = 1e9;\r\n    // private lastShootTime: number = performance.now();\r\n\r\n    constructor(length: number=4, width: number=2, private damage=10){\r\n        super();\r\n        this.length = length;\r\n        this.width = width;\r\n        this.offset = new Vector(length-this.width, 0);\r\n    }\r\n\r\n    public getShotDelta(): number{\r\n        return this.shotDelta;\r\n    }\r\n\r\n    override update(delta: number): void {\r\n        let angle=this.direction.toRad();\r\n        let targetAngle=this.targetDirection.toRad();\r\n        angle += 9*delta*GMath.deltaAngle(angle, targetAngle);\r\n        this.direction = Vector.fromRad(angle);\r\n        this.shotDelta += delta;\r\n    }\r\n\r\n    public getBulletLifetime(): number{\r\n        return this.range/this.bulletSpeed;\r\n    }\r\n\r\n    public getGlobalOffset(): Vector{\r\n        return this.direction.toUnit().times(this.offset.x).add(this.direction.cross().times(this.offset.y));\r\n    }\r\n\r\n    public shoot(): void{\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const gameObject = this.getGameObject();\r\n        if (!world || !transform || !gameObject) return;\r\n\r\n        if(!this.isEnabled||!gameObject.enabled)\r\n            return;\r\n        if(this.getShotDelta()>=this.cooldown){\r\n            const sW = 0.125;\r\n            const zindex = this.getComponent(CanonRendererC)!.zindex-0.01;\r\n\r\n            const spread = this.direction.cross().times(Math.random()*2*this.bulletSpraed-this.bulletSpraed);\r\n            const bulletDirection = this.direction.toUnit().add(spread).toUnit();\r\n            const offset = this.getGlobalOffset();\r\n            \r\n            \r\n            let bullet = BulletC.bulletGO(\r\n                gameObject,\r\n                this.damage,\r\n                this.width/2+GMath.symRand(sW)-this.width/6,\r\n                this.getBulletLifetime(),\r\n                zindex\r\n            );\r\n            \r\n            const rigidBody = bullet.getComponent(RigidBodyC)!;\r\n            const collider = bullet.getComponent(ColliderC)!;\r\n            bullet.getComponent(PolygonRendererC)!.color = this.getComponent(PolygonRendererC)!.color.clone();\r\n            bullet.getComponent(BulletRendererC)!.color = this.getComponent(PolygonRendererC)!.color.clone();\r\n\r\n            collider.avoidObjectes.add(this.getGameObject()!);\r\n            rigidBody.velocity = bulletDirection.times(this.bulletSpeed);\r\n\r\n            bullet.getTransform().position = this.getTransform()!.position.add(offset);\r\n\r\n            this.getComponent(SmokeRendererC)?.emitParticles(23, offset, this.direction.cross().times(this.bulletSpeed/7).add(this.direction.times(this.bulletSpeed/3)));\r\n            this.getComponent(SmokeRendererC)?.emitParticles(23, offset, this.direction.cross().times(-this.bulletSpeed/7).add(this.direction.times(this.bulletSpeed/3)));\r\n            bullet.getTransform().rotation = bulletDirection.toRad();\r\n            world.spawn(bullet);\r\n\r\n            this.shotDelta = 0;\r\n        }\r\n    }    \r\n} ","import { rgb } from \"../../Helpers/Color\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { PolygonRendererC } from \"./PolygonRenderer\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class ChasisRendererC extends RendererC {\r\n    public color: rgb;\r\n\r\n    constructor(zindex=0, color=new rgb(22, 24, 25)){\r\n        super();\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color = this.color.toString();\r\n        const color2 = this.getComponent(PolygonRendererC)?.color.toString()??rgb.stroke.toString();\r\n\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n     \r\n        context.beginPath();\r\n        context.fillStyle = color2;\r\n        context.shadowBlur = 0;\r\n        context.roundRect(-4, -2, 8, 4, 1);\r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n        context.closePath();\r\n        \r\n        context.beginPath();\r\n        context.fillStyle = rgb.background.toString();\r\n        context.shadowBlur = 0;\r\n        context.roundRect(-4.5, -3.25, 10, 2, 0.5);\r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n        context.closePath();\r\n        \r\n        context.beginPath();\r\n        context.shadowBlur = 0;\r\n        context.roundRect(-4.5, 1.25, 10, 2, 0.5);\r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n        context.closePath();\r\n        \r\n        context.beginPath();\r\n        context.fillStyle = rgb.background.toString();\r\n        context.shadowBlur = 0;\r\n        context.roundRect(-3, -2, 6, 4, 1.5);\r\n        context.fill();\r\n        context.shadowBlur = 50;\r\n        context.stroke();\r\n        context.closePath()\r\n        context.shadowBlur = 0;;\r\n        \r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { rgb as rgb } from \"../../Helpers/Color\";\r\nimport { Vector } from \"../../Helpers/Vector\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\ntype Trace = {\r\n    position: Vector;\r\n    rotation: number;\r\n    startTime: number;\r\n}\r\n\r\nexport class TracesRendererC extends RendererC {\r\n    public color: rgb;\r\n    public tracesSpace: number = 0.5;\r\n\r\n    private traces: Trace[] = [];\r\n    private lastPosition?: Vector = undefined;\r\n    private transparency: number = 2;\r\n    private duration: number = 1;\r\n    private length: number = 2;\r\n\r\n    constructor(zindex=0, color=new rgb(66, 83, 68)){\r\n        super();\r\n        color=color.blend(rgb.stroke, 0.3);//.toArgb(0.75);\r\n        this.zindex = zindex;\r\n        this.color = color;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n        \r\n        const color = this.color.toString();\r\n\r\n      \r\n     \r\n    \r\n\r\n        ////////////////////\r\n\r\n        const currentPosition = transform.position.clone();\r\n        const currentRotation = transform.rotation;\r\n\r\n        if (this.lastPosition == undefined)\r\n            this.lastPosition = currentPosition.clone();\r\n        let mv = currentPosition.sub(this.lastPosition);\r\n        while(mv.magnitude()>this.tracesSpace){\r\n            this.traces.push(\r\n                {\r\n                    position: this.lastPosition,\r\n                    rotation: currentRotation,\r\n                    startTime: this.getGameWorld()!.getWorldTime(),\r\n                }\r\n            );\r\n            this.lastPosition = this.lastPosition.add(mv.toUnit().times(this.tracesSpace));\r\n            mv = currentPosition.sub(this.lastPosition);\r\n        }\r\n\r\n        while(this.traces.length>0&&this.traces[0].startTime+this.duration<this.getGameWorld()!.getWorldTime())\r\n            this.traces.shift();\r\n        ////////////////////\r\n\r\n        for (const trace of this.traces) {\r\n            \r\n            // context.setTransform(camera.getCameraTransform());\r\n            // context.translate(x, y);\r\n            // context.rotate(r);\r\n            // context.scale(scale.x, scale.y);\r\n            const lifeTime: number = 1-(world.getWorldTime()-trace.startTime)/this.duration;\r\n\r\n            context.setTransform(camera.getCameraTransform());\r\n            context.translate(trace.position.x, trace.position.y);\r\n            context.rotate(trace.rotation);\r\n\r\n            context.beginPath();\r\n            context.fillStyle = this.color.toArgb(this.color.a*this.transparency*lifeTime).toString();\r\n            context.shadowBlur = 0;\r\n            context.roundRect(-4.5, -3.25, this.length, 2, 0.75);\r\n            context.fill();\r\n            context.closePath();\r\n            \r\n            context.beginPath();\r\n            context.roundRect(-4.5, 1.25, this.length, 2, 0.75);\r\n            context.fill();\r\n            context.closePath();\r\n\r\n\r\n            context.resetTransform();\r\n        }\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\n\r\nexport class TagsC extends Component {\r\n    private tags: Set<string> = new Set<string>();\r\n    \r\n    constructor(...tags: string[]) {\r\n        super();\r\n        tags.forEach(tag => this.addTag(tag));\r\n    }\r\n\r\n    public addTag(tag: string): void {\r\n        this.tags.add(tag);\r\n    }\r\n\r\n    public removeTag(tag: string): void {\r\n        this.tags.delete(tag);\r\n    }\r\n\r\n    public hasTag(tag: string): boolean {\r\n        return this.tags.has(tag);\r\n    }\r\n\r\n    public getTags(): string[] {\r\n        return Array.from(this.tags);\r\n    }\r\n} ","import { rgb } from \"./Helpers/Color\";\r\nimport { RigidBodyC } from \"./Components/RigidBody\";\r\nimport { GameObject } from \"./Core/GameObject\";\r\nimport { TextRendererC } from \"./Components/Renderers/TextRenderer\";\r\nimport { ColliderC as ColliderC } from \"./Components/Collider\";\r\nimport { ColliderRendererC } from \"./Components/Renderers/ColliderRenderer\";\r\nimport { BarRendererC } from \"./Components/Renderers/BarRenderer\";\r\nimport { HealthC } from \"./Components/Health\";\r\nimport { Component } from \"./Core/Component\";\r\nimport { AnimationC } from \"./Components/Animation\";\r\nimport { CanonC } from \"./Components/Canon\";\r\nimport { PolygonRendererC } from \"./Components/Renderers/PolygonRenderer\";\r\nimport { DestroyerC } from \"./Components/Destroyer\";\r\nimport { GMath } from \"./Helpers/Math\";\r\nimport { CanonRendererC } from \"./Components/Renderers/CanonRenderer\";\r\nimport { BulletC } from \"./Components/Bullet\";\r\nimport { Vector } from \"./Helpers/Vector\";\r\nimport { ChasisRendererC } from \"./Components/Renderers/ChasisRenderer\";\r\nimport { TracesRendererC } from \"./Components/Renderers/TracesRenderer\";\r\nimport { TagsC } from \"./Components/Tags\";\r\n\r\nexport class GameObjectFactory {\r\n    public static polygonGO(radius: number = 2, n: number = 3, ...components: Component[]): GameObject {\r\n        let polygonGO: GameObject = new GameObject(\r\n            new RigidBodyC(0.1),\r\n            new PolygonRendererC(radius, n, 0, rgb.randomColor2().toArgb(0.75)),\r\n            new BarRendererC(0.1),\r\n            new ColliderC(GMath.getColliderRadius(n, radius)),\r\n            new ColliderRendererC(),\r\n            new HealthC(25*n),\r\n            new AnimationC(),\r\n            new TagsC(\"Dragable\"),\r\n            ...components\r\n        );\r\n        polygonGO.getTransform().rotation = Math.random()*2*Math.PI;\r\n        polygonGO.name = \"Polygon\";\r\n        \r\n        return polygonGO;\r\n    }\r\n    \r\n    public static enemyGO(radius: number = 2.5, text: string=\"\", zindex = 4, ...components: Component[]): GameObject {\r\n        let circleGO: GameObject = new GameObject(\r\n            new TextRendererC(text, undefined, zindex+0.1),\r\n            new PolygonRendererC(radius, 8, zindex),\r\n            new BarRendererC(zindex+0.1),\r\n            new ChasisRendererC(zindex-0.2),\r\n            new RigidBodyC(30),\r\n            new ColliderC(radius, false),\r\n            new ColliderRendererC(zindex-0.15),\r\n            new HealthC(1500),\r\n            new AnimationC(),\r\n            new TracesRendererC(-21.37),\r\n            ...components\r\n        );\r\n        circleGO.getTransform().rotation = GMath.symRand(Math.PI);\r\n        circleGO.getComponent(CanonC)!.targetDirection = Vector.fromRad(GMath.symRand(Math.PI));\r\n        circleGO.name = \"Enemy\";\r\n        \r\n        return circleGO;\r\n    }\r\n\r\n    public static bulletGO(owner: GameObject, hp=30, radius: number = 0.65, lifeTime: number=1, zindex=-1, ...components: Component[]): GameObject {\r\n        let bulletGO: GameObject = new GameObject(\r\n            new RigidBodyC(0.05, 1.0),\r\n            new PolygonRendererC(radius, 10, zindex, new rgb(173, 87, 87)),\r\n            new ColliderC(radius, false),\r\n            new ColliderRendererC(),\r\n            new HealthC(hp),\r\n            new AnimationC(),\r\n            new DestroyerC(lifeTime),\r\n            new BulletC(owner),\r\n            ...components\r\n        );\r\n        bulletGO.getTransform().rotation = 0;\r\n        bulletGO.name = \"Bullet\";\r\n        \r\n        return bulletGO;\r\n    }\r\n\r\n    public static playerGO(radius: number = 2.5, zindex = 5, ...components: Component[]): GameObject {\r\n        let playerGO: GameObject = new GameObject(\r\n            // new ImageRendererC(undefined, new Vector(1.3, 0.3), \"GameEngine/src/Assets/vectorpaint2.svg\" , zindex-0.2),\r\n            new ChasisRendererC(zindex-0.2),\r\n            new PolygonRendererC(radius, 10, zindex, new rgb(50, 99, 52)),\r\n            new TextRendererC(\"Player\", true, zindex+0.1),\r\n            new ColliderRendererC(zindex-0.15),\r\n            new BarRendererC(zindex+0.1),\r\n            new CanonRendererC(zindex-0.1),\r\n            new RigidBodyC(30, 0.025),\r\n            new ColliderC(radius, false),\r\n            new HealthC(1000),\r\n            new AnimationC(),\r\n            new CanonC(7, 1.55, 44),\r\n            new TracesRendererC(-21.37),\r\n            // new SmokeRendererC(2, 20, zindex-0.11, new rgb(122, 122, 122)),\r\n            ...components\r\n        );\r\n        playerGO.getTransform().rotation = 0;\r\n        playerGO.name = \"Player\";\r\n        \r\n        return playerGO;\r\n    }\r\n\r\n\r\n}","import { Vector } from \"../../Helpers/Vector\";\r\nimport { Plugin } from \"../../Core/Plugin\";\r\nimport { RendererPlugin } from \"../Renderer\";\r\nimport { get } from \"http\";\r\nimport { KeyboardEventArgs, KeyboardPlugin } from \"../Keyboard\";\r\nimport { EventArgs } from \"../../Core/GameEvent\";\r\nimport { PluginOrder } from \"../../Core/PluginOrder\";\r\n\r\n\r\n\r\nexport class ProfilerPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Render;\r\n    public name: string = \"ProfilerPlugin\";\r\n    public size: number = 250;\r\n    private isVisible: boolean = true;\r\n    private profilerWrapper: HTMLDivElement = document.createElement(\"div\");\r\n    private readonly usage = new Map<string, Array<number>>();\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    override start(): void {\r\n        this.getPlugin(KeyboardPlugin).KeyDownEvent.subscribe(this, \"keydown\");\r\n        document.body.appendChild(this.profilerWrapper);\r\n        this.addRecord(\"Fps\", 0);\r\n    }\r\n\r\n    lastTime = performance.now();\r\n    frames = 0;\r\n    fpsHistory: number[] = [];\r\n    override update(delta: number): void {\r\n        const fps = 1 / delta;\r\n        this.addRecord(\"Fps\", fps);\r\n``        \r\n       \r\n        \r\n        this.frames++;\r\n        const now = performance.now();\r\n        if (now - this.lastTime >= 250) {\r\n            this.fpsHistory.push(this.frames*4);\r\n            if (this.fpsHistory.length > 100)\r\n                this.fpsHistory.shift();\r\n            this.frames = 0;\r\n            this.lastTime = now;\r\n\r\n            let i = 0;\r\n            let values: string[] = [];\r\n            for (const element of this.usage) {\r\n                let key = element[0];\r\n                let len = element[1].length;\r\n                let mean = 0;\r\n                for (const v of element[1])\r\n                    mean += v;\r\n                mean/=len;    \r\n                i++;\r\n                values.push(`${key}: `+(mean).toFixed(2).toString());\r\n            }\r\n            this.profilerWrapper.innerHTML = this.getInnerHtml(values);\r\n        }\r\n\r\n    }\r\n    \r\n    protected override event(args: EventArgs, alias?: string): void {\r\n        if (alias == \"keydown\"){\r\n            const kargs = args as KeyboardEventArgs;\r\n            if (kargs.key == \"p\")\r\n                this.isVisible = !this.isVisible;\r\n        }\r\n    }\r\n\r\n    public addRecord(key: string, value: number){\r\n        if(!this.usage.has(key)){\r\n            this.usage.set(key, [value]);\r\n        }\r\n        else {\r\n            let usage = this.usage.get(key)!; \r\n            let len = usage.length;\r\n            if (len >= this.size){\r\n                usage.shift();\r\n                usage.push(value);\r\n            }\r\n            else{\r\n                usage.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getChartHtml(values: number[]): string {\r\n        values = values.slice(Math.max(0, values.length-100), values.length);\r\n        const max = 200; //Math.max(...values);\r\n        let html = `<div class=\"profiler-chart\">`;\r\n        for (let i = 0; i < values.length; i++) {\r\n            html += `<div class=\"profiler-chart-item\" style=\"height: ${values[i]/max*100}px\"></div>`;\r\n        }\r\n        html += `</div>`;\r\n        return html;\r\n    }\r\n\r\n    private getElementsHtml(values: string[]): string {\r\n        let html=\"\";\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (i > 0)\r\n                html += `<hr class=\"profiler-item-separator\">`;\r\n            html += \r\n            `<div class=\"profiler-item\">\r\n                <span class=\"profiler-item-key\">${values[i].split(\": \")[0]}:</span>\r\n                <span class=\"profiler-item-value\">${values[i].split(\": \")[1]}</span>\r\n            </div>`;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    private getInnerHtml(values: string[]): string {\r\n        const profiler = `\r\n            <style>\r\n                .profiler{\r\n                    ${this.isVisible ? \"\" : \"display: none;\"}\r\n                    position: fixed;\r\n                    top: 20px;\r\n                    left: 20px;\r\n                    \r\n                    width: 400px;\r\n                    padding: 20px;\r\n                    border-radius: 20px;\r\n                    background-color: rgba(42, 43, 46, 0.382);\r\n                    color: white;\r\n                    pointer-events: none;\r\n                }\r\n                .profiler-header{\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    color: white;\r\n                    margin-bottom: 10px;\r\n                }\r\n                .profiler-item{\r\n                    // display: flex;\r\n                    // justify-content: space-between;\r\n                    padding: 5px 0;\r\n                    color:rgba(240, 240, 240, 0.85)\r\n                }\r\n                .profiler-item-key{\r\n                    margin-right: 10px;\r\n                }\r\n                .profiler-item-value{\r\n                    color: #f0f0f0;\r\n                }\r\n                .profiler-item-separator{\r\n                    border: none;\r\n                    border-top: 1px dashed gray;\r\n                    opacity: 0.75;\r\n                    margin: 2px 0;\r\n                }\r\n                .profiler-chart{\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: space-between;\r\n                    align-items: flex-end;\r\n                    height: 100px;\r\n                    width: 100%;\r\n                    margin-bottom: 10px;\r\n                    border-radius: 10px;\r\n                    overflow: hidden;\r\n                    opacity: 0.25;\r\n                }\r\n                .profiler-chart-item{\r\n                    background-color: rgb(240, 240, 240);\r\n                    width: 100%;\r\n                    margin: 0;\r\n                }\r\n            </style>\r\n\r\n            <div class=\"profiler\">\r\n                <div class=\"profiler-header\">\r\n                    <h2 style=\"margin: 0\">Profiler <span style=\"opacity: 0.5\">[P]</span></h2>\r\n                </div>\r\n                ${this.getChartHtml(this.fpsHistory)}\r\n                ${this.getElementsHtml(values)}\r\n            </div>\r\n            `\r\n        return profiler;\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { ProfilerPlugin } from \"../Plugins/Hud/Profiler\";\r\nimport { Plugin } from \"./Plugin\";\r\nimport { GameEvent } from \"./GameEvent\";\r\n\r\nexport class GameWorld {\r\n    private startTime: number=0;\r\n    private prevWorldTime: number=0;\r\n    private worldTime: number=0;\r\n    private tickCount: number = 0;\r\n\r\n    private gameObjects: Map<string, GameObject> = new Map<string, GameObject>();\r\n    private plugins: Map<string, Plugin> = new Map<string, Plugin>();\r\n    private events: Set<WeakRef<GameEvent>> = new Set<WeakRef<GameEvent>>();\r\n    private gameObjectsToStart: string[] = [];\r\n    \r\n    constructor(...plugins: Plugin[]){\r\n        plugins.sort((a, b) => a.order - b.order);\r\n        for(let plugin of plugins){\r\n            let name = plugin.constructor.name;\r\n            if (this.plugins.has(name))\r\n                throw new Error(`Plugin ${name} already exists in the game object`);\r\n                    \r\n            (plugin as any).gameWorld = this;\r\n            this.plugins.set(name, plugin);\r\n        }\r\n    }\r\n    //plugins\r\n    public tryGetPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T | undefined {\r\n        const name = plugin.name;\r\n        if (!this.plugins.has(name))\r\n            return undefined;\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T {\r\n        const name = plugin.name;\r\n        if (!this.plugins.has(name))\r\n            throw new Error(`Plugin ${name} does not exist in the game world`);\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getPluginByName<T extends Plugin>(name: string): T {\r\n        if (!this.plugins.has(name))\r\n            throw new Error(`Plugin ${name} does not exist in the game world`);\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getAllPlugins(): Plugin[]{\r\n        return Array.from(this.plugins.values());\r\n    }\r\n    public hasPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): boolean{\r\n        const name = plugin.name;\r\n        return this.plugins.has(name);\r\n    }\r\n\r\n\r\n    //game objects\r\n    public isSpawned(gameObject: GameObject): boolean{\r\n        return  this.gameObjects.has(gameObject.getId());\r\n    }\r\n    public spawn(gameObject: GameObject): GameObject{\r\n        if (this.gameObjects.has(gameObject.getId()))\r\n            throw new Error(`GameObject ${gameObject.name} already exists in the game world`);\r\n\r\n        (gameObject as any).gameWorld = this;\r\n        this.gameObjects.set(gameObject.getId(), gameObject);\r\n        this.gameObjectsToStart.push(gameObject.getId());\r\n        return gameObject;\r\n    }\r\n    public destroy(gameObject?: GameObject): void{\r\n        if (!gameObject) return;\r\n        if (!this.gameObjects.has(gameObject.getId()))\r\n            throw new Error(`GameObject ${gameObject.name} does'not exist in the game world`);\r\n        (gameObject as any).gameWorld = undefined;\r\n\r\n        gameObject.enabled=false;\r\n        this.gameObjects.delete(gameObject.getId());\r\n    }\r\n    public hasGameObject(id: string): boolean {\r\n        return this.gameObjects.has(id);\r\n    }\r\n    public getGameObject(id: string): GameObject | undefined {\r\n        return this.gameObjects.get(id);\r\n    }\r\n    public getAllGameObjects(onlyEnabled: boolean=true): GameObject[]{\r\n        return Array.from(this.gameObjects.values()).filter(go=>go.enabled||!onlyEnabled);\r\n    }\r\n\r\n    //components\r\n    public getComponents<T extends Component>(classC: new (...args: any[]) => T, onlyEnabled: boolean=true): T[]{\r\n        return this.getAllGameObjects()\r\n        .filter(go => go.hasComponent(classC)&&(go.getComponent(classC)!.isEnabled()||!onlyEnabled))\r\n        .map(go => go.getComponent(classC)!);\r\n    }\r\n    //events\r\n    public registerEvent(event: GameEvent): void{\r\n        this.events.add(new WeakRef(event));\r\n    }\r\n    //time\r\n    public getWorldTime(): number {\r\n        return this.worldTime/1e3;\r\n    }\r\n\r\n\r\n\r\n    //flow control\r\n    public tick(): void {\r\n        this.tickCount++;\r\n        if (this.tickCount == 1) \r\n            this.startWorld();\r\n        else\r\n            this.updateWorld();\r\n\r\n        this.startComponents();\r\n        this.invokeEvents();\r\n    }\r\n    private startComponents(): void{\r\n        for (let gameObjectId of this.gameObjectsToStart) {\r\n            const gameObject = this.getGameObject(gameObjectId);\r\n            gameObject?.getAllComponents().forEach(component => {(component as any).start();});\r\n        }\r\n        this.gameObjectsToStart = [];\r\n    }\r\n    private startWorld(): void{\r\n        this.startTime = performance.now();\r\n        this.Start();\r\n        this.plugins.forEach(plugin => (plugin as any).start());\r\n    }\r\n    private updateWorld(): void{\r\n        this.worldTime = performance.now() - this.startTime;\r\n        const delta = this.worldTime - this.prevWorldTime;\r\n        this.prevWorldTime = this.worldTime;\r\n       \r\n        this.Update(delta / 1e3);\r\n        this.plugins.forEach(plugin => {\r\n            if (!plugin.isEnabled())\r\n                return;\r\n            let start = performance.now(); \r\n            (plugin as any).update(delta/1e3);\r\n            this.tryGetPlugin(ProfilerPlugin)?.addRecord(plugin.name, performance.now()-start);\r\n        });\r\n    }\r\n\r\n    private invokeEvents(): void{\r\n        let start = performance.now();\r\n        for (const eventRef of this.events) {\r\n            const event = eventRef.deref();\r\n            if (event)\r\n                (event as any).invoke();\r\n            else\r\n                this.events.delete(eventRef);\r\n        }\r\n        this.tryGetPlugin(ProfilerPlugin)?.addRecord(\"Events\", performance.now()-start);\r\n    }\r\n    //overridable methods\r\n    protected Start(): void { }\r\n    protected Update(delta: number): void { }\r\n}","import { GameObject } from \"../Core/GameObject\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { CanonC } from \"./Canon\";\r\nimport { StandaloneComponent } from \"./StandaloneComponent\";\r\nimport { BulletC } from \"./Bullet\";\r\nimport { RigidBodyC } from \"./RigidBody\";\r\nimport { GMath } from \"../Helpers/Math\";\r\nimport { DamageEventArgs, HealthC } from \"./Health\";\r\nimport { EventArgs} from \"../Core/GameEvent\";\r\n\r\n\r\nexport enum NpcType{\r\n    neutral,\r\n    passive,\r\n    aggresive\r\n}\r\nexport class NpcC extends StandaloneComponent{\r\n    public type: NpcType = NpcType.aggresive;\r\n    public isAttacing: boolean = false;\r\n    private targetId: string = \"None\";\r\n    isFollowing: boolean = false;\r\n    minDistance: number = 35;\r\n    maxDistance: number = 1000;\r\n    maxSpeed: number = 10;\r\n\r\n   \r\n    protected override start(): void {\r\n        let health = this.getComponent(HealthC);\r\n        health!.damageEvent.subscribe(this);\r\n    }\r\n    protected override event(args: EventArgs): void {\r\n        let damageArgs = args as DamageEventArgs;\r\n        const other = damageArgs.participant;\r\n        if(other.getComponent(BulletC)?.getOwner())\r\n            this.attack(other.getComponent(BulletC)!.getOwner()!);\r\n    }\r\n\r\n\r\n    private attack(gameObject: GameObject): void{\r\n        this.isAttacing = true;\r\n        this.targetId = gameObject.getId();\r\n        this.isFollowing = true;\r\n    }\r\n    override update(delta: number): void {\r\n        const world = this.getGameWorld();\r\n        if (!world) return;\r\n\r\n        let target = world.getGameObject(this.targetId);\r\n        if (!target){\r\n            this.isAttacing=false;\r\n            return;\r\n        } \r\n        \r\n        if(this.isAttacing){\r\n            let turret = this.getComponent(CanonC)!;\r\n            let direction = target.getTransform().position.sub(this.getTransform()!.position);\r\n            turret.targetDirection = direction; \r\n            let distance = direction.magnitude();\r\n            if(distance>this.maxDistance)\r\n                this.isAttacing = false;\r\n\r\n            turret.shoot();\r\n            if (distance>=this.minDistance){\r\n                let angle=this.getTransform()!.rotation;\r\n                let targetAngle=direction.toRad();\r\n                angle += 5*delta*GMath.deltaAngle(angle, targetAngle);\r\n                this.getTransform()!.rotation = angle;  \r\n\r\n                let rigidBody = this.getComponent(RigidBodyC)!;\r\n                rigidBody.velocity = Vector.fromRad(angle).times(this.maxSpeed);\r\n            }\r\n    \r\n        }\r\n    }\r\n} ","import { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { GameObjectFactory } from \"../GameObjectFactory\";\r\nimport { GameWorld } from \"../Core/GameWorld\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { CanonC } from \"../Components/Canon\";\r\nimport { NpcC } from \"../Components/Npc\";\r\nimport { GMath } from \"../Helpers/Math\";\r\nimport { CanonRendererC } from \"../Components/Renderers/CanonRenderer\";\r\n\r\nexport class MyWorld extends GameWorld {\r\n    override Start() {\r\n        console.log(\"Hello, MyWorld!\");\r\n        \r\n        \r\n        const r = 350;\r\n        for(let i = 0; i < 350; i++){\r\n            const radius = 3+GMath.symRand(0.25);\r\n            let sqr = GameObjectFactory.polygonGO(radius/2, 4)\r\n            sqr.getTransform().position = Vector.randomPos(r);\r\n            sqr.getComponent(RigidBodyC)!.angularVelocity = Math.random()*2-1;\r\n            this.spawn(sqr);\r\n        }\r\n        for(let i = 0; i < 150; i++){\r\n            const radius = 3.5+GMath.symRand(0.25);\r\n            let triangle = GameObjectFactory.polygonGO(radius/2, 3)\r\n            triangle.getTransform().position = Vector.randomPos(r);\r\n            triangle.getComponent(RigidBodyC)!.angularVelocity = Math.random()*2-1;\r\n            this.spawn(triangle);\r\n        }\r\n        for(let i = 0; i < 250; i++){\r\n            const radius = 4+GMath.symRand(0.25);\r\n            let polygon = GameObjectFactory.polygonGO(radius/2, Math.round(Math.random()*3)+5);\r\n            polygon.getTransform().position = Vector.randomPos(r);\r\n            polygon.getComponent(RigidBodyC)!.angularVelocity = Math.random()*2-1;\r\n            this.spawn(polygon);\r\n        }\r\n        // for(let i = 0; i < 225; i++){\r\n        //     const radius = 3+GMath.symRand(0.25);\r\n        //     let polygon = GameObjectFactory.polygonGO(\r\n        //         radius/2, \r\n        //         Math.round(Math.random()*3)+5,\r\n        //         new ImageRendererC(Vector.zero(), undefined, undefined, 12)\r\n        //     );\r\n        //     polygon.getTransform().position = new Vector(Math.random()*2*r-r, Math.random()*2*r-r);\r\n        //     polygon.getComponent(RigidBodyC).angularVelocity = Math.random()*2-1;\r\n        //     polygon.getComponent(PolygonRendererC).enable(false);\r\n        //     this.spawn(polygon);\r\n        // }\r\n        \r\n        \r\n        \r\n        \r\n        for(let i = 0; i < 25; i++){\r\n            let follower = GameObjectFactory.enemyGO(2.5, \"Enemy nr.\"+i, 4,\r\n                new CanonC(undefined, undefined, 10+Math.random()*5),\r\n                new CanonRendererC(4-0.1),\r\n                new NpcC()\r\n            );\r\n\r\n            follower.getTransform().position = Vector.randomPos(r);\r\n            this.spawn(follower);\r\n        }\r\n    }\r\n\r\n    override Update(delta: number) {\r\n        \r\n    }\r\n}","import { Vector } from \"../../Helpers/Vector\";\r\nimport { CameraPlugin } from \"../../Plugins/Camera\";\r\nimport { PolygonRendererC } from \"./PolygonRenderer\";\r\nimport { RendererC } from \"./Renderer\";\r\n\r\nexport class ImageRendererC extends RendererC {\r\n    private image = new Image();\r\n    public side: Vector;\r\n    public offset: Vector;\r\n\r\n    constructor(side: Vector=Vector.zero(), offset: Vector=Vector.zero(),  src: string=\"GameEngine/src/Assets/vectorpaint3.svg\", zindex=0){\r\n        super();\r\n        this.zindex = zindex;\r\n        this.side = side;\r\n        this.offset=offset;\r\n        this.image.src = src;\r\n    }\r\n\r\n    public render(context: CanvasRenderingContext2D): void {\r\n        const world = this.getGameWorld();\r\n        const transform = this.getTransform();\r\n        const camera = this.getPlugin(CameraPlugin);\r\n        if (!world || !transform || !camera) return;\r\n\r\n\r\n        const x = transform.position.x;\r\n        const y = transform.position.y;\r\n        const r = transform.rotation;\r\n        const scale = transform.scale;\r\n\r\n        context.setTransform(camera.getCameraTransform());\r\n        context.translate(x, y);\r\n        context.rotate(r);\r\n        context.scale(scale.x, scale.y);\r\n\r\n        \r\n        let a: Vector = this.side;\r\n        if (a.x==0)\r\n            a.x = this.image.width;\r\n        if (a.y==0)\r\n            a.y = this.image.height;\r\n\r\n        context.shadowBlur = 15;\r\n        context.drawImage(this.image, -a.x/2,  -a.y/2, a.x, a.y);\r\n        context.shadowBlur = 0;\r\n\r\n\r\n        context.resetTransform();\r\n    }\r\n}","import { ColliderRendererC } from \"../Components/Renderers/ColliderRenderer\";\r\nimport { RendererC } from \"../Components/Renderers/Renderer\";\r\nimport { BarRendererC } from \"../Components/Renderers/BarRenderer\";\r\nimport { TextRendererC } from \"../Components/Renderers/TextRenderer\";\r\nimport { rgb } from \"../Helpers/Color\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { CameraPlugin } from \"./Camera\";\r\nimport { ImageRendererC } from \"../Components/Renderers/ImageRenderer\";\r\nimport { PolygonRendererC } from \"../Components/Renderers/PolygonRenderer\";\r\nimport { CanonRendererC } from \"../Components/Renderers/CanonRenderer\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { ChasisRendererC } from \"../Components/Renderers/ChasisRenderer\";\r\nimport { TracesRendererC } from \"../Components/Renderers/TracesRenderer\";\r\nimport { BulletRendererC } from \"../Components/Renderers/BulletRenderer\";\r\nimport { SmokeRendererC } from \"../Components/Renderers/SmokeRenderer\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\n\r\nexport class RendererPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Render;\r\n    public name: string = \"RendererPlugin\";\r\n    private readonly context: CanvasRenderingContext2D;\r\n    public renderDistance: number = 150;\r\n    \r\n    \r\n    \r\n    constructor(context: CanvasRenderingContext2D) {\r\n        super();\r\n        this.context = context;\r\n    }\r\n\r\n    addVignetteEffect(context: CanvasRenderingContext2D, color: string) {\r\n        const centerX = context.canvas.width / 2;\r\n        const centerY = context.canvas.height / 2;\r\n        const maxRadius = Math.sqrt(centerX * centerX + centerY * centerY);\r\n        const gradient = context.createRadialGradient(centerX, centerY, 0, centerX, centerY, maxRadius);\r\n        gradient.addColorStop(0.025, 'rgba(0, 0, 0, 0)');\r\n        gradient.addColorStop(1, color);\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n    }\r\n\r\n    private gridCanvas: HTMLCanvasElement[] = [];\r\n    public override start(): void {\r\n        ////\r\n        this.context.imageSmoothingEnabled = true;\r\n        this.context.strokeStyle = \"rgb(43,43,44)\";\r\n        this.context.lineWidth = 0.175;\r\n        this.context.lineJoin = \"round\";\r\n        this.context.shadowColor =  'rgba(0, 0, 0, 0.75)';\r\n        this.context.fillStyle = \"#716f6b\";\r\n        this.context.fillStyle =\"rgb(85, 106, 86)\";\r\n        this.context.fillStyle =\"rgb(66, 85, 68)\";\r\n        ////\r\n        // let worker = new Worker(new URL(\"../Components/Renderers/BackgroundRenderer.ts\", import.meta.url), { type: 'module' }); //this.drawDotGrid(ctx, new Vector(2.5, 2.5), 0.175, rgb.stroke.toString(), new Vector(i*4+5, i*4+5));\r\n        const worker = new Worker(new URL('../Components/Renderers/BackgroundRenderer.ts', import.meta.url), { type: 'module' })\r\n        worker.onerror = (e) => { console.error(\"Worker error:\", e); };\r\n\r\n        for(let i=0;i<10;i++){\r\n            this.gridCanvas[i] = document.createElement(\"canvas\");\r\n            this.gridCanvas[i].width = 3440;\r\n            this.gridCanvas[i].height = 1440;\r\n            document.createElement(\"canvas\");\r\n            const offscreen = this.gridCanvas[i].transferControlToOffscreen();\r\n            worker.postMessage({ canvas: offscreen, args: [new Vector(2, 2), 0.175, rgb.stroke.toString(), new Vector(i*5+5, i*5+5)] }, [offscreen]);\r\n        }\r\n        \r\n    }\r\n\r\n    private clip(position?: Vector): boolean{\r\n        if (!position) return true;\r\n        \r\n        const width = this.context.canvas.width;\r\n        const height = this.context.canvas.height;\r\n        \r\n        const scale = this.getPlugin(CameraPlugin).zoomV;\r\n        const cameraPositon = this.getPlugin(CameraPlugin).cameraPosition;\r\n        const xClip = Math.abs(width/2/scale.x);  \r\n        const yClip = Math.abs(height/2/scale.y);\r\n          \r\n        return Math.abs(position.x-cameraPositon.x) > xClip || Math.abs(position.y-cameraPositon.y) > yClip;\r\n    }\r\n    public override update(delta:number): void {\r\n        const width = this.context.canvas.width;\r\n        const height = this.context.canvas.height;\r\n        // this.context.fillStyle =\"rgb(66, 85, 68)\";\r\n        // this.context.fillStyle =\"rgb(105, 111, 105)\";\r\n        this.context.fillStyle =\"rgba(80, 100, 81, 1)\";\r\n        this.context.fillRect(0, 0, width, height);\r\n        this.getPlugin(CameraPlugin).cameraScreenOffset = new Vector(this.context.canvas.width/2, this.context.canvas.height/2);\r\n\r\n\r\n\r\n        // let gx = Math.sqrt(3);\r\n        // let gy = 3;\r\n        let gx = 2;\r\n        let gy = 2;\r\n        const offset = this.getPlugin(CameraPlugin).cameraScreenOffset;\r\n        const scale = this.getPlugin(CameraPlugin).zoomV;\r\n        const cpos = this.getPlugin(CameraPlugin).cameraPosition;\r\n        let i = Math.max(0, Math.min(9, Math.round(scale.x/10)));\r\n        let c = i * 5 + 5;\r\n        this.context.translate(offset.x, offset.y);\r\n        this.context.scale(scale.x, scale.y);\r\n        this.context.translate((-cpos.x)%gx, (-cpos.y)%gy);\r\n        this.context.scale(1/c, 1/c);\r\n        this.context.drawImage(this.gridCanvas[i], -this.gridCanvas[i].width/2, -this.gridCanvas[i].height/2, this.gridCanvas[i].width, this.gridCanvas[i].height);\r\n        this.context.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        \r\n        \r\n        (this.gameWorld.getComponents(TextRendererC) as RendererC[])\r\n        .concat(this.gameWorld.getComponents(ColliderRendererC) as RendererC[])\r\n        .concat(this.gameWorld.getComponents(BarRendererC)as RendererC[])\r\n        .concat(this.gameWorld.getComponents(PolygonRendererC)as RendererC[])\r\n        .concat(this.gameWorld.getComponents(ImageRendererC)as RendererC[])\r\n        .filter(renderer => !this.clip(renderer.getTransform()?.position))\r\n        .concat(this.gameWorld.getComponents(CanonRendererC)as RendererC[])\r\n        .concat(this.gameWorld.getComponents(BulletRendererC)as RendererC[])\r\n        .concat(this.gameWorld.getComponents(TracesRendererC)as RendererC[])\r\n        .filter(renderer => !this.clip(renderer.getTransform()?.position))\r\n        .concat(this.gameWorld.getComponents(ChasisRendererC)as RendererC[])\r\n        .concat(this.gameWorld.getComponents(SmokeRendererC)as RendererC[])\r\n        .filter(renderer => !this.clip(renderer.getTransform()?.position))\r\n        .sort((a, b) => a.zindex-b.zindex).forEach(renderer => renderer.render(this.context, delta));\r\n        // this.gameWorld.getAllComponents<RendererC>(RendererC.name).forEach(renderer => renderer.render(this.context));\r\n        this.addVignetteEffect(this.context, 'rgba(0, 0, 0, 0.35)');\r\n    }\r\n}","import { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class PhysicsPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Physics;\r\n    public name: string = \"PhysicsPlugin\";\r\n   \r\n    public override update(delta: number): void {\r\n        const totalDelta: number = this.gameWorld.getWorldTime();\r\n        this.gameWorld.getComponents(RigidBodyC).forEach(rigidBody => rigidBody.update(delta));\r\n    }\r\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\nimport { rgb } from \"../Helpers/Color\";\r\nimport { cli, cliPlugin, CommandResult } from \"../Helpers/Commands\";\r\n\r\n@cliPlugin(\"cli\")\r\nexport class CliPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.None;\r\n    public name: string = \"CliPlugin\";\r\n    private globalCommands: Map<string, string | undefined> = new Map<string, string | undefined>();\r\n\r\n\r\n    @cli(\"echo\", \"<message: string>\", \"string\")\r\n    private echo(message: string): CommandResult {\r\n        return new CommandResult(true, message, message);\r\n    }\r\n    @cli(\"loop\", \"<iterations: int> <command: string>\", \"string\")\r\n    private loop(iters: number, command: string): CommandResult {\r\n        let ret = [];\r\n        let message = \"\";\r\n        for (let i = 0; i < iters; i++) {\r\n            const result = this.parseAndExecuteCommands(command);\r\n            if (!result.status) {\r\n                return new CommandResult(false, `Error executing command: ${result.message}`, undefined);\r\n            }\r\n            ret.push(result.data);\r\n            message += `${result.message}\\n`;\r\n        }\r\n        return new CommandResult(true, message, ret);\r\n    }\r\n    @cli(\"true\", undefined, \"bool\")\r\n    private true(): CommandResult {\r\n        const message = \"This is a true command\";\r\n        return new CommandResult(true, message, true);\r\n    }\r\n    @cli(\"false\", undefined, \"bool\")\r\n    private false(): CommandResult {\r\n        const message = \"This is a false command\";\r\n        return new CommandResult(true, message, false);\r\n    }\r\n    @cli(\"int\", \"<value: string>\", \"number\")\r\n    private int(value: string): CommandResult{\r\n        const message = `This is an int command with value ${value}`;\r\n        return new CommandResult(true, message, parseInt(value));\r\n    }\r\n    @cli(\"float\", \"<value: string>\", \"number\")\r\n    private float(value: string): CommandResult{\r\n        const message = `This is a float command with value ${value}`;\r\n        return new CommandResult(true, message, parseFloat(value));\r\n    }\r\n    @cli(\"refresh\")\r\n    private refresh(): CommandResult {\r\n        const message = \"This is a refresh command\";\r\n        location.reload();\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n    @cli(\"randomcolor\",undefined, \"rgb\")\r\n        private getrandomcolor(): CommandResult {\r\n        const randomColor = rgb.randomColor2();\r\n        return new CommandResult(true, `Random color is ${randomColor}`, randomColor);\r\n    }\r\n    @cli(\"help\")\r\n    protected override help(): CommandResult {\r\n        let superResult = super.help();\r\n\r\n        let message = `plugins:\\n`;\r\n        for (const plugin of this.gameWorld.getAllPlugins()) {\r\n            message += `/${(plugin as any).cliGetName()}\\n`;\r\n        }\r\n        message = superResult.message + \"\\n\" + message;\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n\r\n    @cli(\"art\")\r\n    protected art(): CommandResult {\r\n        \r\n        const asciiArt = `\r\n        \\x1b[31m██████╗░░█████╗░██████╗░███████╗\r\n        \\x1b[32m██╔══██╗██╔══██╗██╔══██╗╚════██║\r\n        \\x1b[33m██║░░██║██║░░██║██████╔╝░░░░██╔╝\r\n        \\x1b[34m██║░░██║██║░░██║██╔═══╝░░░░██╔╝░\r\n        \\x1b[35m██████╔╝╚█████╔╝██║░░░░░░░██║░░░\r\n        \\x1b[36m╚═════╝░░╚════╝░╚═╝░░░░░░░╚═╝░░░\\x1b[0m\r\n        `;\r\n        const ansiArt = `\r\n\\x1b[38;5;160m         ██████         \\x1b[0m\r\n\\x1b[38;5;160m       ██████████       \\x1b[0m\r\n\\x1b[38;5;160m      ████    ████      \\x1b[0m\r\n\\x1b[38;5;82m    ████        ████    \\x1b[0m\r\n\\x1b[38;5;82m   ████          ████   \\x1b[0m\r\n\\x1b[38;5;82m  ████            ████  \\x1b[0m\r\n\\x1b[38;5;82m  ████    ████    ████  \\x1b[0m\r\n\\x1b[38;5;82m  ████████████████████  \\x1b[0m\r\n\\x1b[38;5;226m   ██████████████████   \\x1b[0m\r\n\\x1b[38;5;226m     ████████████████     \\x1b[0m\r\n\\x1b[38;5;226m      ████    ██████      \\x1b[0m\r\n\\x1b[38;5;196m      ████    ██████      \\x1b[0m\r\n\\x1b[38;5;196m     ██████████████████     \\x1b[0m\r\n\\x1b[38;5;196m    ████████████████████    \\x1b[0m\r\n\\x1b[38;5;196m   ██████████████████████   \\x1b[0m\r\n\\x1b[38;5;196m  ████████████████████████  \\x1b[0m\r\n\\x1b[38;5;160m      ██████████████      \\x1b[0m\r\n\\x1b[38;5;160m       ████████████       \\x1b[0m\r\n        `;\r\n\r\n        console.log(ansiArt);\r\n\r\n        return new CommandResult(true, ansiArt, undefined);\r\n    }\r\n\r\n\r\n\r\n    public execute(command: string): CommandResult {\r\n        try{\r\n            return this.parseAndExecuteCommands(command);\r\n        }\r\n        catch {\r\n            return new CommandResult(false, \"Command execution failed\", undefined);\r\n        }\r\n    }\r\n\r\n    override start(): void {\r\n        this.gameWorld.getAllPlugins().forEach(plugin => {\r\n            const pluginName = plugin.constructor.name;\r\n            try{\r\n                for(let command of Object.keys((plugin as any).constructor[\"commands\"])){\r\n                    if (this.globalCommands.has(command)) \r\n                        this.globalCommands.set(command, undefined);\r\n                    else\r\n                    this.globalCommands.set(command, pluginName);\r\n                }\r\n            } catch {}\r\n        });\r\n    };\r\n\r\n    private parseAndExecuteCommands(input: string, depth: number = 0): CommandResult {\r\n        console.log((\"---\".repeat(depth))+\"Parsing: \"+input);\r\n        const args: any[] = [];\r\n        let current = '';\r\n        let inSingleQuote = false;\r\n        let inDoubleQuote = false;\r\n        let parenDepth = 0;\r\n    \r\n        input = input.trim();\r\n        for (let i = 0; i < input.length; i++) {\r\n            const char = input[i];\r\n            \r\n            if(parenDepth>0){\r\n                if(char === \"{\"){\r\n                    parenDepth++;\r\n                    current+= char;\r\n                    continue;\r\n                }\r\n                if(char === \"}\"){\r\n                    parenDepth--;\r\n                    if(parenDepth===0){\r\n                        const result = this.parseAndExecuteCommands(current, depth+1);\r\n                        // console.log(\"   \".repeat(depth)+result.message);\r\n                        args.push(result.data);\r\n                        current = '';\r\n                    }\r\n                    else\r\n                        current+=char;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            \r\n            if (inDoubleQuote) {\r\n                if (char === \"\\\"\") {\r\n                    args.push(current);\r\n                    current = '';\r\n                    inDoubleQuote = false;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            if (inSingleQuote) {\r\n                if (char === \"'\") {\r\n                    args.push(current);\r\n                    current = '';\r\n                    inSingleQuote = false;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            if (char === \"\\\"\") {\r\n                inDoubleQuote = true;\r\n                continue;\r\n            }\r\n            if (char === \"'\") {\r\n                inSingleQuote = true;\r\n                continue;\r\n            }\r\n            if (char === \"{\") {\r\n                parenDepth++;\r\n                continue;\r\n            }\r\n            if (char === \" \") {\r\n                if (current.trim() !== \"\"){\r\n                    args.push(current);\r\n                    current = '';\r\n                }\r\n                continue;\r\n            }\r\n            current += char;\r\n        }\r\n        if (current.trim() !== \"\") {\r\n            args.push(current);\r\n        }\r\n        console.log(\"---\".repeat(depth)+\"Parsing result: \",args);\r\n        const fullCommand = args[0].split(':');\r\n        if (fullCommand.length === 2) {\r\n            const pluginName = fullCommand[0];\r\n            const plugin = this.gameWorld.getAllPlugins().find(p => (p as any).cliGetName() === pluginName);\r\n            if (!plugin)\r\n                return new CommandResult(false, `Plugin ${pluginName} not found`, undefined);\r\n            return this.executeParsedCommand(plugin, fullCommand[1], ...args.slice(1));\r\n        }\r\n        else if (fullCommand.length === 1) {\r\n            try{\r\n                if (!this.globalCommands.has(fullCommand[0]))\r\n                    return new CommandResult(false, `Command ${fullCommand[0]} not found`, undefined);\r\n                const pluginName = this.globalCommands.get(fullCommand[0]);\r\n                if (!pluginName)\r\n                    return new CommandResult(false, `More than one command found, use \"/<plugin>:<command>\" (fe /cli:help) instead.`, undefined);\r\n                const plugin = this.gameWorld.getPluginByName(pluginName);\r\n                return this.executeParsedCommand(plugin, fullCommand[0], ...args.slice(1));\r\n            }\r\n            catch{\r\n                return new CommandResult(false, \"Command not found or wrong syntax\", undefined);\r\n            }\r\n        }\r\n        else {\r\n            return new CommandResult(false, \"No command found\", undefined);\r\n        }\r\n    }\r\n    \r\n    private executeParsedCommand(plugin: Plugin, command: string, ...args: any[]): CommandResult {\r\n        if ((plugin as any).constructor[\"commands\"][command] === undefined) {\r\n            return new CommandResult(false, `Command ${command} not found`, undefined);\r\n        }\r\n        try {\r\n            let commandToApply = (plugin as any).constructor[\"commands\"][command];\r\n            let result: CommandResult = commandToApply.apply(plugin, args);\r\n            return result;\r\n        } catch { }\r\n        return new CommandResult(false, `Failed to execute command ${command} on ${(plugin as any).cliGetName()}`, undefined);\r\n    }\r\n}","var AnsiUp = (function () {\n    function AnsiUp() {\n        this.ansi_colors = [\n            // Normal colors\n            [\n                { rgb: [0, 0, 0], class_name: \"ansi-black\" },\n                { rgb: [187, 0, 0], class_name: \"ansi-red\" },\n                { rgb: [0, 187, 0], class_name: \"ansi-green\" },\n                { rgb: [187, 187, 0], class_name: \"ansi-yellow\" },\n                { rgb: [0, 0, 187], class_name: \"ansi-blue\" },\n                { rgb: [187, 0, 187], class_name: \"ansi-magenta\" },\n                { rgb: [0, 187, 187], class_name: \"ansi-cyan\" },\n                { rgb: [255, 255, 255], class_name: \"ansi-white\" }\n            ],\n            // Bright colors\n            [\n                { rgb: [85, 85, 85], class_name: \"ansi-bright-black\" },\n                { rgb: [255, 85, 85], class_name: \"ansi-bright-red\" },\n                { rgb: [0, 255, 0], class_name: \"ansi-bright-green\" },\n                { rgb: [255, 255, 85], class_name: \"ansi-bright-yellow\" },\n                { rgb: [85, 85, 255], class_name: \"ansi-bright-blue\" },\n                { rgb: [255, 85, 255], class_name: \"ansi-bright-magenta\" },\n                { rgb: [85, 255, 255], class_name: \"ansi-bright-cyan\" },\n                { rgb: [255, 255, 255], class_name: \"ansi-bright-white\" }\n            ]\n        ];\n        this.setup_256_palette();\n        this.useClasses = false;\n        this.escapeForHtml = true;\n        this.bright = false;\n        this.fg = this.bg = null;\n        this._buffer = '';\n    }\n    Object.defineProperty(AnsiUp.prototype, \"useClasses\", {\n        get: function () {\n            return this._useClasses;\n        },\n        set: function (useClasses) {\n            this._useClasses = useClasses;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AnsiUp.prototype, \"escapeForHtml\", {\n        get: function () {\n            return this._escapeForHtml;\n        },\n        set: function (arg) {\n            this._escapeForHtml = arg;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AnsiUp.prototype.setup_256_palette = function () {\n        var _this = this;\n        this.palette_256 = [];\n        // Index 0..15 : Ansi-Colors\n        this.ansi_colors.forEach(function (palette) {\n            palette.forEach(function (rec) {\n                _this.palette_256.push(rec);\n            });\n        });\n        // Index 16..231 : RGB 6x6x6\n        // https://gist.github.com/jasonm23/2868981#file-xterm-256color-yaml\n        var levels = [0, 95, 135, 175, 215, 255];\n        for (var r = 0; r < 6; ++r) {\n            for (var g = 0; g < 6; ++g) {\n                for (var b = 0; b < 6; ++b) {\n                    var c = { rgb: [levels[r], levels[g], levels[b]], class_name: 'truecolor' };\n                    this.palette_256.push(c);\n                }\n            }\n        }\n        // Index 232..255 : Grayscale\n        var grey_level = 8;\n        for (var i = 0; i < 24; ++i, grey_level += 10) {\n            var c = { rgb: [grey_level, grey_level, grey_level], class_name: 'truecolor' };\n            this.palette_256.push(c);\n        }\n    };\n    AnsiUp.prototype.doEscape = function (txt) {\n        return txt.replace(/[&<>]/gm, function (str) {\n            if (str === \"&\")\n                return \"&amp;\";\n            if (str === \"<\")\n                return \"&lt;\";\n            if (str === \">\")\n                return \"&gt;\";\n        });\n    };\n    AnsiUp.prototype.old_linkify = function (txt) {\n        return txt.replace(/(https?:\\/\\/[^\\s]+)/gm, function (str) {\n            return \"<a href=\\\"\" + str + \"\\\">\" + str + \"</a>\";\n        });\n    };\n    AnsiUp.prototype.detect_incomplete_ansi = function (txt) {\n        return !(/.*?[\\x40-\\x7e]/.test(txt));\n    };\n    AnsiUp.prototype.detect_incomplete_link = function (txt) {\n        var found = false;\n        for (var i = txt.length - 1; i > 0; i--) {\n            if (/\\s|\\x1B/.test(txt[i])) {\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            // Handle one other case\n            // Maybe the whole string is a URL?\n            if (/(https?:\\/\\/[^\\s]+)/.test(txt)) {\n                return 0;\n            }\n            else\n                return -1;\n        }\n        // Test if possible prefix\n        var prefix = txt.substr(i + 1, 4);\n        if (prefix.length === 0)\n            return -1;\n        if (\"http\".indexOf(prefix) === 0) {\n            return (i + 1);\n        }\n    };\n    AnsiUp.prototype.ansi_to_html = function (txt) {\n        var _this = this;\n        var pkt = this._buffer + txt;\n        this._buffer = '';\n        var raw_text_pkts = pkt.split(/\\x1B\\[/);\n        if (raw_text_pkts.length === 1)\n            raw_text_pkts.push('');\n        // COMPLEX - BEGIN\n        // Validate the last chunks for:\n        // - incomplete ANSI sequence\n        // - incomplete ESC\n        // If any of these occur, we may have to buffer\n        var last_pkt = raw_text_pkts[raw_text_pkts.length - 1];\n        // - incomplete ANSI sequence\n        if ((last_pkt.length > 0) && this.detect_incomplete_ansi(last_pkt)) {\n            this._buffer = '\\x1B\\[' + last_pkt;\n            raw_text_pkts.pop();\n            raw_text_pkts.push('');\n        }\n        else {\n            // - incomplete ESC\n            if (last_pkt.slice(-1) === '\\x1B') {\n                this._buffer = '\\x1B';\n                console.log(\"raw\", raw_text_pkts);\n                raw_text_pkts.pop();\n                raw_text_pkts.push(last_pkt.substr(0, last_pkt.length - 1));\n                console.log(raw_text_pkts);\n                console.log(last_pkt);\n            }\n            // - Incomplete ESC, only one packet\n            if (raw_text_pkts.length === 2 && (raw_text_pkts[1] == '') && (raw_text_pkts[0].slice(-1) == \"\\x1B\")) {\n                this._buffer = \"\\x1B\";\n                last_pkt = raw_text_pkts.shift();\n                raw_text_pkts.unshift(last_pkt.substr(0, last_pkt.length - 1));\n            }\n        }\n        // COMPLEX - END\n        var first_txt = this.wrap_text(raw_text_pkts.shift()); // the first pkt is not the result of the split\n        var blocks = raw_text_pkts.map(function (block) { return _this.wrap_text(_this.process_ansi(block)); });\n        if (first_txt.length > 0)\n            blocks.unshift(first_txt);\n        return blocks.join('');\n    };\n    AnsiUp.prototype.ansi_to_text = function (txt) {\n        var _this = this;\n        var raw_text_pkts = txt.split(/\\x1B\\[/);\n        var first_txt = raw_text_pkts.shift(); // the first pkt is not the result of the split\n        var blocks = raw_text_pkts.map(function (block) { return _this.process_ansi(block); });\n        if (first_txt.length > 0)\n            blocks.unshift(first_txt);\n        return blocks.join('');\n    };\n    AnsiUp.prototype.wrap_text = function (txt) {\n        if (txt.length === 0)\n            return txt;\n        if (this._escapeForHtml)\n            txt = this.doEscape(txt);\n        if (!this.bright && this.fg === null && this.bg === null)\n            return txt;\n        var styles = [];\n        var classes = [];\n        var fg = this.fg;\n        var bg = this.bg;\n        // Handle the case where we are told to be bright, but without a color\n        if (fg === null && this.bright)\n            fg = this.ansi_colors[1][7];\n        if (!this._useClasses) {\n            // USE INLINE STYLES\n            if (fg)\n                styles.push(\"color:rgb(\" + fg.rgb.join(',') + \")\");\n            if (bg)\n                styles.push(\"background-color:rgb(\" + bg.rgb + \")\");\n        }\n        else {\n            // USE CLASSES\n            if (fg) {\n                if (fg.class_name !== 'truecolor') {\n                    classes.push(fg.class_name + \"-fg\");\n                }\n                else {\n                    styles.push(\"color:rgb(\" + fg.rgb.join(',') + \")\");\n                }\n            }\n            if (bg) {\n                if (bg.class_name !== 'truecolor') {\n                    classes.push(bg.class_name + \"-bg\");\n                }\n                else {\n                    styles.push(\"background-color:rgb(\" + bg.rgb.join(',') + \")\");\n                }\n            }\n        }\n        var class_string = '';\n        var style_string = '';\n        if (classes.length)\n            class_string = \" class=\\\"\" + classes.join(' ') + \"\\\"\";\n        if (styles.length)\n            style_string = \" style=\\\"\" + styles.join(';') + \"\\\"\";\n        return \"<span\" + class_string + style_string + \">\" + txt + \"</span>\";\n    };\n    AnsiUp.prototype.process_ansi = function (block) {\n        // This must only be called with a string that started with a CSI (the string split above)\n        // The CSI must not be in the string. We consider this string to be a 'block'.\n        // It has an ANSI command at the front that affects the text that follows it.\n        //\n        // This regex is designed to parse an ANSI terminal CSI command. To be more specific,\n        // we follow the XTERM conventions vs. the various other \"standards\".\n        // http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n        //\n        // All ansi codes are typically in the following format. We parse it and focus\n        // specifically on the graphics commands (SGR)\n        //\n        // CONTROL-SEQUENCE-INTRODUCER CSI             (ESC, '[')\n        // PRIVATE-MODE-CHAR                           (!, <, >, ?)\n        // Numeric parameters separated by semicolons  ('0' - '9', ';')\n        // Intermediate-modifiers                      (0x20 - 0x2f)\n        // COMMAND-CHAR                                (0x40 - 0x7e)\n        //\n        // We use a regex to parse into capture groups the PRIVATE-MODE-CHAR to the COMMAND\n        // and the following text\n        //\n        // Lazy regex creation to keep nicely commented code here\n        // NOTE: default is multiline (workaround for now til I can\n        // determine flags inline)\n        if (!this._sgr_regex) {\n            this._sgr_regex = (_a = [\"\\n              ^                           # beginning of line\\n              ([!<-?]?)             # a private-mode char (!, <, =, >, ?)\\n              ([d;]*)                    # any digits or semicolons\\n              ([ -/]?               # an intermediate modifier\\n               [@-~])               # the command\\n              ([sS]*)                   # any text following this CSI sequence\\n              \"], _a.raw = [\"\\n              ^                           # beginning of line\\n              ([!\\\\x3c-\\\\x3f]?)             # a private-mode char (!, <, =, >, ?)\\n              ([\\\\d;]*)                    # any digits or semicolons\\n              ([\\\\x20-\\\\x2f]?               # an intermediate modifier\\n               [\\\\x40-\\\\x7e])               # the command\\n              ([\\\\s\\\\S]*)                   # any text following this CSI sequence\\n              \"], this.rgx(_a));\n        }\n        var matches = block.match(this._sgr_regex);\n        // The regex should have handled all cases!\n        if (!matches)\n            return block;\n        var orig_txt = matches[4];\n        if (matches[1] !== '' || matches[3] !== 'm')\n            return orig_txt;\n        // Ok - we have a valid \"SGR\" (Select Graphic Rendition)\n        var sgr_cmds = matches[2].split(';');\n        // Each of these params affects the SGR state\n        // Why do we shift through the array instead of a forEach??\n        // ... because some commands consume the params that follow !\n        while (sgr_cmds.length > 0) {\n            var sgr_cmd_str = sgr_cmds.shift();\n            var num = parseInt(sgr_cmd_str, 10);\n            if (isNaN(num) || num === 0) {\n                this.fg = this.bg = null;\n                this.bright = false;\n            }\n            else if (num === 1) {\n                this.bright = true;\n            }\n            else if (num === 22) {\n                this.bright = false;\n            }\n            else if (num === 39) {\n                this.fg = null;\n            }\n            else if (num === 49) {\n                this.bg = null;\n            }\n            else if ((num >= 30) && (num < 38)) {\n                var bidx = this.bright ? 1 : 0;\n                this.fg = this.ansi_colors[bidx][(num - 30)];\n            }\n            else if ((num >= 90) && (num < 98)) {\n                this.fg = this.ansi_colors[1][(num - 90)];\n            }\n            else if ((num >= 40) && (num < 48)) {\n                this.bg = this.ansi_colors[0][(num - 40)];\n            }\n            else if ((num >= 100) && (num < 108)) {\n                this.bg = this.ansi_colors[1][(num - 100)];\n            }\n            else if (num === 38 || num === 48) {\n                // extended set foreground/background color\n                // validate that param exists\n                if (sgr_cmds.length > 0) {\n                    // extend color (38=fg, 48=bg)\n                    var is_foreground = (num === 38);\n                    var mode_cmd = sgr_cmds.shift();\n                    // MODE '5' - 256 color palette\n                    if (mode_cmd === '5' && sgr_cmds.length > 0) {\n                        var palette_index = parseInt(sgr_cmds.shift(), 10);\n                        if (palette_index >= 0 && palette_index <= 255) {\n                            if (is_foreground)\n                                this.fg = this.palette_256[palette_index];\n                            else\n                                this.bg = this.palette_256[palette_index];\n                        }\n                    }\n                    // MODE '2' - True Color\n                    if (mode_cmd === '2' && sgr_cmds.length > 2) {\n                        var r = parseInt(sgr_cmds.shift(), 10);\n                        var g = parseInt(sgr_cmds.shift(), 10);\n                        var b = parseInt(sgr_cmds.shift(), 10);\n                        if ((r >= 0 && r <= 255) && (g >= 0 && g <= 255) && (b >= 0 && b <= 255)) {\n                            var c = { rgb: [r, g, b], class_name: 'truecolor' };\n                            if (is_foreground)\n                                this.fg = c;\n                            else\n                                this.bg = c;\n                        }\n                    }\n                }\n            }\n        }\n        return orig_txt;\n        var _a;\n    };\n    // ES5 template string transformer\n    // NOTE: default is multiline (workaround for now til I can\n    // determine flags inline)\n    AnsiUp.prototype.rgx = function (tmplObj) {\n        var subst = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            subst[_i - 1] = arguments[_i];\n        }\n        // Use the 'raw' value so we don't have to double backslash in a template string\n        var regexText = tmplObj.raw[0];\n        // Remove white-space and comments\n        var wsrgx = /^\\s+|\\s+\\n|\\s+#[\\s\\S]+?\\n/gm;\n        var txt2 = regexText.replace(wsrgx, '');\n        return new RegExp(txt2, 'm');\n    };\n    return AnsiUp;\n}());\nexport { AnsiUp };\n//# sourceMappingURL=ansi-up.js.map","import { Plugin } from \"../../Core/Plugin\";\r\nimport { KeyboardEventArgs, KeyboardPlugin } from \"../Keyboard\";\r\nimport { EventArgs, GameEvent } from \"../../Core/GameEvent\";\r\nimport { CliPlugin } from \"../CliPlugin\";\r\nimport { cli, cliPlugin, CommandResult } from \"../../Helpers/Commands\";\r\nimport { rgb } from \"../../Helpers/Color\";\r\nimport { AnsiUp }  from 'ansi-up';\r\nimport { PluginOrder } from \"../../Core/PluginOrder\";\r\n\r\nexport class ConsoleEventArgs extends EventArgs {\r\n    public message: string;\r\n    constructor(message: string) {\r\n        super();\r\n        this.message = message;\r\n    }\r\n}\r\n\r\n@cliPlugin(\"console\")\r\nexport class ConsolePlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Render;\r\n    public name: string = \"ConsolePlugin\";\r\n    public messageEnteredEvent = new GameEvent();\r\n    private isVisible: boolean = true;\r\n    private consoleWrapper: HTMLDivElement = document.createElement(\"div\");\r\n    private buffer: string = \"\";\r\n    private history: string[] = [\"\"];\r\n    private historyIndex: number = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        document.body.appendChild(this.consoleWrapper);\r\n        this.consoleWrapper.innerHTML = this.getInnerHtml();\r\n    }\r\n\r\n    override start(): void {\r\n        this.getPlugin(KeyboardPlugin).KeyDownEvent.subscribe(this, \"keydown\");\r\n        this.getPlugin(KeyboardPlugin).BlockedKeyDownEvent.subscribe(this, \"keydown\");\r\n        this.messageEnteredEvent.register(this.gameWorld);\r\n    }\r\n\r\n    protected override event(args: EventArgs, alias?: string): void {\r\n        const key = (args as KeyboardEventArgs).key;\r\n        let input\r\n        try {\r\n            input = this.consoleWrapper.querySelector(\".console-input\") as HTMLInputElement;\r\n        } catch {}\r\n        if (!input) return;\r\n        \r\n        if(this.isFocused()){\r\n            if (key == \"arrowup\") {\r\n                if (this.historyIndex < this.history.length-1) {\r\n                    this.historyIndex++;\r\n                    input.value = this.history[this.historyIndex];\r\n                }\r\n            }\r\n            if (key == \"arrowdown\") {\r\n                if (this.historyIndex > 0) {\r\n                    this.historyIndex--;\r\n                    console.log(this.historyIndex);\r\n                    console.log(this.history);\r\n                    input.value = this.history[this.historyIndex];\r\n                }\r\n            }\r\n            if (key == \"escape\") {\r\n                input.blur();\r\n                input.value = \"\";\r\n            }\r\n            if (key == \"enter\") {\r\n                const value = input.value.trim();\r\n                if (value !== \"\") {\r\n                    input.value = \"\";\r\n                    console.log(\"Sending:\", value);\r\n                    this.messageEntered(value);\r\n                }\r\n                input.blur();\r\n            }\r\n        }\r\n        else { \r\n            if (key == \"enter\"&&this.isVisible) {\r\n                input.focus();\r\n            }\r\n            if (key == \"t\") {\r\n                try{\r\n                    if (this.isVisible){\r\n                        document.body.removeChild(this.consoleWrapper);\r\n                        input.blur();\r\n                    }\r\n                    else\r\n                    document.body.appendChild(this.consoleWrapper);\r\n                    this.isVisible = !this.isVisible;\r\n                }\r\n                catch (error) {\r\n                    console.log(\"Error: \", error);\r\n                }\r\n            }\r\n        }\r\n        this.getPlugin(KeyboardPlugin).block = this.isFocused();\r\n    }\r\n\r\n    public isFocused(): boolean {\r\n        try {\r\n            const input = this.consoleWrapper.querySelector(\".console-input\") as HTMLInputElement;\r\n            if (input == null) \r\n                return false;\r\n            return document.activeElement === input;\r\n        } catch { \r\n            return false; \r\n        }     \r\n    }\r\n\r\n    public writeLine(message: string): void {\r\n        this.buffer += message + \"\\r\\n\";\r\n        this.setStatus(\"white\");\r\n        this.updateConsole();\r\n    }\r\n\r\n    private messageEntered(message: string): void {\r\n        if (message.startsWith(\"/\")){\r\n            this.buffer += message + \"\\n\";\r\n            const result = this.getPlugin(CliPlugin).execute(message.slice(1));\r\n            if (result.message != \"\")\r\n                this.buffer += result.message + \"\\r\\n\";\r\n            if (result.status)\r\n                this.setStatus(\"#485b49\");\r\n            else\r\n            this.setStatus(\"#813136\");\r\n        }\r\n        else{\r\n            this.buffer += message + \"\\r\\n\";\r\n            this.setStatus(\"white\");\r\n            this.messageEnteredEvent.emit(new ConsoleEventArgs(message));\r\n        }\r\n        this.history[0] = message;\r\n        this.history.unshift(\"\");\r\n        this.historyIndex = 0;\r\n        this.updateConsole();\r\n    }\r\n\r\n    private setStatus(status: rgb | string): void {\r\n        try {\r\n            const statusBar = this.consoleWrapper.querySelector(\".console-status\") as HTMLInputElement;\r\n            if (statusBar == null) \r\n                return;\r\n            statusBar.style.backgroundColor = status.toString();\r\n        } catch {}\r\n    }\r\n\r\n    private updateConsole(): void {\r\n        this.setElementsHtml(this.buffer);\r\n    }\r\n\r\n    private setElementsHtml(buffer: string): void {\r\n        try {\r\n            const content = this.consoleWrapper.querySelector(\".console-content\") as HTMLInputElement;\r\n            if (content == null) \r\n                return;\r\n            content.innerHTML = \"\";\r\n            const lines = buffer.split(\"\\n\");\r\n            for (let i = 0; i < lines.length-1; i++) {\r\n                const line = lines[i];\r\n\r\n                const convert = new AnsiUp();\r\n                const html = convert.ansi_to_html(line);\r\n\r\n                let span = document.createElement(\"span\");\r\n                // span.textContent = line;\r\n                span.innerHTML = html;\r\n                content.appendChild(span);\r\n                const separator = document.createElement(\"hr\");\r\n                separator.className = \"console-item-separator\"\r\n                if (line.endsWith(\"\\r\"))\r\n                    content.appendChild(separator);\r\n                else\r\n                    content.appendChild(document.createElement(\"br\"));\r\n            }\r\n        } catch {}\r\n    }\r\n        \r\n    private getInnerHtml(): string {\r\n        const profiler = `\r\n            <style>\r\n                .console{\r\n                    ${this.isVisible ? \"\" : \"display: none;\"}\r\n                    position: fixed;\r\n                    top: 20px;\r\n                    right: 20px;\r\n                    \r\n                    width: 400px;\r\n                    padding: 20px;\r\n                    border-radius: 20px;\r\n                    background-color: rgba(42, 43, 46, 0.382);\r\n                    color: white;\r\n                    font-family: \"IBM Plex Mono\", monospace;\r\n                    pointer-events: none;\r\n                    overflow: hidden;\r\n                }\r\n                .console-status{\r\n                    margin: 7px 0;\r\n                    height: 6px;\r\n                    background-color: white;\r\n                    opacity: 1;\r\n                    border-radius: 999px;\r\n                }\r\n                .console-header{\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    height: 40px;\r\n                    color: white;\r\n                    margin-bottom: 10px;\r\n                    user-select: none;\r\n                }\r\n                .console-input{\r\n                    width: 100%; \r\n                    padding: 5px 0;\r\n                    margin: 0;\r\n                    border-radius: 0; \r\n                    border: none; \r\n                    border-bottom: 1px solid rgba(240, 240, 240, 0.5);\r\n                    background-color: transparent; \r\n                    color: white;\r\n                    font-size: 20px;   \r\n                }\r\n                .console *::selection {\r\n                    background-color: #546855;\r\n                    color: white;\r\n                }\r\n                .console-input:focus{\r\n                    outline: none; \r\n                    border-bottom: 1px solid rgba(240, 240, 240, 0.85);\r\n                }\r\n                .console-content-wrapper{\r\n                    position: relative;\r\n                    height: 600px;\r\n                    width: 100%;\r\n                    overflow: hidden;\r\n                }\r\n                .console-content{\r\n                    white-space: pre-wrap;\r\n                    word-wrap: break-word;\r\n                    position: absolute;\r\n                    width: 100%;\r\n                    line-height: 20px;\r\n                    font-size: 20px;\r\n                    margin: 0;\r\n                    bottom: 0;\r\n                }\r\n                .console-item-separator{\r\n                    border: none;\r\n                    border-top: 1px dashed gray;\r\n                    opacity: 0.75;\r\n                    margin: 9.5px 0;\r\n                }t\r\n            </style>\r\n\r\n            <div class=\"console\">\r\n                <div class=\"console-header\">\r\n                    <h2 style=\"margin: 0\">Console <span style=\"opacity: 0.5\">[T]</span></h2>\r\n                </div>\r\n                <div class=\"console-status\"></div>\r\n                <div class=\"console-content-wrapper\">\r\n                    <pre class=\"console-content\"></pre>\r\n                </div>\r\n                    <input class=\"console-input\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" type=\"text\" tabindex=\"-1\" placeholder=\"Type your command here...\" />\r\n            </div>\r\n            `\r\n        // <div class=\"console-header\">\r\n        //         <h2 style=\"margin: 0\">Console <span style=\"opacity: 0.5\">[T]</span></h2>\r\n        //     </div>\r\n        return profiler;\r\n    }\r\n\r\n    @cli(\"clear\")\r\n    public clearConsole(): CommandResult {\r\n        this.buffer = \"\";\r\n        this.updateConsole();\r\n        return new CommandResult(true, \"\", undefined);\r\n    }\r\n}","import { Plugin } from \"../Core/Plugin\";\r\nimport { Socket, io } from \"socket.io-client\";\r\nimport { ConsoleEventArgs, ConsolePlugin } from \"./Hud/Console\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\nimport { cli, CommandResult } from \"../Helpers/Commands\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { GameObjectFactory } from \"../GameObjectFactory\";\r\nimport { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\n\r\n\r\n\r\nexport class ClientPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    \r\n    public name: string = \"ClientPlugin\";\r\n    private socket!: Socket;\r\n\r\n    protected override start(): void {\r\n        this.getPlugin(ConsolePlugin)?.messageEnteredEvent.subscribe(this, \"chatMessageEvent\");\r\n\r\n        this.socket = io('http://localhost:8001', {\r\n            transports: ['websocket'],\r\n            reconnection: false,\r\n            reconnectionDelay: 100,\r\n        });\r\n        this.socket.on('connect', () => this.onConnection());\r\n        this.socket.on('disconnect', (reason: string) => this.onDisconnection(reason));\r\n\r\n        //custom\r\n        this.socket.on('chat_message', (author: string, message: string) => this.onChatMessage(author, message));\r\n        this.socket.on('synchronize_go', (id: string, data: GameObject) => this.onSynchronize(id, data));\r\n    }\r\n\r\n    protected override event(args: any, alias?: string): void {\r\n        let chatArgs = args as ConsoleEventArgs;\r\n        this.sendChatMessage( chatArgs.message);\r\n    }\r\n\r\n\r\n\r\n    public sendChatMessage(message: string): void {\r\n        this.socket.emit('chat_message', this.socket.id, message);\r\n    }\r\n\r\n\r\n\r\n    private onConnection(): void {\r\n        this.getPlugin(ConsolePlugin).writeLine(`connected!`);\r\n        this.setServerName(\"unnamed\");\r\n    }\r\n\r\n    private onDisconnection(reason: string): void {\r\n        this.getPlugin(ConsolePlugin).writeLine(`disconnected! \\x1b[31m${reason}\\x1b[0m`);\r\n    }\r\n\r\n    private onChatMessage(author: string, message: string): void {\r\n        this.getPlugin(ConsolePlugin).writeLine(`\\x1b[32m${author}\\x1b[0m: ${message}`);\r\n    }\r\n\r\n    @cli(\"setServerName\", \"<name: string>\")\r\n    public setServerName(name: string): CommandResult {\r\n        this.socket.emit('set_name', name);\r\n        return new CommandResult(true, `Server name set to: ${name}`, name);\r\n    }\r\n\r\n    \r\n\r\n\r\n    //synchronizer\r\n    private mocks: Set<string> = new Set();\r\n    public synchronize(id: string, data: GameObject): void {\r\n        this.mocks.add(id);\r\n        // console.log(`Synchronizing ${id} with data:`, data);\r\n        this.socket.emit('synchronize_go', id, data);\r\n    }\r\n\r\n    private onSynchronize(id: string, data: GameObject): void {\r\n        const mock = this.gameWorld.getGameObject(id);\r\n        // delete (newMock as any).components.TracesRendererC;\r\n        \r\n        if (mock) {\r\n            this.deepMerge(mock, data);\r\n        }\r\n        else {\r\n            const newMock = GameObjectFactory.playerGO();\r\n            this.deepMerge(newMock, data);\r\n            this.gameWorld.spawn(newMock);\r\n            newMock.getComponent(RigidBodyC)!.velocity = Vector.zero();\r\n        }\r\n    }\r\n\r\n    deepMerge(target: any, source: any): any {\r\n        for (const key of Object.keys(source)) {\r\n            if (\r\n            source[key] instanceof Object &&\r\n            key in target &&\r\n            target[key] instanceof Object\r\n            ) {\r\n            this.deepMerge(target[key], source[key]);\r\n            } else {\r\n            target[key] = source[key];\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n}\r\n\r\n","import { CanonC } from \"../Components/Canon\";\r\nimport { PolygonRendererC } from \"../Components/Renderers/PolygonRenderer\";\r\nimport { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { GameObjectFactory } from \"../GameObjectFactory\";\r\nimport { rgb } from \"../Helpers/Color\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { KeyboardEventArgs, KeyboardPlugin } from \"./Keyboard\";\r\nimport { MousePlugin } from \"./Mouse\";\r\nimport { ConfigPlugin } from \"./Config\";\r\nimport { cli, cliPlugin, CommandResult } from \"../Helpers/Commands\";\r\nimport { CameraPlugin } from \"./Camera\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\nimport { ClientPlugin } from \"./Client\";\r\n\r\nexport class PlayerPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Update;\r\n    public name: string = \"PlayerPlugin\";\r\n    private playerName: string = \"player\";\r\n    public player: GameObject = GameObjectFactory.playerGO();\r\n\r\n    public getPlayerPosition(): Vector {\r\n        return this.player.getTransform().position.clone();\r\n    }\r\n    public getPlayerColor(): rgb {\r\n        return this.player.getComponent(PolygonRendererC)!.color.clone();\r\n    }\r\n\r\n\r\n    public override start(): void {\r\n      this.respawn();  \r\n      this.player.getComponent(PolygonRendererC)!.color = this.getPlugin(ConfigPlugin)?.get(\"playerColor\")??new rgb(53, 110, 58);\r\n      this.getPlugin(KeyboardPlugin)?.KeyDownEvent.subscribe(this, \"KeyDownEvent\");\r\n    }\r\n\r\n    public override event(args: any, alias?: string): void {\r\n      if (alias=== \"KeyDownEvent\") {\r\n        let keyArgs = args as KeyboardEventArgs;\r\n        if (keyArgs.key === \"r\") {\r\n          this.respawn();  \r\n        }\r\n        else if (keyArgs.key === \"c\") {\r\n          let displayColliders = this.getPlugin(ConfigPlugin)?.get(\"displayColliders\")??false;\r\n          if (displayColliders !== undefined) \r\n            this.getPlugin(ConfigPlugin)?.set(\"displayColliders\", !displayColliders);\r\n        }\r\n      }\r\n    }\r\n    \r\n    // color: rgb = new rgb(53, 110, 58);\r\n    // target: rgb = new rgb(53, 110, 58);\r\n\r\n\r\n    synchronize(): void {\r\n      const client = this.getPlugin(ClientPlugin);\r\n      const mock: GameObject = JSON.parse(JSON.stringify(this.player));\r\n      delete (mock as any).gameWorld;\r\n\r\n      client.synchronize(this.player.getId(), mock);\r\n    }\r\n\r\n    protected override update(delta: number): void {\r\n      // this.synchronize();\r\n      // if (Math.random() < 0.05){\r\n      //   this.target=rgb.randomColor2();\r\n      //   // this.getPlugin(CliPlugin)?.execute(\"player:setcolor {randomcolor}\");\r\n      // }\r\n      // this.color = this.color.blend(this.target, 0.02);\r\n      // this.player.getComponent(PolygonRendererC).color = this.color;\r\n\r\n      let camera = this.getPlugin(CameraPlugin);\r\n      camera.targetCameraPositon = this.player.getTransform().position.clone();\r\n      if (!this.player.enabled) return;\r\n\r\n      let mouse = this.getPlugin(MousePlugin);\r\n      let keyboard = this.getPlugin(KeyboardPlugin);\r\n      let gun = this.player.getComponent(CanonC);\r\n      if (!gun) \r\n        return;\r\n      gun.targetDirection = camera.getWorldPosition(mouse.getMouseScreenPosition()).sub(this.player.getTransform().position);\r\n      gun.range = camera.getWorldPosition(mouse.getMouseScreenPosition()).sub(this.player.getTransform().position.add(gun.getGlobalOffset())).magnitude();\r\n      if (keyboard.isPressed(\"e\")||mouse.isKeyDown(0)) \r\n        gun.shoot();\r\n\r\n\r\n      const g = -25;\r\n      const a = keyboard.isPressed(\"shift\") ? 120 : 60;\r\n\r\n      const vmax = 50.0;\r\n      const rotation = this.player.getTransform().rotation;\r\n      const direction = Vector.fromRad(rotation);\r\n      const turnSpeed = 2.5;\r\n\r\n\r\n      let rigidBody = this.player.getComponent(RigidBodyC)!;\r\n      let velocity = rigidBody.velocity;\r\n      // Przyspieszanie\r\n      if (keyboard.isPressed(\"w\")) {\r\n        rigidBody.acceleration = direction.toUnit().times(a);\r\n        if (keyboard.isPressed(\"s\"))\r\n          rigidBody.acceleration = direction.toUnit().times(-g);\r\n      }\r\n      else if (keyboard.isPressed(\"s\"))\r\n        rigidBody.acceleration = direction.toUnit().times(g);\r\n      else\r\n        rigidBody.acceleration = Vector.zero();\r\n\r\n      velocity = velocity.sub(velocity.perpendicular(direction));\r\n\r\n      if (velocity.magnitude() > vmax)\r\n        velocity.setLength(vmax);\r\n      if (keyboard.isPressed(\"a\"))\r\n        rigidBody.angularVelocity = turnSpeed;\r\n      else if (keyboard.isPressed(\"d\"))\r\n        rigidBody.angularVelocity = -turnSpeed;\r\n      else \r\n        rigidBody.angularVelocity = 0;\r\n    }\r\n\r\n  \r\n  public cliGetName(): string {\r\n      return \"player\";\r\n  }\r\n\r\n  @cli(\"setname\", \"<name: string>\")\r\n  private setname(newName: string): CommandResult {\r\n      this.playerName = newName;\r\n      this.player.name = newName;\r\n      try {\r\n        this.getPlugin(ClientPlugin).setServerName(newName);\r\n      } catch (error) {\r\n        console.error(\"Error setting server name:\", error);\r\n      }\r\n      return new CommandResult(true, `Player name set to ${newName}`, undefined);\r\n  }\r\n\r\n  @cli(\"setcolor\", \"<color: string | rgb>\")\r\n  private setcolor(color: string | rgb): CommandResult {\r\n      try{\r\n        let newColor = rgb.tryParseCssColor(color.toString());\r\n        if (newColor)\r\n          this.player.getComponent(PolygonRendererC)!.color = newColor;\r\n      } catch {}\r\n      return new CommandResult(true, `Player color set`, undefined);\r\n  }\r\n\r\n  @cli(\"respawn\")  \r\n  private respawn(): CommandResult {\r\n    if(this.player && this.gameWorld.isSpawned(this.player))  \r\n      this.gameWorld.destroy(this.player);\r\n    this.player = GameObjectFactory.playerGO();\r\n    this.player.name=this.playerName;\r\n    this.gameWorld.spawn(this.player);\r\n    return new CommandResult(true, `Player respawned`, undefined);\r\n  }\r\n\r\n  @cli(\"getcolor\", undefined, \"rgb\")\r\n  private getcolor(): CommandResult {\r\n    return new CommandResult(true, `Player color is ${this.player.getComponent(PolygonRendererC)!.color}`, this.player.getComponent(PolygonRendererC)!.color);\r\n  }\r\n}\r\n","import { MyWorld } from \"./Worlds/MyWorld\";\r\nimport { RendererPlugin } from \"./Plugins/Renderer\";\r\nimport { PhysicsPlugin } from \"./Plugins/Physics\";\r\nimport { KeyboardPlugin } from \"./Plugins/Keyboard\";\r\nimport { MousePlugin } from \"./Plugins/Mouse\";\r\nimport { PlayerPlugin } from \"./Plugins/Player\";\r\nimport { CameraPlugin } from \"./Plugins/Camera\";\r\nimport { ConfigPlugin } from \"./Plugins/Config\";\r\nimport { CollisionDetectionPlugin } from \"./Plugins/CollisionDetection\";\r\nimport { StandaloneComponentPlugin } from \"./Plugins/StandaloneComponent\";\r\nimport { SchedulerPlugin } from \"./Plugins/Scheduler\";\r\nimport { ProfilerPlugin } from \"./Plugins/Hud/Profiler\";\r\nimport { ClientPlugin } from \"./Plugins/Client\";\r\nimport { CliPlugin } from \"./Plugins/CliPlugin\";\r\nimport { ConsolePlugin } from \"./Plugins/Hud/Console\";\r\n\r\n\r\nexport async function main (canvas: HTMLCanvasElement) {\r\n  const world: MyWorld = new MyWorld(\r\n    new ConfigPlugin(), \r\n    new ClientPlugin(),\r\n    new CliPlugin(),\r\n    new KeyboardPlugin(),\r\n    new MousePlugin(canvas),\r\n    new SchedulerPlugin(),\r\n    new PlayerPlugin(),\r\n    new PhysicsPlugin(),\r\n    new CameraPlugin(),\r\n    new ConsolePlugin(),\r\n    new ProfilerPlugin(),\r\n    new CollisionDetectionPlugin(),\r\n    new StandaloneComponentPlugin(),\r\n    new RendererPlugin(canvas.getContext(\"2d\")!),\r\n  );\r\n\r\n  async function tick() {\r\n    world.tick();\r\n    requestAnimationFrame(tick);\r\n    await new Promise(resolve => setTimeout(resolve, 0));\r\n  }\r\n  \r\n  tick();\r\n}\r\nmain(document.getElementById(\"gameCanvas\") as HTMLCanvasElement);\r\n\r\n\r\n"],"names":["Component","args","alias","plugin","classC","value","GMath","n","radius","angle","a","b","m1","v1","m2","v2","v1Final","v2Final","min","max","Vector","x","y","other","v","length","sx","sy","target","k","mx","mv","rad","range","distance","RigidBodyC","mass","dampingFactor","delta","rgb","r","g","alpha","color","h","s","l","f","hue","saturation","lightness","tempElem","lastColor","computedColor","style","match","Transform","positon","rotation","scale","position","transform","ret","byteToHex","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","GameObject","uuidv4","component","name","components","c","index","onlyEnabled","CommandResult","status","message","data","cli","argsSyntax","returnType","propertyKey","descriptor","originalMethod","ctor","cliPlugin","Plugin","element","GREEN","RESET","RED","__decorateClass","EventArgs","GameEvent","sub","gameWorld","derefSub","PluginOrder","MouseScrollEventArgs","MouseClickEventArgs","button","MousePlugin","canvas","key","event","rect","CollisionEventArgs","collider","ColliderC","isStatic","avoidObjectes","ao","center","FlatQueue","id","pos","parent","parentValue","top","halfLength","left","right","bestIndex","bestValue","rightValue","ARRAY_TYPES","VERSION","Flatbush","byteOffset","magic","versionAndType","version","ArrayType","nodeSize","numItems","ArrayBufferType","numNodes","arrayTypeIndex","nodesByteSize","minX","minY","maxX","maxY","boxes","width","height","hilbertValues","hilbertMax","i","hilbert","sort","end","nodeIndex","nodeMinX","nodeMinY","nodeMaxX","nodeMaxY","j","filterFn","queue","results","upperBound","maxResults","maxDistance","q","maxDistSquared","outer","dx","axisDist","dy","dist","m","values","indices","pivot","swap","temp","d","e","A","B","C","D","i0","i1","CollisionDetectionPlugin","point","AllColliders","mainCollider","item","newCollisions","mainAABB","potential","otherCollider","newC","KeyboardEventArgs","KeyboardPlugin","CameraPlugin","mouseArgs","mousePositonScreen","mousePositon","gameObject","screenPositon","cameraPosition","following","zoom","RendererC","zindex","TextRendererC","text","displayName","context","world","camera","textHeight","textOffset","ConfigPlugin","ColliderRendererC","radius2","GameAnimation","update","start","fill","StandaloneComponentPlugin","weakRef","StandaloneComponent","AnimationC","BarRendererC","PolygonRendererC","side","size","DamageEventArgs","damage","participant","HealthC","maxHealth","health","cargs","otherGO","otherRigidbody","thisRigidbody","op","damageValue","newColor","color2","SchedulerPlugin","subscriber","totalTime","topic","totalDelta","last","DestroyerC","lifeTime","destroyTime","BulletRendererC","gradientWidth","grad","BulletC","owner","hp","bulletGO","CanonRendererC","canon","CanonC","st","sp","r_wads","gunOffset","gradient","Particle","targetRadius","SmokeRendererC","dv","particleRadius","particle","cmx","cmy","cx","cy","particles","targetAngle","spread","bulletDirection","bullet","rigidBody","ChasisRendererC","TracesRendererC","currentPosition","currentRotation","trace","TagsC","tags","tag","GameObjectFactory","polygonGO","circleGO","playerGO","ProfilerPlugin","fps","now","len","mean","usage","html","GameWorld","plugins","go","gameObjectId","eventRef","NpcC","turret","direction","MyWorld","sqr","triangle","polygon","follower","ImageRendererC","src","RendererPlugin","centerX","centerY","maxRadius","worker","offscreen","cameraPositon","xClip","yClip","gx","gy","cpos","renderer","PhysicsPlugin","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","withNativeBlob","withNativeArrayBuffer","isView","obj","encodePacket","type","supportsBinary","callback","encodeBlobAsBase64","fileReader","content","toArray","TEXT_ENCODER","encodePacketToBinary","packet","encoded","chars","lookup","decode","base64","bufferLength","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","SEPARATOR","encodePayload","packets","encodedPackets","count","decodePayload","encodedPayload","decodedPacket","createPacketEncoderStream","controller","payloadLength","header","view","TEXT_DECODER","totalLength","chunks","acc","chunk","concatChunks","buffer","createPacketDecoderStream","maxPayload","state","expectedLength","isBinary","headerArray","protocol","Emitter","mixin","fn","on","callbacks","cb","nextTick","setTimeoutFn","globalThisShim","defaultBinaryType","pick","attr","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","opts","BASE64_OVERHEAD","byteLength","utf8Length","str","randomString","encode","qs","qry","pairs","pair","TransportError","reason","description","Transport","details","onPause","schema","query","hostname","encodedQuery","Polling","pause","total","close","hasCORS","empty","BaseXHR","isSSL","port","req","xhrStatus","Request","createRequest","uri","_a","xhr","err","fromError","unloadHandler","terminationEvent","hasXHR2","newRequest","XHR","forceBase64","xdomain","isReactNative","BaseWS","protocols","closeEvent","ev","lastPacket","WebSocketCtor","WS","_packet","WT","stream","decoderStream","reader","encoderStream","read","done","transports","re","parts","parse","pathNames","queryKey","path","regx","names","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","parsedUri","t","transportName","transport","delay","payloadSize","hasExpired","msg","cleanupAndClose","waitForUpgrade","SocketWithUpgrade","failed","onTransportOpen","cleanup","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","upgrades","filteredUpgrades","o","DEFAULT_TRANSPORTS","url","loc","host","toString","withNativeFile","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","deconstruction","isObject","Decoder","reviver","isBinaryEvent","BinaryReconstructor","next","payload","binData","Socket","io","nsp","_b","_c","ack","isTransportWritable","isConnected","timeout","timer","resolve","reject","arg1","arg2","responseArgs","force","listeners","self","sent","pid","subDestroy","compress","Backoff","ms","rand","deviation","jitter","Manager","_parser","parser","Engine","socket","openSubDestroy","onError","errorSub","nsps","attempt","cache","parsed","source","sameNamespace","newConnection","CliPlugin","iters","command","result","randomColor","superResult","ansiArt","pluginName","input","depth","current","inSingleQuote","inDoubleQuote","parenDepth","char","fullCommand","AnsiUp","useClasses","arg","_this","palette","rec","levels","grey_level","txt","found","prefix","pkt","raw_text_pkts","last_pkt","first_txt","blocks","block","styles","classes","fg","bg","class_string","style_string","matches","orig_txt","sgr_cmds","sgr_cmd_str","num","bidx","is_foreground","mode_cmd","palette_index","tmplObj","regexText","wsrgx","txt2","ConsoleEventArgs","ConsolePlugin","statusBar","lines","line","span","separator","ClientPlugin","author","chatArgs","mock","newMock","PlayerPlugin","keyArgs","displayColliders","client","mouse","keyboard","gun","vmax","turnSpeed","velocity","newName","main","tick"],"mappings":"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","x_google_ignoreList":[6,7,8,9,17,18,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,79]}