{"version":3,"file":"bundle.server.cjs.js","sources":["../../src/Helpers/Commands.ts","../../src/Core/Plugin.ts","../../src/Core/GameEvent.ts","../../src/Core/PluginOrder.ts","../../src/Plugins/Keyboard.ts","../../src/Plugins/Hud/Profiler.ts","../../src/Core/GameWorld.ts","../../src/Helpers/Color.ts","../../src/Plugins/CliPlugin.ts","../../src/Core/Component.ts","../../src/Helpers/Math.ts","../../src/Helpers/Vector.ts","../../src/Components/Collider.ts","../../node_modules/flatqueue/index.js","../../node_modules/flatbush/index.js","../../src/Plugins/CollisionDetection.ts","../../src/Plugins/Config.ts","../../src/Components/RigidBody.ts","../../src/Plugins/Physics.ts","../../src/Plugins/Scheduler.ts","../../src/Plugins/Server.ts","../../src/Components/StandaloneComponent.ts","../../src/Plugins/StandaloneComponent.ts","../../src/Server/main.ts"],"sourcesContent":["export class CommandResult {\r\n    public status: boolean;\r\n    public message: string;\r\n    public data: any;\r\n    constructor(status: boolean, message: string, data: any) {\r\n        this.status = status;\r\n        this.message = message;\r\n        this.data = data;\r\n    }\r\n}\r\n\r\nexport function cli(name?: string, argsSyntax?: string, returnType?: string): (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>) => void {\r\n    return function (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>): void {\r\n        const originalMethod = descriptor.value;\r\n        if (originalMethod) {\r\n            name = name??propertyKey;\r\n            returnType = returnType??\"void\";\r\n            argsSyntax = argsSyntax??\"\";\r\n            if (argsSyntax)\r\n                argsSyntax = \" \" + argsSyntax;\r\n            if (returnType)\r\n                returnType = \": \" + returnType;\r\n\r\n            argsSyntax = name+argsSyntax+returnType; \r\n            const ctor = target.constructor;\r\n            if (!Object.prototype.hasOwnProperty.call(ctor, \"commands\")) {\r\n                ctor.commands = Object.assign({}, ctor.commands || {});\r\n            }\r\n            ctor.commands[name] = originalMethod;\r\n            \r\n            if (!Object.prototype.hasOwnProperty.call(ctor, \"syntaxes\")) {\r\n                ctor.syntaxes = Object.assign({}, ctor.syntaxes || {});\r\n            }\r\n            // console.log(\"Adding syntax:\", argsSyntax);\r\n            ctor.syntaxes[name] = argsSyntax;\r\n        }\r\n    };\r\n}\r\n\r\n// export function gameCommand(\r\n//     target: any, \r\n//     propertyKey: string, \r\n//     descriptor: TypedPropertyDescriptor<(...args: any[]) => CommandResult>,\r\n// ): void {\r\n//     // console.log(target);\r\n\r\n\r\n//     const originalMethod = descriptor.value;\r\n//     if (originalMethod) {\r\n//         const ctor = target.constructor;\r\n//         if (!Object.prototype.hasOwnProperty.call(ctor, \"commands\")) {\r\n//             ctor.commands = Object.assign({}, ctor.commands || {});\r\n//         }\r\n//         ctor.commands[propertyKey] = descriptor.value;\r\n//     }\r\n// }\r\n\r\nexport function cliPlugin(name: string): (target: any) => void {\r\n    return function (target: any): void {\r\n        target.prototype.cliGetName = function (): string { return name; };\r\n    };\r\n}","import { GameWorld } from \"../Core/GameWorld\";\r\nimport { EventArgs, ISubscriber } from \"./GameEvent\";\r\nimport { cli, CommandResult } from \"../Helpers/Commands\";\r\nimport { PluginOrder } from \"./PluginOrder\";\r\n\r\n\r\n//WorldComponent = Plugin\r\nexport abstract class Plugin implements ISubscriber {\r\n    protected gameWorld!: GameWorld;\r\n    protected enabled: boolean = true;\r\n    public readonly name: string = \"Plugin\";\r\n    public abstract readonly order: PluginOrder;\r\n\r\n    //overideable methods\r\n    protected event(args: EventArgs, alias?: string): void {}\r\n    protected start(): void { }\r\n    protected update(delta: number): void { }\r\n    \r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T{\r\n        return this.gameWorld.getPlugin(plugin);\r\n    }\r\n    public hasPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): boolean{\r\n        return this.gameWorld.hasPlugin(plugin);\r\n    }\r\n\r\n    public isEnabled(): boolean{\r\n        return this.enabled;\r\n    }\r\n    public enable(value=true): void{\r\n        this.enabled=value;\r\n    }\r\n    public disable(): void {\r\n        this.enabled = false;\r\n    }\r\n\r\n\r\n    protected cliGetName(): string {\r\n        return this.name;\r\n    }\r\n    // @cli(\"help\")\r\n    // protected help(): CommandResult {\r\n    //     let message = `${this.cliGetName()} commands:\\n`;\r\n    //     for (const element of Object.values((this as any).constructor[\"syntaxes\"])) {\r\n    //         message += `/${this.cliGetName()}:${element}\\n`;\r\n    //     }\r\n    //     return new CommandResult(true, message, undefined);\r\n    // }\r\n    // @cli(\"enable\")\r\n    // private cliEnable(): CommandResult {\r\n    //     this.enabled = true;\r\n    //     return new CommandResult(true, `${this.name} enabled`, undefined);\r\n    // }\r\n    // @cli(\"disable\")\r\n    // private cliDisable(): CommandResult {\r\n    //     this.enabled = false;\r\n    //     return new CommandResult(true, `${this.name} disabled`, undefined);\r\n    // }\r\n    @cli(\"help\")\r\n    protected help(): CommandResult {\r\n        const BLUE = \"\\x1b[36m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        let message = `${BLUE}${this.cliGetName()}${RESET} commands:\\n`;\r\n        for (const element of Object.values((this as any).constructor[\"syntaxes\"])) {\r\n            message += `  /${this.cliGetName()}:${element}\\n`;\r\n        }\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n\r\n    @cli(\"enable\")\r\n    private cliEnable(): CommandResult {\r\n        const GREEN = \"\\x1b[32m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        this.enabled = true;\r\n        return new CommandResult(true, `${this.name} ${GREEN}enabled${RESET}`, undefined);\r\n    }\r\n\r\n    @cli(\"disable\")\r\n    private cliDisable(): CommandResult {\r\n        const RED = \"\\x1b[31m\";\r\n        const RESET = \"\\x1b[0m\";\r\n\r\n        this.enabled = false;\r\n        return new CommandResult(true, `${this.name} ${RED}disabled${RESET}`, undefined);\r\n    }\r\n}","import { GameWorld } from \"./GameWorld\";\r\n\r\nexport class EventArgs{\r\n    constructor(){}    \r\n}\r\n\r\nexport interface ISubscriber{\r\n    // event(args: EventArgs, alias?: string): void;\r\n}\r\n\r\nexport class GameEvent{\r\n    private subs: Map<WeakRef<ISubscriber>, string|undefined> = new Map();\r\n    private args: Array<EventArgs> = [];\r\n\r\n    public subscribe(sub: ISubscriber, alias?: string): void{\r\n        this.subs.set(new WeakRef(sub), alias);\r\n    }\r\n    public unsubscribe(sub: ISubscriber){\r\n        this.subs.delete(new WeakRef(sub));\r\n    }\r\n\r\n    public emit(args: EventArgs): void{\r\n        this.args.push(args);\r\n    }\r\n    public register(gameWorld: GameWorld): void{\r\n        gameWorld.registerEvent(this);\r\n    }\r\n\r\n    private invoke(): void{\r\n        if (this.args.length == 0)\r\n            return;\r\n        for (const [sub, alias] of this.subs){\r\n            const derefSub = sub.deref();\r\n            if(!derefSub){\r\n                this.subs.delete(sub);\r\n                continue;\r\n            }\r\n            for (const args of this.args)\r\n                (derefSub as any).event(args, alias);\r\n        }\r\n        this.args = [];\r\n    }\r\n}","// Input → Update → Physics → Collision → Events → Render\r\nexport enum PluginOrder {\r\n    None = -1, // no update\r\n    Input = 0,\r\n    Update = 1,\r\n    Physics = 2,\r\n    Collision = 3,\r\n    Render = 4,\r\n}","import { EventArgs, GameEvent } from \"../Core/GameEvent\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class KeyboardEventArgs extends EventArgs {\r\n    public key: string;\r\n    constructor(key: string) {\r\n        super();\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport class KeyboardPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"KeyboardPlugin\";\r\n    public KeyDownEvent: GameEvent = new GameEvent();\r\n    public BlockedKeyDownEvent: GameEvent = new GameEvent();\r\n    public block: boolean = false;\r\n\r\n    private NowPressedKeys = new Set<string>();\r\n    private readonly pressedKeys = new Set<string>();\r\n\r\n    constructor() {\r\n        super();\r\n        this.pressedKeys = new Set();\r\n        document.onkeydown = (event: KeyboardEvent) => {\r\n            const key = event.key.toLowerCase();\r\n            this.pressedKeys.add(key);\r\n            this.NowPressedKeys.add(key);\r\n        }\r\n        document.onkeyup = (event: KeyboardEvent) => {\r\n            const key = event.key.toLowerCase();\r\n            this.pressedKeys.delete(key);\r\n        }\r\n    }\r\n    \r\n    public isPressed(key: string): boolean {\r\n        return this.isEnabled() && !this.block && this.pressedKeys.has(key);\r\n    }\r\n    protected override start(): void {\r\n        this.KeyDownEvent.register(this.gameWorld);\r\n        this.BlockedKeyDownEvent.register(this.gameWorld);\r\n    }\r\n    protected override update(delta: number): void {\r\n        this.NowPressedKeys.forEach(key => {\r\n            if (this.block)\r\n                this.BlockedKeyDownEvent.emit(new KeyboardEventArgs(key));\r\n            else\r\n                this.KeyDownEvent.emit(new KeyboardEventArgs(key));\r\n        });\r\n        this.NowPressedKeys.clear();\r\n    }\r\n}","import { Vector } from \"../../Helpers/Vector\";\r\nimport { Plugin } from \"../../Core/Plugin\";\r\nimport { RendererPlugin } from \"../Renderer\";\r\nimport { get } from \"http\";\r\nimport { KeyboardEventArgs, KeyboardPlugin } from \"../Keyboard\";\r\nimport { EventArgs } from \"../../Core/GameEvent\";\r\nimport { PluginOrder } from \"../../Core/PluginOrder\";\r\n\r\n\r\n\r\nexport class ProfilerPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Render;\r\n    public name: string = \"ProfilerPlugin\";\r\n    public size: number = 250;\r\n    private isVisible: boolean = true;\r\n    private profilerWrapper: HTMLDivElement = document.createElement(\"div\");\r\n    private readonly usage = new Map<string, Array<number>>();\r\n\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    override start(): void {\r\n        this.getPlugin(KeyboardPlugin).KeyDownEvent.subscribe(this, \"keydown\");\r\n        document.body.appendChild(this.profilerWrapper);\r\n        this.addRecord(\"Fps\", 0);\r\n    }\r\n\r\n    lastTime = performance.now();\r\n    frames = 0;\r\n    fpsHistory: number[] = [];\r\n    override update(delta: number): void {\r\n        const fps = 1 / delta;\r\n        this.addRecord(\"Fps\", fps);\r\n``        \r\n       \r\n        \r\n        this.frames++;\r\n        const now = performance.now();\r\n        if (now - this.lastTime >= 250) {\r\n            this.fpsHistory.push(this.frames*4);\r\n            if (this.fpsHistory.length > 100)\r\n                this.fpsHistory.shift();\r\n            this.frames = 0;\r\n            this.lastTime = now;\r\n\r\n            let i = 0;\r\n            let values: string[] = [];\r\n            for (const element of this.usage) {\r\n                let key = element[0];\r\n                let len = element[1].length;\r\n                let mean = 0;\r\n                for (const v of element[1])\r\n                    mean += v;\r\n                mean/=len;    \r\n                i++;\r\n                values.push(`${key}: `+(mean).toFixed(2).toString());\r\n            }\r\n            this.profilerWrapper.innerHTML = this.getInnerHtml(values);\r\n        }\r\n\r\n    }\r\n    \r\n    protected override event(args: EventArgs, alias?: string): void {\r\n        if (alias == \"keydown\"){\r\n            const kargs = args as KeyboardEventArgs;\r\n            if (kargs.key == \"p\")\r\n                this.isVisible = !this.isVisible;\r\n        }\r\n    }\r\n\r\n    public addRecord(key: string, value: number){\r\n        if(!this.usage.has(key)){\r\n            this.usage.set(key, [value]);\r\n        }\r\n        else {\r\n            let usage = this.usage.get(key)!; \r\n            let len = usage.length;\r\n            if (len >= this.size){\r\n                usage.shift();\r\n                usage.push(value);\r\n            }\r\n            else{\r\n                usage.push(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getChartHtml(values: number[]): string {\r\n        values = values.slice(Math.max(0, values.length-100), values.length);\r\n        const max = 200; //Math.max(...values);\r\n        let html = `<div class=\"profiler-chart\">`;\r\n        for (let i = 0; i < values.length; i++) {\r\n            html += `<div class=\"profiler-chart-item\" style=\"height: ${values[i]/max*100}px\"></div>`;\r\n        }\r\n        html += `</div>`;\r\n        return html;\r\n    }\r\n\r\n    private getElementsHtml(values: string[]): string {\r\n        let html=\"\";\r\n        for (let i = 0; i < values.length; i++) {\r\n            if (i > 0)\r\n                html += `<hr class=\"profiler-item-separator\">`;\r\n            html += \r\n            `<div class=\"profiler-item\">\r\n                <span class=\"profiler-item-key\">${values[i].split(\": \")[0]}:</span>\r\n                <span class=\"profiler-item-value\">${values[i].split(\": \")[1]}</span>\r\n            </div>`;\r\n        }\r\n        return html;\r\n    }\r\n\r\n    private getInnerHtml(values: string[]): string {\r\n        const profiler = `\r\n            <style>\r\n                .profiler{\r\n                    ${this.isVisible ? \"\" : \"display: none;\"}\r\n                    position: fixed;\r\n                    top: 20px;\r\n                    left: 20px;\r\n                    \r\n                    width: 400px;\r\n                    padding: 20px;\r\n                    border-radius: 20px;\r\n                    background-color: rgba(42, 43, 46, 0.382);\r\n                    color: white;\r\n                    pointer-events: none;\r\n                }\r\n                .profiler-header{\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    color: white;\r\n                    margin-bottom: 10px;\r\n                }\r\n                .profiler-item{\r\n                    // display: flex;\r\n                    // justify-content: space-between;\r\n                    padding: 5px 0;\r\n                    color:rgba(240, 240, 240, 0.85)\r\n                }\r\n                .profiler-item-key{\r\n                    margin-right: 10px;\r\n                }\r\n                .profiler-item-value{\r\n                    color: #f0f0f0;\r\n                }\r\n                .profiler-item-separator{\r\n                    border: none;\r\n                    border-top: 1px dashed gray;\r\n                    opacity: 0.75;\r\n                    margin: 2px 0;\r\n                }\r\n                .profiler-chart{\r\n                    display: flex;\r\n                    flex-direction: row;\r\n                    justify-content: space-between;\r\n                    align-items: flex-end;\r\n                    height: 100px;\r\n                    width: 100%;\r\n                    margin-bottom: 10px;\r\n                    border-radius: 10px;\r\n                    overflow: hidden;\r\n                    opacity: 0.25;\r\n                }\r\n                .profiler-chart-item{\r\n                    background-color: rgb(240, 240, 240);\r\n                    width: 100%;\r\n                    margin: 0;\r\n                }\r\n            </style>\r\n\r\n            <div class=\"profiler\">\r\n                <div class=\"profiler-header\">\r\n                    <h2 style=\"margin: 0\">Profiler <span style=\"opacity: 0.5\">[P]</span></h2>\r\n                </div>\r\n                ${this.getChartHtml(this.fpsHistory)}\r\n                ${this.getElementsHtml(values)}\r\n            </div>\r\n            `\r\n        return profiler;\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { ProfilerPlugin } from \"../Plugins/Hud/Profiler\";\r\nimport { Plugin } from \"./Plugin\";\r\nimport { GameEvent } from \"./GameEvent\";\r\n\r\nexport class GameWorld {\r\n    private startTime: number=0;\r\n    private prevWorldTime: number=0;\r\n    private worldTime: number=0;\r\n    private tickCount: number = 0;\r\n\r\n    private gameObjects: Map<string, GameObject> = new Map<string, GameObject>();\r\n    private plugins: Map<string, Plugin> = new Map<string, Plugin>();\r\n    private events: Set<WeakRef<GameEvent>> = new Set<WeakRef<GameEvent>>();\r\n    private componentsToStart: Array<WeakRef<Component>> = [];\r\n    \r\n    constructor(...plugins: Plugin[]){\r\n        plugins.sort((a, b) => a.order - b.order);\r\n        for(let plugin of plugins){\r\n            let name = plugin.constructor.name;\r\n            if (this.plugins.has(name))\r\n                throw new Error(`Plugin ${name} already exists in the game object`);\r\n                    \r\n            (plugin as any).gameWorld = this;\r\n            this.plugins.set(name, plugin);\r\n        }\r\n    }\r\n    //plugins\r\n    public tryGetPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T | undefined {\r\n        const name = plugin.name;\r\n        if (!this.plugins.has(name))\r\n            return undefined;\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T {\r\n        const name = plugin.name;\r\n        if (!this.plugins.has(name))\r\n            throw new Error(`Plugin ${name} does not exist in the game world`);\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getPluginByName<T extends Plugin>(name: string): T {\r\n        if (!this.plugins.has(name))\r\n            throw new Error(`Plugin ${name} does not exist in the game world`);\r\n        return this.plugins.get(name) as T;\r\n    }\r\n    public getAllPlugins(): Plugin[]{\r\n        return Array.from(this.plugins.values());\r\n    }\r\n    public hasPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): boolean{\r\n        const name = plugin.name;\r\n        return this.plugins.has(name);\r\n    }\r\n\r\n\r\n    //game objects\r\n    public isSpawned(gameObject: GameObject): boolean{\r\n        return  this.gameObjects.has(gameObject.getId());\r\n    }\r\n    public spawn(gameObject: GameObject): GameObject{\r\n        if (this.gameObjects.has(gameObject.getId()))\r\n            throw new Error(`GameObject ${gameObject.name} already exists in the game world`);\r\n\r\n        (gameObject as any).gameWorld = this;\r\n        this.gameObjects.set(gameObject.getId(), gameObject);\r\n\r\n        gameObject.getAllComponents().forEach(comp => this.componentsToStart.push(new WeakRef(comp)));\r\n        return gameObject;\r\n    }\r\n    public destroy(gameObject: GameObject): void{\r\n        if (!this.gameObjects.has(gameObject.getId()))\r\n            throw new Error(`GameObject ${gameObject.name} does'not exist in the game world`);\r\n        \r\n        gameObject.enabled=false;\r\n        this.gameObjects.delete(gameObject.getId());\r\n    }\r\n    public getGameObject(id: string): GameObject | undefined {\r\n        return this.gameObjects.get(id);\r\n    }\r\n    public getAllGameObjects(onlyEnabled: boolean=true): GameObject[]{\r\n        return Array.from(this.gameObjects.values()).filter(go=>go.enabled||!onlyEnabled);\r\n    }\r\n\r\n    //components\r\n    public getComponents<T extends Component>(classC: new (...args: any[]) => T, onlyEnabled: boolean=true): T[]{\r\n        return this.getAllGameObjects()\r\n        .filter(go => go.hasComponent(classC)&&(go.getComponent(classC).isEnabled()||!onlyEnabled))\r\n        .map(go => go.getComponent(classC));\r\n    }\r\n    public getAllComponents(onlyEnabled: boolean=true): Component[]{\r\n        //todo optimalization\r\n        //not optimalized\r\n        return Array.from(this.getAllGameObjects(onlyEnabled)).flatMap(go => go.getAllComponents());\r\n    }\r\n    //events\r\n    public registerEvent(event: GameEvent): void{\r\n        this.events.add(new WeakRef(event));\r\n    }\r\n    //time\r\n    public getWorldTime(): number {\r\n        return this.worldTime/1e3;\r\n    }\r\n\r\n\r\n\r\n    //flow control\r\n    public tick(): void {\r\n        this.tickCount++;\r\n        if (this.tickCount == 1) \r\n            this.startWorld();\r\n        else\r\n            this.updateWorld();\r\n\r\n        this.startComponents();\r\n        this.invokeEvents();\r\n    }\r\n    private startComponents(): void{\r\n        for (let componentRef of this.componentsToStart) {\r\n            const component = componentRef.deref();\r\n            if (component)\r\n                (component as any).start();\r\n        }\r\n        this.componentsToStart = [];\r\n    }\r\n    private startWorld(): void{\r\n        this.startTime = performance.now();\r\n        this.Start();\r\n        this.plugins.forEach(plugin => (plugin as any).start());\r\n    }\r\n    private updateWorld(): void{\r\n        this.worldTime = performance.now() - this.startTime;\r\n        const delta = this.worldTime - this.prevWorldTime;\r\n        this.prevWorldTime = this.worldTime;\r\n       \r\n        this.Update(delta / 1e3);\r\n        this.plugins.forEach(plugin => {\r\n            if (!plugin.isEnabled())\r\n                return;\r\n            let start = performance.now(); \r\n            (plugin as any).update(delta/1e3);\r\n            this.tryGetPlugin(ProfilerPlugin)?.addRecord(plugin.name, performance.now()-start);\r\n        });\r\n    }\r\n\r\n    private invokeEvents(): void{\r\n        let start = performance.now();\r\n        for (const eventRef of this.events) {\r\n            const event = eventRef.deref();\r\n            if (event)\r\n                (event as any).invoke();\r\n            else\r\n                this.events.delete(eventRef);\r\n        }\r\n        this.tryGetPlugin(ProfilerPlugin)?.addRecord(\"Events\", performance.now()-start);\r\n    }\r\n    //overridable methods\r\n    protected Start(): void { }\r\n    protected Update(delta: number): void { }\r\n}","export class rgb{\r\n    public readonly r: number = 0;\r\n    public readonly g: number = 0;\r\n    public readonly b: number = 0;\r\n    public a: number = 1;\r\n  \r\n    public static readonly stroke: rgb = new rgb(43,43,44);\r\n    // public static readonly background: rgb = new rgb(91, 93, 98);\r\n    public static readonly background: rgb = new rgb(93, 97, 95);\r\n    constructor(r: number, g:number, b: number, a: number=1) {\r\n      this.r = Math.min(255, Math.max(0, r));\r\n      this.g = Math.min(255, Math.max(0, g));\r\n      this.b = Math.min(255, Math.max(0, b));\r\n      this.a = Math.min(1, Math.max(0, a));\r\n    }\r\n    public toString(): string{\r\n      return `rgba(${this.r},${this.g},${this.b},${Math.max(0, Math.min(this.a, 1))})`;\r\n    }\r\n    public toRgb(): rgb{\r\n      return new rgb(this.r, this.g, this.b);\r\n    }\r\n    public toArgb(alpha: number){\r\n      return new rgb(this.r, this.g, this.b, alpha);\r\n    }\r\n    public blend(color: rgb, alpha: number): rgb{\r\n      return new rgb(this.r*(1-alpha)+color.r*alpha, this.g*(1-alpha)+color.g*alpha, this.b*(1-alpha)+color.b*alpha, this.a*(1-alpha)+color.a*alpha);\r\n    }\r\n    public static randomColor(): rgb{\r\n      return new rgb(Math.random()*255, Math.random()*255, Math.random()*255);\r\n    }\r\n    public static hslToRgb(h: number, s: number, l: number): rgb {\r\n      s /= 100;\r\n      l /= 100;\r\n      const k = (n: number) => (n + h / 30) % 12;\r\n      const a = s * Math.min(l, 1 - l);\r\n      const f = (n: number) =>\r\n        l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\r\n      const r = Math.round(f(0) * 255);\r\n      const g = Math.round(f(8) * 255);\r\n      const b = Math.round(f(4) * 255);\r\n      \r\n      return new rgb(r, g, b);\r\n    }\r\n    public static randomColor2(): rgb {\r\n      const hue = Math.floor(Math.random() * 360);\r\n      const saturation = Math.floor(Math.random() * 30) + 15;\r\n      const lightness = Math.floor(Math.random() * 20) + 30;\r\n    \r\n      return rgb.hslToRgb(hue, saturation, lightness);\r\n    }\r\n    public static getHeatmapColor(value: number): rgb {\r\n        value = Math.max(0, Math.min(1, value));\r\n        let g = Math.min(255, Math.max(0, Math.floor(255 * value * 2)));\r\n        let r = Math.min(255, Math.max(0, Math.floor(255 * (2 - value * 2))));\r\n        return new rgb(r/1.5, g/1.5, 0, 255);\r\n    }\r\n    \r\n    public static tryParseCssColor(color: string): rgb | undefined{\r\n      let tempElem = document.body;\r\n      let lastColor = tempElem.style.color;\r\n      tempElem.style.color = color;\r\n      let computedColor = getComputedStyle(tempElem).color;\r\n      tempElem.style.color = lastColor;\r\n      return this.getRgbFromComputedStyle(computedColor);\r\n    }\r\n  \r\n    private static getRgbFromComputedStyle(style: string): rgb | undefined {\r\n      let match = style.match(/^rgb(a?)\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*([\\d.]+))?\\)$/);\r\n      if (!match) return undefined;\r\n      return new rgb(\r\n          parseInt(match[2]), \r\n          parseInt(match[3]),\r\n          parseInt(match[4]),\r\n          parseFloat(match[5] ?? 1)\r\n      );\r\n    }\r\n    public clone(): rgb{\r\n      return new rgb(this.r, this.g, this.b, this.a);\r\n    }\r\n  }\r\n  ","import { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\nimport { rgb } from \"../Helpers/Color\";\r\nimport { cli, cliPlugin, CommandResult } from \"../Helpers/Commands\";\r\n\r\n@cliPlugin(\"cli\")\r\nexport class CliPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.None;\r\n    public name: string = \"CliPlugin\";\r\n    private globalCommands: Map<string, string | undefined> = new Map<string, string | undefined>();\r\n\r\n\r\n    @cli(\"echo\", \"<message: string>\", \"string\")\r\n    private echo(message: string): CommandResult {\r\n        return new CommandResult(true, message, message);\r\n    }\r\n    @cli(\"loop\", \"<iterations: int> <command: string>\", \"string\")\r\n    private loop(iters: number, command: string): CommandResult {\r\n        let ret = [];\r\n        let message = \"\";\r\n        for (let i = 0; i < iters; i++) {\r\n            const result = this.parseAndExecuteCommands(command);\r\n            if (!result.status) {\r\n                return new CommandResult(false, `Error executing command: ${result.message}`, undefined);\r\n            }\r\n            ret.push(result.data);\r\n            message += `${result.message}\\n`;\r\n        }\r\n        return new CommandResult(true, message, ret);\r\n    }\r\n    @cli(\"true\", undefined, \"bool\")\r\n    private true(): CommandResult {\r\n        const message = \"This is a true command\";\r\n        return new CommandResult(true, message, true);\r\n    }\r\n    @cli(\"false\", undefined, \"bool\")\r\n    private false(): CommandResult {\r\n        const message = \"This is a false command\";\r\n        return new CommandResult(true, message, false);\r\n    }\r\n    @cli(\"int\", \"<value: string>\", \"number\")\r\n    private int(value: string): CommandResult{\r\n        const message = `This is an int command with value ${value}`;\r\n        return new CommandResult(true, message, parseInt(value));\r\n    }\r\n    @cli(\"float\", \"<value: string>\", \"number\")\r\n    private float(value: string): CommandResult{\r\n        const message = `This is a float command with value ${value}`;\r\n        return new CommandResult(true, message, parseFloat(value));\r\n    }\r\n    @cli(\"refresh\")\r\n    private refresh(): CommandResult {\r\n        const message = \"This is a refresh command\";\r\n        location.reload();\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n    @cli(\"randomcolor\",undefined, \"rgb\")\r\n        private getrandomcolor(): CommandResult {\r\n        const randomColor = rgb.randomColor2();\r\n        return new CommandResult(true, `Random color is ${randomColor}`, randomColor);\r\n    }\r\n    @cli(\"help\")\r\n    protected override help(): CommandResult {\r\n        let superResult = super.help();\r\n\r\n        let message = `plugins:\\n`;\r\n        for (const plugin of this.gameWorld.getAllPlugins()) {\r\n            message += `/${(plugin as any).cliGetName()}\\n`;\r\n        }\r\n        message = superResult.message + \"\\n\" + message;\r\n        return new CommandResult(true, message, undefined);\r\n    }\r\n\r\n    @cli(\"art\")\r\n    protected art(): CommandResult {\r\n        \r\n        const asciiArt = `\r\n        \\x1b[31m██████╗░░█████╗░██████╗░███████╗\r\n        \\x1b[32m██╔══██╗██╔══██╗██╔══██╗╚════██║\r\n        \\x1b[33m██║░░██║██║░░██║██████╔╝░░░░██╔╝\r\n        \\x1b[34m██║░░██║██║░░██║██╔═══╝░░░░██╔╝░\r\n        \\x1b[35m██████╔╝╚█████╔╝██║░░░░░░░██║░░░\r\n        \\x1b[36m╚═════╝░░╚════╝░╚═╝░░░░░░░╚═╝░░░\\x1b[0m\r\n        `;\r\n        const ansiArt = `\r\n\\x1b[38;5;160m         ██████         \\x1b[0m\r\n\\x1b[38;5;160m       ██████████       \\x1b[0m\r\n\\x1b[38;5;160m      ████    ████      \\x1b[0m\r\n\\x1b[38;5;82m    ████        ████    \\x1b[0m\r\n\\x1b[38;5;82m   ████          ████   \\x1b[0m\r\n\\x1b[38;5;82m  ████            ████  \\x1b[0m\r\n\\x1b[38;5;82m  ████    ████    ████  \\x1b[0m\r\n\\x1b[38;5;82m  ████████████████████  \\x1b[0m\r\n\\x1b[38;5;226m   ██████████████████   \\x1b[0m\r\n\\x1b[38;5;226m     ████████████████     \\x1b[0m\r\n\\x1b[38;5;226m      ████    ██████      \\x1b[0m\r\n\\x1b[38;5;196m      ████    ██████      \\x1b[0m\r\n\\x1b[38;5;196m     ██████████████████     \\x1b[0m\r\n\\x1b[38;5;196m    ████████████████████    \\x1b[0m\r\n\\x1b[38;5;196m   ██████████████████████   \\x1b[0m\r\n\\x1b[38;5;196m  ████████████████████████  \\x1b[0m\r\n\\x1b[38;5;160m      ██████████████      \\x1b[0m\r\n\\x1b[38;5;160m       ████████████       \\x1b[0m\r\n        `;\r\n\r\n        console.log(ansiArt);\r\n\r\n        return new CommandResult(true, ansiArt, undefined);\r\n    }\r\n\r\n\r\n\r\n    public execute(command: string): CommandResult {\r\n        try{\r\n            return this.parseAndExecuteCommands(command);\r\n        }\r\n        catch {\r\n            return new CommandResult(false, \"Command execution failed\", undefined);\r\n        }\r\n    }\r\n\r\n    override start(): void {\r\n        this.gameWorld.getAllPlugins().forEach(plugin => {\r\n            const pluginName = plugin.constructor.name;\r\n            try{\r\n                for(let command of Object.keys((plugin as any).constructor[\"commands\"])){\r\n                    if (this.globalCommands.has(command)) \r\n                        this.globalCommands.set(command, undefined);\r\n                    else\r\n                    this.globalCommands.set(command, pluginName);\r\n                }\r\n            } catch {}\r\n        });\r\n    };\r\n\r\n    private parseAndExecuteCommands(input: string, depth: number = 0): CommandResult {\r\n        console.log((\"---\".repeat(depth))+\"Parsing: \"+input);\r\n        const args: any[] = [];\r\n        let current = '';\r\n        let inSingleQuote = false;\r\n        let inDoubleQuote = false;\r\n        let parenDepth = 0;\r\n    \r\n        input = input.trim();\r\n        for (let i = 0; i < input.length; i++) {\r\n            const char = input[i];\r\n            \r\n            if(parenDepth>0){\r\n                if(char === \"{\"){\r\n                    parenDepth++;\r\n                    current+= char;\r\n                    continue;\r\n                }\r\n                if(char === \"}\"){\r\n                    parenDepth--;\r\n                    if(parenDepth===0){\r\n                        const result = this.parseAndExecuteCommands(current, depth+1);\r\n                        // console.log(\"   \".repeat(depth)+result.message);\r\n                        args.push(result.data);\r\n                        current = '';\r\n                    }\r\n                    else\r\n                        current+=char;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            \r\n            if (inDoubleQuote) {\r\n                if (char === \"\\\"\") {\r\n                    args.push(current);\r\n                    current = '';\r\n                    inDoubleQuote = false;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            if (inSingleQuote) {\r\n                if (char === \"'\") {\r\n                    args.push(current);\r\n                    current = '';\r\n                    inSingleQuote = false;\r\n                    continue;\r\n                }\r\n                current += char;\r\n                continue;\r\n            }\r\n            if (char === \"\\\"\") {\r\n                inDoubleQuote = true;\r\n                continue;\r\n            }\r\n            if (char === \"'\") {\r\n                inSingleQuote = true;\r\n                continue;\r\n            }\r\n            if (char === \"{\") {\r\n                parenDepth++;\r\n                continue;\r\n            }\r\n            if (char === \" \") {\r\n                if (current.trim() !== \"\"){\r\n                    args.push(current);\r\n                    current = '';\r\n                }\r\n                continue;\r\n            }\r\n            current += char;\r\n        }\r\n        if (current.trim() !== \"\") {\r\n            args.push(current);\r\n        }\r\n        console.log(\"---\".repeat(depth)+\"Parsing result: \",args);\r\n        const fullCommand = args[0].split(':');\r\n        if (fullCommand.length === 2) {\r\n            const pluginName = fullCommand[0];\r\n            const plugin = this.gameWorld.getAllPlugins().find(p => (p as any).cliGetName() === pluginName);\r\n            if (!plugin)\r\n                return new CommandResult(false, `Plugin ${pluginName} not found`, undefined);\r\n            return this.executeParsedCommand(plugin, fullCommand[1], ...args.slice(1));\r\n        }\r\n        else if (fullCommand.length === 1) {\r\n            try{\r\n                if (!this.globalCommands.has(fullCommand[0]))\r\n                    return new CommandResult(false, `Command ${fullCommand[0]} not found`, undefined);\r\n                const pluginName = this.globalCommands.get(fullCommand[0]);\r\n                if (!pluginName)\r\n                    return new CommandResult(false, `More than one command found, use \"/<plugin>:<command>\" (fe /cli:help) instead.`, undefined);\r\n                const plugin = this.gameWorld.getPluginByName(pluginName);\r\n                return this.executeParsedCommand(plugin, fullCommand[0], ...args.slice(1));\r\n            }\r\n            catch{\r\n                return new CommandResult(false, \"Command not found or wrong syntax\", undefined);\r\n            }\r\n        }\r\n        else {\r\n            return new CommandResult(false, \"No command found\", undefined);\r\n        }\r\n    }\r\n    \r\n    private executeParsedCommand(plugin: Plugin, command: string, ...args: any[]): CommandResult {\r\n        if ((plugin as any).constructor[\"commands\"][command] === undefined) {\r\n            return new CommandResult(false, `Command ${command} not found`, undefined);\r\n        }\r\n        try {\r\n            let commandToApply = (plugin as any).constructor[\"commands\"][command];\r\n            let result: CommandResult = commandToApply.apply(plugin, args);\r\n            return result;\r\n        } catch { }\r\n        return new CommandResult(false, `Failed to execute command ${command} on ${(plugin as any).cliGetName()}`, undefined);\r\n    }\r\n}","import { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { EventArgs, ISubscriber } from \"./GameEvent\";\r\nimport { GameObject } from \"./GameObject\";\r\nimport { GameWorld } from \"./GameWorld\";\r\nimport { Transform } from \"../Helpers/Transform\";\r\nimport { Plugin } from \"./Plugin\";\r\n\r\nexport abstract class Component implements ISubscriber {\r\n    private enabled: boolean = true;\r\n    private gameObject!: WeakRef<GameObject>;\r\n    // private gameObjectId: string = \"\";\r\n    \r\n    //overideable methods\r\n    protected start(): void{ }\r\n    protected event(args: EventArgs, alias?: string): void{ }\r\n\r\n    \r\n    public getGameWorld(): GameWorld{\r\n        const gameObject = this.getGameObject();\r\n        return this.gameObject.deref()!.getGameWorld();\r\n    }\r\n    public hasComponent<T extends Component>(classC: new (...args: any[]) => T): boolean{\r\n        return this.gameObject.deref()!.hasComponent(classC);\r\n    }\r\n    public getComponent<T extends Component>(classC: new (...args: any[]) => T): T{\r\n        return this.gameObject.deref()!.getComponent(classC);\r\n    }\r\n    public getAllComponents(): Component[]{\r\n        return this.gameObject.deref()!.getAllComponents();\r\n    }\r\n\r\n\r\n    public getTransform(): Transform{\r\n        return this.gameObject.deref()!.getTransform();\r\n    }\r\n    public getGameObject(): GameObject{\r\n        return this.gameObject.deref()!;\r\n    }\r\n    public getPlugin<T extends Plugin>(plugin: new (...args: any[]) => T): T{\r\n        return this.getGameWorld().getPlugin(plugin);\r\n    }\r\n    public isEnabled(): boolean{\r\n        return this.gameObject.deref()!.enabled&&this.enabled;\r\n    }\r\n    public enable(value=true): void{\r\n        this.enabled=value;\r\n    }\r\n}","export class GMath{\r\n    public static symRand(value: number): number{\r\n        return (2*Math.random()-1)*value;\r\n    }\r\n    public static getColliderRadius(n: number, radius: number): number{\r\n        if(n>=10)\r\n            return radius;\r\n        const angle = Math.PI/n;\r\n        const h = Math.cos(angle)*radius;\r\n        return (2*h+radius)/3;\r\n    }\r\n    public static deltaAngle(a:number, b:number): number{\r\n        a = a%(2*Math.PI)+2*Math.PI\r\n        a = a%(2*Math.PI);\r\n        b = b%(2*Math.PI)+2*Math.PI\r\n        b = b%(2*Math.PI)+2*Math.PI;\r\n\r\n\r\n        return (b-a+Math.PI)%(2*Math.PI)-Math.PI;\r\n    }\r\n    public static elasticCollision1D(m1: number, v1: number, m2: number, v2: number): [number, number] {\r\n        const v1Final = ((v1 * (m1 - m2)) + (2 * m2 * v2)) / (m1 + m2);\r\n        const v2Final = ((v2 * (m2 - m1)) + (2 * m1 * v1)) / (m1 + m2);\r\n    \r\n        return [v1Final, v2Final];\r\n    }\r\n}","import { GMath } from \"./Math\";\r\n\r\nexport class Vector {\r\n    x : number = 0;\r\n    y : number = 0;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    //standard operators\r\n    add(a: Vector) : Vector{\r\n        return new Vector(this.x+a.x, this.y+a.y);\r\n    }\r\n    sub(a: Vector) : Vector{\r\n        return new Vector(this.x-a.x, this.y-a.y);\r\n    }\r\n    times(a: number) : Vector{\r\n        return new Vector(this.x*a, this.y*a);\r\n    }\r\n    timesV(other: Vector) : Vector{\r\n        return new Vector(this.x*other.x, this.y*other.y);\r\n    }\r\n\r\n    //other operators \r\n    distance(other: Vector){\r\n      return Math.sqrt(Math.pow(this.x-other.x, 2) + Math.pow(this.y-other.y, 2));\r\n    }\r\n    static distance(a: Vector, b: Vector){\r\n      return Math.sqrt(Math.pow(a.x-b.x, 2) + Math.pow(a.y-b.y, 2));\r\n    }\r\n    magnitude(){\r\n      return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n    cross(): Vector{\r\n        return  new Vector(this.y, -this.x).toUnit();\r\n    }\r\n    scalarProduct(v: Vector): number{\r\n        return this.x*v.x+this.y*v.y;\r\n    }\r\n    vectorProduct(v: Vector): number{\r\n        return this.x*v.y-this.y*v.x;\r\n    }\r\n    perpendicular(n: Vector){\r\n        return this.sub(n.cross().times((n.scalarProduct(this))/(n.magnitude()*n.magnitude())));\r\n    }\r\n    toUnit(): Vector{\r\n      if(this.magnitude()!=0)\r\n        return new Vector(this.x, this.y).times(1/this.magnitude());\r\n      else return new Vector(1, 0);\r\n    }\r\n    setLength(length: number): Vector{\r\n        return this.toUnit().times(length);\r\n    }\r\n    toString(): string{\r\n        return \"{\"+this.x+\":\"+this.y+\"}\";\r\n    }\r\n    toRad(): number{\r\n        return Math.atan2(this.y, this.x); // Kąt w radianach\r\n    }\r\n    reverse(): Vector{\r\n        let sx=1e32;\r\n        let sy=1e32;\r\n        if(this.x!=0)\r\n            sx=1/this.x;\r\n        if(this.y!=0)\r\n            sy=1/this.y;\r\n        return new Vector(sx, sy);\r\n    }\r\n    interpolate(target: Vector, k: number): Vector{\r\n        const mx = target.sub(this);\r\n        const mv = mx.sub(mx.times( Math.min(1, Math.max(0, k)) ));\r\n        return this.add(mv);\r\n    }\r\n    static fromRad(rad: number){\r\n        return new Vector(\r\n            Math.cos(rad), \r\n            Math.sin(rad)\r\n        );\r\n    }\r\n    static randomPos(range: number): Vector{\r\n      return new Vector(GMath.symRand(range), GMath.symRand(range));\r\n    }\r\n    static randomPos2(range: number): Vector{\r\n        let angle = GMath.symRand(Math.PI);\r\n        let distance = Math.random()*range;\r\n        return Vector.fromRad(angle).times(distance);\r\n    }\r\n    clone(){\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    //consts\r\n    public static zero(): Vector { return new Vector(0, 0) }\r\n    public static one(): Vector { return new Vector(1, 1) }\r\n    public static up(): Vector { return new Vector(0, 1) }\r\n    public static down(): Vector { return new Vector(0, -1) }\r\n    public static left(): Vector { return new Vector(-1, 0) }\r\n    public static right(): Vector { return new Vector(1, 0) }\r\n}   \r\n","import { Component } from \"../Core/Component\";\r\nimport { EventArgs, GameEvent } from \"../Core/GameEvent\";\r\nimport { GameObject } from \"../Core/GameObject\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\n\r\n\r\nexport interface RBushItem {\r\n    colliderId: string;\r\n    minX: number;\r\n    minY: number;\r\n    maxX: number;\r\n    maxY: number;\r\n}\r\n\r\n\r\nexport class CollisionEventArgs extends EventArgs{\r\n    public collider: ColliderC;\r\n    constructor(collider: ColliderC) {\r\n        super();\r\n        this.collider = collider;\r\n    }\r\n}\r\n\r\nexport class ColliderC extends Component {\r\n    public offset: Vector = Vector.zero();\r\n    public radius: number;\r\n    public isActive: boolean = false;\r\n    public isStatic: boolean;\r\n    // public layer: number;\r\n    public avoidObjectes: WeakSet<GameObject>;\r\n    public collisions: Set<ColliderC> = new Set<ColliderC>();\r\n    public onCollisionEnterEvent: GameEvent = new GameEvent(); \r\n    public onCollisionExitEvent: GameEvent = new GameEvent(); \r\n\r\n\r\n    constructor(radius: number = 1, isStatic: boolean = true, ...avoidObjectes: GameObject[]){\r\n        super();\r\n        this.radius = radius;\r\n        this.isStatic = isStatic;\r\n        this.avoidObjectes = new Set();\r\n        avoidObjectes.forEach(ao => this.avoidObjectes.add(ao))\r\n    }\r\n\r\n    protected override start(): void {\r\n        this.onCollisionEnterEvent.register(this.getGameWorld());\r\n        this.onCollisionExitEvent.register(this.getGameWorld());\r\n    }\r\n\r\n    public getCenter(): Vector {\r\n        return this.getTransform().position.add(this.offset);\r\n    }\r\n\r\n    public getAABB(): RBushItem { \r\n        const center = this.getCenter();\r\n        return {\r\n            colliderId: this.getGameObject().getId(),\r\n            minX: center.x - this.radius,\r\n            minY: center.y - this.radius,\r\n            maxX: center.x + this.radius,\r\n            maxY: center.y + this.radius\r\n        };\r\n    }\r\n\r\n\r\n    public collides(other: ColliderC): boolean {\r\n        return ( (this.getCenter())\r\n        .sub(other.getCenter())\r\n        .magnitude() <= this.radius+other.radius )\r\n        && !this.avoidObjectes.has(other.getGameObject()) && !other.avoidObjectes.has(this.getGameObject());\r\n    }\r\n\r\n    public onCollisionEnter(other: ColliderC): void{\r\n        this.onCollisionEnterEvent.emit(new CollisionEventArgs(other));\r\n    }\r\n\r\n    public onCollisionExit(other: ColliderC): void{\r\n        this.onCollisionExitEvent.emit(new CollisionEventArgs(other));\r\n    }\r\n}","\nexport default class FlatQueue {\n\n    constructor() {\n        this.ids = [];\n        this.values = [];\n        this.length = 0;\n    }\n\n    clear() {\n        this.length = 0;\n    }\n\n    push(id, value) {\n        let pos = this.length++;\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const parentValue = this.values[parent];\n            if (value >= parentValue) break;\n            this.ids[pos] = this.ids[parent];\n            this.values[pos] = parentValue;\n            pos = parent;\n        }\n\n        this.ids[pos] = id;\n        this.values[pos] = value;\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.ids[0];\n        this.length--;\n\n        if (this.length > 0) {\n            const id = this.ids[0] = this.ids[this.length];\n            const value = this.values[0] = this.values[this.length];\n            const halfLength = this.length >> 1;\n            let pos = 0;\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                const right = left + 1;\n                let bestIndex = this.ids[left];\n                let bestValue = this.values[left];\n                const rightValue = this.values[right];\n\n                if (right < this.length && rightValue < bestValue) {\n                    left = right;\n                    bestIndex = this.ids[right];\n                    bestValue = rightValue;\n                }\n                if (bestValue >= value) break;\n\n                this.ids[pos] = bestIndex;\n                this.values[pos] = bestValue;\n                pos = left;\n            }\n\n            this.ids[pos] = id;\n            this.values[pos] = value;\n        }\n\n        return top;\n    }\n\n    peek() {\n        if (this.length === 0) return undefined;\n        return this.ids[0];\n    }\n\n    peekValue() {\n        if (this.length === 0) return undefined;\n        return this.values[0];\n    }\n\n    shrink() {\n        this.ids.length = this.values.length = this.length;\n    }\n}\n","import FlatQueue from 'flatqueue';\n\nconst ARRAY_TYPES = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\nconst VERSION = 3; // serialized format version\n\n/** @typedef {Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor} TypedArrayConstructor */\n\nexport default class Flatbush {\n\n    /**\n     * Recreate a Flatbush index from raw `ArrayBuffer` or `SharedArrayBuffer` data.\n     * @param {ArrayBuffer | SharedArrayBuffer} data\n     * @param {number} [byteOffset=0] byte offset to the start of the Flatbush buffer in the referenced ArrayBuffer.\n     * @returns {Flatbush} index\n     */\n    static from(data, byteOffset = 0) {\n        if (byteOffset % 8 !== 0) {\n            throw new Error('byteOffset must be 8-byte aligned.');\n        }\n\n        // @ts-expect-error duck typing array buffers\n        if (!data || data.byteLength === undefined || data.buffer) {\n            throw new Error('Data must be an instance of ArrayBuffer or SharedArrayBuffer.');\n        }\n\n        const [magic, versionAndType] = new Uint8Array(data, byteOffset + 0, 2);\n        if (magic !== 0xfb) {\n            throw new Error('Data does not appear to be in a Flatbush format.');\n        }\n        const version = versionAndType >> 4;\n        if (version !== VERSION) {\n            throw new Error(`Got v${version} data when expected v${VERSION}.`);\n        }\n        const ArrayType = ARRAY_TYPES[versionAndType & 0x0f];\n        if (!ArrayType) {\n            throw new Error('Unrecognized array type.');\n        }\n        const [nodeSize] = new Uint16Array(data, byteOffset + 2, 1);\n        const [numItems] = new Uint32Array(data, byteOffset + 4, 1);\n\n        return new Flatbush(numItems, nodeSize, ArrayType, undefined, data, byteOffset);\n    }\n\n    /**\n     * Create a Flatbush index that will hold a given number of items.\n     * @param {number} numItems\n     * @param {number} [nodeSize=16] Size of the tree node (16 by default).\n     * @param {TypedArrayConstructor} [ArrayType=Float64Array] The array type used for coordinates storage (`Float64Array` by default).\n     * @param {ArrayBufferConstructor | SharedArrayBufferConstructor} [ArrayBufferType=ArrayBuffer] The array buffer type used to store data (`ArrayBuffer` by default).\n     * @param {ArrayBuffer | SharedArrayBuffer} [data] (Only used internally)\n     * @param {number} [byteOffset=0] (Only used internally)\n     */\n    constructor(numItems, nodeSize = 16, ArrayType = Float64Array, ArrayBufferType = ArrayBuffer, data, byteOffset = 0) {\n        if (numItems === undefined) throw new Error('Missing required argument: numItems.');\n        if (isNaN(numItems) || numItems <= 0) throw new Error(`Unexpected numItems value: ${numItems}.`);\n\n        this.numItems = +numItems;\n        this.nodeSize = Math.min(Math.max(+nodeSize, 2), 65535);\n        this.byteOffset = byteOffset;\n\n        // calculate the total number of nodes in the R-tree to allocate space for\n        // and the index of each tree level (used in search later)\n        let n = numItems;\n        let numNodes = n;\n        this._levelBounds = [n * 4];\n        do {\n            n = Math.ceil(n / this.nodeSize);\n            numNodes += n;\n            this._levelBounds.push(numNodes * 4);\n        } while (n !== 1);\n\n        this.ArrayType = ArrayType;\n        this.IndexArrayType = numNodes < 16384 ? Uint16Array : Uint32Array;\n\n        const arrayTypeIndex = ARRAY_TYPES.indexOf(this.ArrayType);\n        const nodesByteSize = numNodes * 4 * this.ArrayType.BYTES_PER_ELEMENT;\n\n        if (arrayTypeIndex < 0) {\n            throw new Error(`Unexpected typed array class: ${ArrayType}.`);\n        }\n\n        // @ts-expect-error duck typing array buffers\n        if (data && data.byteLength !== undefined && !data.buffer) {\n            this.data = data;\n            this._boxes = new this.ArrayType(this.data, byteOffset + 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, byteOffset + 8 + nodesByteSize, numNodes);\n\n            this._pos = numNodes * 4;\n            this.minX = this._boxes[this._pos - 4];\n            this.minY = this._boxes[this._pos - 3];\n            this.maxX = this._boxes[this._pos - 2];\n            this.maxY = this._boxes[this._pos - 1];\n\n        } else {\n            this.data = new ArrayBufferType(8 + nodesByteSize + numNodes * this.IndexArrayType.BYTES_PER_ELEMENT);\n            this._boxes = new this.ArrayType(this.data, 8, numNodes * 4);\n            this._indices = new this.IndexArrayType(this.data, 8 + nodesByteSize, numNodes);\n            this._pos = 0;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = -Infinity;\n            this.maxY = -Infinity;\n\n            new Uint8Array(this.data, 0, 2).set([0xfb, (VERSION << 4) + arrayTypeIndex]);\n            new Uint16Array(this.data, 2, 1)[0] = nodeSize;\n            new Uint32Array(this.data, 4, 1)[0] = numItems;\n        }\n\n        // a priority queue for k-nearest-neighbors queries\n        /** @type FlatQueue<number> */\n        this._queue = new FlatQueue();\n    }\n\n    /**\n     * Add a given rectangle to the index.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @returns {number} A zero-based, incremental number that represents the newly added rectangle.\n     */\n    add(minX, minY, maxX = minX, maxY = minY) {\n        const index = this._pos >> 2;\n        const boxes = this._boxes;\n        this._indices[index] = index;\n        boxes[this._pos++] = minX;\n        boxes[this._pos++] = minY;\n        boxes[this._pos++] = maxX;\n        boxes[this._pos++] = maxY;\n\n        if (minX < this.minX) this.minX = minX;\n        if (minY < this.minY) this.minY = minY;\n        if (maxX > this.maxX) this.maxX = maxX;\n        if (maxY > this.maxY) this.maxY = maxY;\n\n        return index;\n    }\n\n    /** Perform indexing of the added rectangles. */\n    finish() {\n        if (this._pos >> 2 !== this.numItems) {\n            throw new Error(`Added ${this._pos >> 2} items when expected ${this.numItems}.`);\n        }\n        const boxes = this._boxes;\n\n        if (this.numItems <= this.nodeSize) {\n            // only one node, skip sorting and just fill the root box\n            boxes[this._pos++] = this.minX;\n            boxes[this._pos++] = this.minY;\n            boxes[this._pos++] = this.maxX;\n            boxes[this._pos++] = this.maxY;\n            return;\n        }\n\n        const width = (this.maxX - this.minX) || 1;\n        const height = (this.maxY - this.minY) || 1;\n        const hilbertValues = new Uint32Array(this.numItems);\n        const hilbertMax = (1 << 16) - 1;\n\n        // map item centers into Hilbert coordinate space and calculate Hilbert values\n        for (let i = 0, pos = 0; i < this.numItems; i++) {\n            const minX = boxes[pos++];\n            const minY = boxes[pos++];\n            const maxX = boxes[pos++];\n            const maxY = boxes[pos++];\n            const x = Math.floor(hilbertMax * ((minX + maxX) / 2 - this.minX) / width);\n            const y = Math.floor(hilbertMax * ((minY + maxY) / 2 - this.minY) / height);\n            hilbertValues[i] = hilbert(x, y);\n        }\n\n        // sort items by their Hilbert value (for packing later)\n        sort(hilbertValues, boxes, this._indices, 0, this.numItems - 1, this.nodeSize);\n\n        // generate nodes at each tree level, bottom-up\n        for (let i = 0, pos = 0; i < this._levelBounds.length - 1; i++) {\n            const end = this._levelBounds[i];\n\n            // generate a parent node for each block of consecutive <nodeSize> nodes\n            while (pos < end) {\n                const nodeIndex = pos;\n\n                // calculate bbox for the new node\n                let nodeMinX = boxes[pos++];\n                let nodeMinY = boxes[pos++];\n                let nodeMaxX = boxes[pos++];\n                let nodeMaxY = boxes[pos++];\n                for (let j = 1; j < this.nodeSize && pos < end; j++) {\n                    nodeMinX = Math.min(nodeMinX, boxes[pos++]);\n                    nodeMinY = Math.min(nodeMinY, boxes[pos++]);\n                    nodeMaxX = Math.max(nodeMaxX, boxes[pos++]);\n                    nodeMaxY = Math.max(nodeMaxY, boxes[pos++]);\n                }\n\n                // add the new node to the tree data\n                this._indices[this._pos >> 2] = nodeIndex;\n                boxes[this._pos++] = nodeMinX;\n                boxes[this._pos++] = nodeMinY;\n                boxes[this._pos++] = nodeMaxX;\n                boxes[this._pos++] = nodeMaxY;\n            }\n        }\n    }\n\n    /**\n     * Search the index by a bounding box.\n     * @param {number} minX\n     * @param {number} minY\n     * @param {number} maxX\n     * @param {number} maxY\n     * @param {(index: number) => boolean} [filterFn] An optional function for filtering the results.\n     * @returns {number[]} An array of indices of items intersecting or touching the given bounding box.\n     */\n    search(minX, minY, maxX, maxY, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        /** @type number | undefined */\n        let nodeIndex = this._boxes.length - 4;\n        const queue = [];\n        const results = [];\n\n        while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // search through child nodes\n            for (let /** @type number */ pos = nodeIndex; pos < end; pos += 4) {\n                // check if node bbox intersects with query bbox\n                if (maxX < this._boxes[pos]) continue; // maxX < nodeMinX\n                if (maxY < this._boxes[pos + 1]) continue; // maxY < nodeMinY\n                if (minX > this._boxes[pos + 2]) continue; // minX > nodeMaxX\n                if (minY > this._boxes[pos + 3]) continue; // minY > nodeMaxY\n\n                const index = this._indices[pos >> 2] | 0;\n\n                if (nodeIndex >= this.numItems * 4) {\n                    queue.push(index); // node; add it to the search queue\n\n                } else if (filterFn === undefined || filterFn(index)) {\n                    results.push(index); // leaf item\n                }\n            }\n\n            nodeIndex = queue.pop();\n        }\n\n        return results;\n    }\n\n    /**\n     * Search items in order of distance from the given point.\n     * @param {number} x\n     * @param {number} y\n     * @param {number} [maxResults=Infinity]\n     * @param {number} [maxDistance=Infinity]\n     * @param {(index: number) => boolean} [filterFn] An optional function for filtering the results.\n     * @returns {number[]} An array of indices of items found.\n     */\n    neighbors(x, y, maxResults = Infinity, maxDistance = Infinity, filterFn) {\n        if (this._pos !== this._boxes.length) {\n            throw new Error('Data not yet indexed - call index.finish().');\n        }\n\n        /** @type number | undefined */\n        let nodeIndex = this._boxes.length - 4;\n        const q = this._queue;\n        const results = [];\n        const maxDistSquared = maxDistance * maxDistance;\n\n        outer: while (nodeIndex !== undefined) {\n            // find the end index of the node\n            const end = Math.min(nodeIndex + this.nodeSize * 4, upperBound(nodeIndex, this._levelBounds));\n\n            // add child nodes to the queue\n            for (let pos = nodeIndex; pos < end; pos += 4) {\n                const index = this._indices[pos >> 2] | 0;\n\n                const dx = axisDist(x, this._boxes[pos], this._boxes[pos + 2]);\n                const dy = axisDist(y, this._boxes[pos + 1], this._boxes[pos + 3]);\n                const dist = dx * dx + dy * dy;\n                if (dist > maxDistSquared) continue;\n\n                if (nodeIndex >= this.numItems * 4) {\n                    q.push(index << 1, dist); // node (use even id)\n\n                } else if (filterFn === undefined || filterFn(index)) {\n                    q.push((index << 1) + 1, dist); // leaf item (use odd id)\n                }\n            }\n\n            // pop items from the queue\n            // @ts-expect-error q.length check eliminates undefined values\n            while (q.length && (q.peek() & 1)) {\n                const dist = q.peekValue();\n                // @ts-expect-error\n                if (dist > maxDistSquared) break outer;\n                // @ts-expect-error\n                results.push(q.pop() >> 1);\n                if (results.length === maxResults) break outer;\n            }\n\n            // @ts-expect-error\n            nodeIndex = q.length ? q.pop() >> 1 : undefined;\n        }\n\n        q.clear();\n        return results;\n    }\n}\n\n/**\n * 1D distance from a value to a range.\n * @param {number} k\n * @param {number} min\n * @param {number} max\n */\nfunction axisDist(k, min, max) {\n    return k < min ? min - k : k <= max ? 0 : k - max;\n}\n\n/**\n * Binary search for the first value in the array bigger than the given.\n * @param {number} value\n * @param {number[]} arr\n */\nfunction upperBound(value, arr) {\n    let i = 0;\n    let j = arr.length - 1;\n    while (i < j) {\n        const m = (i + j) >> 1;\n        if (arr[m] > value) {\n            j = m;\n        } else {\n            i = m + 1;\n        }\n    }\n    return arr[i];\n}\n\n/**\n * Custom quicksort that partially sorts bbox data alongside the hilbert values.\n * @param {Uint32Array} values\n * @param {InstanceType<TypedArrayConstructor>} boxes\n * @param {Uint16Array | Uint32Array} indices\n * @param {number} left\n * @param {number} right\n * @param {number} nodeSize\n */\nfunction sort(values, boxes, indices, left, right, nodeSize) {\n    if (Math.floor(left / nodeSize) >= Math.floor(right / nodeSize)) return;\n\n    const pivot = values[(left + right) >> 1];\n    let i = left - 1;\n    let j = right + 1;\n\n    while (true) {\n        do i++; while (values[i] < pivot);\n        do j--; while (values[j] > pivot);\n        if (i >= j) break;\n        swap(values, boxes, indices, i, j);\n    }\n\n    sort(values, boxes, indices, left, j, nodeSize);\n    sort(values, boxes, indices, j + 1, right, nodeSize);\n}\n\n/**\n * Swap two values and two corresponding boxes.\n * @param {Uint32Array} values\n * @param {InstanceType<TypedArrayConstructor>} boxes\n * @param {Uint16Array | Uint32Array} indices\n * @param {number} i\n * @param {number} j\n */\nfunction swap(values, boxes, indices, i, j) {\n    const temp = values[i];\n    values[i] = values[j];\n    values[j] = temp;\n\n    const k = 4 * i;\n    const m = 4 * j;\n\n    const a = boxes[k];\n    const b = boxes[k + 1];\n    const c = boxes[k + 2];\n    const d = boxes[k + 3];\n    boxes[k] = boxes[m];\n    boxes[k + 1] = boxes[m + 1];\n    boxes[k + 2] = boxes[m + 2];\n    boxes[k + 3] = boxes[m + 3];\n    boxes[m] = a;\n    boxes[m + 1] = b;\n    boxes[m + 2] = c;\n    boxes[m + 3] = d;\n\n    const e = indices[i];\n    indices[i] = indices[j];\n    indices[j] = e;\n}\n\n/**\n * Fast Hilbert curve algorithm by http://threadlocalmutex.com/\n * Ported from C++ https://github.com/rawrunprotected/hilbert_curves (public domain)\n * @param {number} x\n * @param {number} y\n */\nfunction hilbert(x, y) {\n    let a = x ^ y;\n    let b = 0xFFFF ^ a;\n    let c = 0xFFFF ^ (x | y);\n    let d = x & (y ^ 0xFFFF);\n\n    let A = a | (b >> 1);\n    let B = (a >> 1) ^ a;\n    let C = ((c >> 1) ^ (b & (d >> 1))) ^ c;\n    let D = ((a & (c >> 1)) ^ (d >> 1)) ^ d;\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 2)) ^ (b & (b >> 2)));\n    B = ((a & (b >> 2)) ^ (b & ((a ^ b) >> 2)));\n    C ^= ((a & (c >> 2)) ^ (b & (d >> 2)));\n    D ^= ((b & (c >> 2)) ^ ((a ^ b) & (d >> 2)));\n\n    a = A; b = B; c = C; d = D;\n    A = ((a & (a >> 4)) ^ (b & (b >> 4)));\n    B = ((a & (b >> 4)) ^ (b & ((a ^ b) >> 4)));\n    C ^= ((a & (c >> 4)) ^ (b & (d >> 4)));\n    D ^= ((b & (c >> 4)) ^ ((a ^ b) & (d >> 4)));\n\n    a = A; b = B; c = C; d = D;\n    C ^= ((a & (c >> 8)) ^ (b & (d >> 8)));\n    D ^= ((b & (c >> 8)) ^ ((a ^ b) & (d >> 8)));\n\n    a = C ^ (C >> 1);\n    b = D ^ (D >> 1);\n\n    let i0 = x ^ y;\n    let i1 = b | (0xFFFF ^ (i0 | a));\n\n    i0 = (i0 | (i0 << 8)) & 0x00FF00FF;\n    i0 = (i0 | (i0 << 4)) & 0x0F0F0F0F;\n    i0 = (i0 | (i0 << 2)) & 0x33333333;\n    i0 = (i0 | (i0 << 1)) & 0x55555555;\n\n    i1 = (i1 | (i1 << 8)) & 0x00FF00FF;\n    i1 = (i1 | (i1 << 4)) & 0x0F0F0F0F;\n    i1 = (i1 | (i1 << 2)) & 0x33333333;\n    i1 = (i1 | (i1 << 1)) & 0x55555555;\n\n    return ((i1 << 1) | i0) >>> 0;\n}\n","import { ColliderC, RBushItem } from \"../Components/Collider\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport Flatbush from \"flatbush\";\r\nimport { main } from \"../main\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class CollisionDetectionPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Collision;\r\n    public name: string = \"CollisionDetectionPlugin\";\r\n    private data: RBushItem[] = [];\r\n    private tree!: Flatbush;\r\n\r\n    override update(): void {\r\n        this.checkCollisions();\r\n    }\r\n\r\n    \r\n    public overlapPoint(point: Vector): ColliderC[] { \r\n        // let colliders = this.getNearbyCircles(this.getCellKey(point));\r\n        const potentials = this.tree.search(point.x, point.y, point.x, point.y);\r\n        const colliders = potentials.map(c => this.gameWorld.getGameObject(this.data[c].colliderId)?.getComponent(ColliderC)!).filter(c => c.getCenter().sub(point).magnitude() < c.radius);\r\n        return colliders;\r\n    }\r\n\r\n    checkCollisions(): void {\r\n        let AllColliders = this.gameWorld.getComponents(ColliderC)\r\n        const length = AllColliders.length;\r\n        if (length === 0) {\r\n            this.tree = new Flatbush(1);\r\n            return;\r\n        }\r\n\r\n        this.tree = new Flatbush(length);\r\n        this.data = AllColliders.map(collider => collider.getAABB());\r\n\r\n        for (const mainCollider of AllColliders)\r\n            mainCollider.isActive = false;\r\n\r\n        for (const item of this.data) \r\n            this.tree.add(item.minX, item.minY, item.maxX, item.maxY);\r\n        this.tree.finish();\r\n\r\n        for (const mainCollider of AllColliders) {\r\n            if (mainCollider.isStatic)\r\n                continue; \r\n            let newCollisions = new Set<ColliderC>();\r\n            \r\n            const mainAABB = mainCollider.getAABB();\r\n            const potential = this.tree.search(mainAABB.minX, mainAABB.minY, mainAABB.maxX, mainAABB.maxY);\r\n\r\n            for (const item of potential) {\r\n                const otherCollider = this.gameWorld.getGameObject(this.data[item].colliderId)?.getComponent(ColliderC);\r\n                if (!otherCollider || mainCollider === otherCollider) \r\n                    continue;\r\n                \r\n                if (mainCollider.collides(otherCollider)) {\r\n                    mainCollider.isActive = true;\r\n                    otherCollider.isActive = true;\r\n                    newCollisions.add(otherCollider);\r\n                }\r\n                \r\n                for(let newC of newCollisions)\r\n                    if(!mainCollider.collisions.has(newC)) \r\n                        mainCollider.getComponent(ColliderC).onCollisionEnter(newC); \r\n                    \r\n                \r\n                mainCollider.collisions.clear();\r\n                mainCollider.collisions = newCollisions;\r\n            } \r\n        }\r\n    }\r\n}","import { rgb as rgb } from \"../Helpers/Color\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class ConfigPlugin extends Plugin{\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"ConfigPlugin\";\r\n    private readonly config: Map<string, any> = new Map(\r\n        [\r\n            [\"bulletSize\", 0.75 as any],\r\n            // [\"displayColliders\", true as any],\r\n            [\"playerSize\", 2.5 as any],\r\n            [\"bulletColor\", new rgb(56, 57, 60) as any],\r\n            // [\"playerColor\", new Color(145, 125, 39) as any],\r\n            [\"playerColor\", new rgb(122, 111, 62) as any],\r\n            [\"playerColor\", new rgb(80, 37, 36) as any],\r\n            [\"playerColor\", new rgb(59, 94, 76) as any],\r\n            [\"playerColor\", new rgb(129, 49, 54) as any],\r\n            [\"playerColor\", new rgb(130, 111, 51) as any],\r\n        ]\r\n    );\r\n\r\n    public get(key: string): any{\r\n        if (!this.config.has(key))\r\n            return undefined;\r\n\r\n        return this.config.get(key);\r\n    }\r\n    public set(key: string, value: any): void{\r\n        this.config.set(key, value);\r\n    }\r\n}","import { Component } from \"../Core/Component\";\r\nimport { Vector } from \"../Helpers/Vector\";\r\n\r\nexport class RigidBodyC extends Component {\r\n    public velocity: Vector;\r\n    public acceleration: Vector = Vector.zero();\r\n    public mass: number = 1;\r\n    public dampingFactor: number;\r\n    public angularVelocity: number = 0;\r\n    public angularAcceleration: number = 0;\r\n    public angularDrag: number = 0.25;\r\n\r\n    constructor(mass: number, dampingFactor=0.45){\r\n        super();\r\n        const s=15;\r\n        this.velocity = new Vector(Math.random()*s*2-s, Math.random()*s*2-s);\r\n        this.dampingFactor = dampingFactor;\r\n        this.mass = mass;\r\n    }\r\n\r\n    public update(delta: number): void {\r\n        this.velocity = this.velocity.add(this.acceleration.times(delta));\r\n        this.velocity = this.velocity.times(Math.pow(this.dampingFactor, delta));\r\n        this.getTransform().position = this.getTransform().position.add(this.velocity.times(delta));\r\n        this.getTransform().position = this.getTransform().position.add(this.acceleration.times(delta*delta/2));\r\n      \r\n        this.angularVelocity = this.angularVelocity+this.angularAcceleration * delta;\r\n        this.angularVelocity = this.angularVelocity*Math.pow(this.angularDrag, delta);\r\n        this.getTransform().rotation += this.angularVelocity * delta;\r\n    }\r\n}","import { RigidBodyC } from \"../Components/RigidBody\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class PhysicsPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Physics;\r\n    public name: string = \"PhysicsPlugin\";\r\n   \r\n    public override update(delta: number): void {\r\n        const totalDelta: number = this.gameWorld.getWorldTime();\r\n        this.gameWorld.getComponents(RigidBodyC).forEach(rigidBody => rigidBody.update(delta));\r\n    }\r\n}","import { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport interface IInvokable {\r\n    onInvoke(topic: string): void;\r\n}\r\n\r\ntype record = {\r\n    totalTime: number;\r\n    subscriber: WeakRef<IInvokable>; \r\n    topic: string;\r\n}\r\n\r\nexport class SchedulerPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Input;\r\n    public name: string = \"SchedulerPlugin\";\r\n    private schedule: record[] = [];\r\n\r\n    public addInvoke(subscriber: IInvokable, totalTime: number, topic: string){\r\n        let sub = new WeakRef<IInvokable>(subscriber);\r\n        this.schedule.push({totalTime, subscriber: sub, topic});\r\n        this.schedule.sort((a, b)=>b.totalTime-a.totalTime);\r\n    }\r\n\r\n    public override update(delta: number): void {\r\n        const totalDelta = this.gameWorld.getWorldTime();\r\n        if(this.schedule.length!=0)\r\n        while(this.schedule.length!=0&&this.schedule[this.schedule.length-1].totalTime<=totalDelta){\r\n            let last = this.schedule.pop()!;\r\n            last.subscriber.deref()?.onInvoke(last.topic);\r\n        }\r\n    }\r\n   \r\n}","import http from 'http';\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { Server as SocketIOServer, Socket } from 'socket.io';\r\nimport { PluginOrder } from '../Core/PluginOrder';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GameObject } from '../Core/GameObject';\r\n\r\n\r\n\r\nexport class ServerPlugin extends Plugin {\r\n  public readonly order: PluginOrder = PluginOrder.Input;\r\n  private io: SocketIOServer;\r\n  private server: http.Server;\r\n  private names: Map<string, string> = new Map(); \r\n  private mocks: Map<string, GameObject> = new Map();\r\n  \r\n\r\n  constructor() {\r\n    super();\r\n    this.server = http.createServer((req, res) => {\r\n      res.writeHead(200, { 'Content-Type': 'text/plain' });\r\n      res.end('Socket.IO server is running\\n');\r\n    });\r\n    this.io = new SocketIOServer(this.server, {\r\n      cors: {\r\n        origin: \"*\",\r\n        methods: [\"GET\", \"POST\"]\r\n      }}\r\n    );\r\n  }\r\n\r\n  onChatMessage(socket: Socket, author: string, message: string) { \r\n    console.log('Otrzymano wiadomość od ', author, ': ', message);\r\n    socket.broadcast.emit('chat_message', this.getName(socket), message);\r\n    socket.emit('response', `Odebrano wiadomość o tresci: ${message}`);\r\n  }\r\n\r\n  start() {\r\n    console.log('Uruchamianie serwera Socket.IO...');\r\n    this.server.listen(8001, () => console.log('Serwer działa na porcie 8001'));\r\n    this.io.on('connection', (socket) => this.onConnection(socket));\r\n  }\r\n\r\n  onConnection(socket: Socket): void {\r\n    // socket.broadcast.emit('chat_message', this.getName(socket), 'connected!');\r\n\r\n    socket.on('chat_message', (author: string, data: string) => this.onChatMessage(socket, author, data));\r\n    socket.on('disconnect', () => console.log('Połączenie zostało zakończone'));\r\n    socket.on('set_name', (name: string) => this.setName(socket, name));\r\n    socket.on('synchronize_go', (id: string, data: any) => this.synchronize(socket, id, data));\r\n  }\r\n\r\n\r\n  setName(socket: Socket, name: string): void {\r\n    this.names.set(socket.id, name);\r\n  }\r\n  getName(socket: Socket): string {\r\n    return this.names.get(socket.id) ?? socket.id;\r\n  }\r\n\r\n\r\n  synchronize(socket: Socket, id: string, data: any): void {\r\n    console.log(`Synchronizing ${id} with data:`, data);\r\n    // this.mocks.set(id, data);\r\n    socket.broadcast.emit('synchronize_go', id, data);\r\n  }\r\n}","import { Component } from \"../Core/Component\";\r\n\r\nexport abstract class StandaloneComponent extends Component {\r\n    private tickCount: number = 0;\r\n    private tick(delta: number): void {\r\n        if(this.tickCount == 0)\r\n            this.start();\r\n        else\r\n            this.update(delta);\r\n        this.tickCount ++;\r\n    }\r\n    protected start(): void {}; \r\n    protected update(delta: number): void {}; \r\n}","import { StandaloneComponent } from \"../Components/StandaloneComponent\";\r\nimport { Plugin } from \"../Core/Plugin\";\r\nimport { PluginOrder } from \"../Core/PluginOrder\";\r\n\r\nexport class StandaloneComponentPlugin extends Plugin {\r\n    public readonly order: PluginOrder = PluginOrder.Update;\r\n    public name: string = \"StandaloneComponentPlugin\";\r\n    override update(delta: number): void {\r\n        this.gameWorld.getAllComponents()\r\n        .filter(component => component instanceof StandaloneComponent)\r\n        .map(component => component as StandaloneComponent)\r\n        .forEach(component => (component as any).tick(delta));\r\n    }\r\n}","import { GameWorld } from \"../Core/GameWorld\";\r\nimport { CliPlugin } from \"../Plugins/CliPlugin\";\r\nimport { CollisionDetectionPlugin } from \"../Plugins/CollisionDetection\";\r\nimport { ConfigPlugin } from \"../Plugins/Config\";\r\nimport { PhysicsPlugin } from \"../Plugins/Physics\";\r\nimport { SchedulerPlugin } from \"../Plugins/Scheduler\";\r\nimport { ServerPlugin } from \"../Plugins/Server\";\r\nimport { StandaloneComponentPlugin } from \"../Plugins/StandaloneComponent\";\r\n\r\n\r\nlet lastTickTime: number = 0;\r\n\r\nasync function waitPrecise(ms: number, ltt: number) {\r\n  while (performance.now() - ltt < ms) {\r\n  }\r\n}\r\n\r\nexport async function main () {\r\n  const world: GameWorld = new GameWorld(\r\n    new ConfigPlugin(),\r\n    new CliPlugin(),\r\n    new SchedulerPlugin(),\r\n    new PhysicsPlugin(),\r\n    new CollisionDetectionPlugin(),\r\n    new StandaloneComponentPlugin(),\r\n    new ServerPlugin()\r\n  );\r\n  \r\n  \r\n\r\n  for(let i=0;;i++){\r\n    lastTickTime = performance.now();\r\n    if(i%500==0)\r\n      console.log(\"Tick: \" + i + \" at \" + performance.now().toFixed(2) + \"ms\");\r\n    await new Promise(resolve => setTimeout(resolve, 0)); \r\n    world.tick();    \r\n    await waitPrecise(20, lastTickTime); \r\n  }\r\n}\r\n\r\nmain();"],"names":["CommandResult","status","message","data","cli","name","argsSyntax","returnType","target","propertyKey","descriptor","originalMethod","ctor","cliPlugin","Plugin","args","alias","delta","plugin","value","element","GREEN","RESET","RED","__decorateClass","EventArgs","GameEvent","sub","gameWorld","derefSub","PluginOrder","KeyboardEventArgs","key","KeyboardPlugin","event","ProfilerPlugin","fps","now","values","len","mean","v","usage","max","html","i","GameWorld","plugins","a","b","gameObject","comp","id","onlyEnabled","go","classC","componentRef","component","start","eventRef","rgb","r","g","alpha","color","h","s","l","k","n","f","hue","saturation","lightness","tempElem","lastColor","computedColor","style","match","CliPlugin","iters","command","ret","result","randomColor","superResult","ansiArt","pluginName","input","depth","current","inSingleQuote","inDoubleQuote","parenDepth","char","fullCommand","p","Component","GMath","radius","angle","m1","v1","m2","v2","v1Final","v2Final","Vector","x","y","other","length","sx","sy","mx","mv","rad","range","distance","CollisionEventArgs","collider","ColliderC","isStatic","avoidObjectes","ao","center","FlatQueue","pos","parent","parentValue","top","halfLength","left","right","bestIndex","bestValue","rightValue","ARRAY_TYPES","VERSION","Flatbush","byteOffset","magic","versionAndType","version","ArrayType","nodeSize","numItems","ArrayBufferType","numNodes","arrayTypeIndex","nodesByteSize","minX","minY","maxX","maxY","index","boxes","width","height","hilbertValues","hilbertMax","hilbert","sort","end","nodeIndex","nodeMinX","nodeMinY","nodeMaxX","nodeMaxY","j","filterFn","queue","results","upperBound","maxResults","maxDistance","q","maxDistSquared","outer","dx","axisDist","dy","dist","min","arr","m","indices","pivot","swap","temp","e","c","d","A","B","C","D","i0","i1","CollisionDetectionPlugin","point","AllColliders","mainCollider","item","newCollisions","mainAABB","potential","otherCollider","newC","ConfigPlugin","RigidBodyC","mass","dampingFactor","PhysicsPlugin","rigidBody","SchedulerPlugin","subscriber","totalTime","topic","totalDelta","last","ServerPlugin","http","req","res","SocketIOServer","socket","author","StandaloneComponent","StandaloneComponentPlugin","lastTickTime","waitPrecise","ms","ltt","main","world","resolve"],"mappings":"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","x_google_ignoreList":[13,14]}